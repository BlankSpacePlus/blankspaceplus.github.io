<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>欢迎使用Hexo</title>
      <link href="/2023/07/02/huan-ying-shi-yong-hexo/"/>
      <url>/2023/07/02/huan-ying-shi-yong-hexo/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>加密算法</title>
      <link href="/2023/03/25/ji-suan-ji-ke-xue-ji-chu/jia-mi-suan-fa/"/>
      <url>/2023/03/25/ji-suan-ji-ke-xue-ji-chu/jia-mi-suan-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="常见加密算法"><a href="#常见加密算法" class="headerlink" title="常见加密算法"></a>常见加密算法</h1><ul><li>AES算法（Advanced Encryption Standard 高级加密标准）是一种常用的对称加密算法，以密码分组链接方式，依次对明文进行处理，采用了多重代换、多重转换等复杂运算，极大地增加了密码的复杂度。AES算法具有高安全性、运算速度快、适应性强等特点。</li><li>DES算法（Data Encryption Standard 数据加密标准）是一种比较基础的对称加密算法，工作模式为密码块链。DES算法使用56位密钥，将明文按8个字节一组进行加密，通过16轮之后得到密文。但是由于DES的密钥长度过短，已经不再安全。</li><li>MD5算法（Message-Digest Algorithm 5）是一种常用的哈希函数，可以将任意长度的消息摘要成固定长度（128位）的摘要信息。MD5算法具有加密速度快、输出结果长度固定等特点，主要用于数据完整性校验和数字签名等领域。</li><li>RSA算法是一种公钥加密算法，基于数学上的大质数分解问题，广泛用于数字证书、VPN等通信领域。RSA算法的关键在于找到两个足够长且不同质的素数，随机生成一个大数n为这两个素数的积，然后选择一个整数e为公钥，使得e和(n)互质。再计算出另一个整数d，使得e和d模n同余，则d为私钥，可以生成数字签名和解密加密数据。</li><li>SHA-256算法（Secure Hash Algorithm 256）是一种常用的哈希函数，与MD5相似，但输出结果更长（256位）。SHA256算法具有加密强度高、抗攻击能力强、输出结果长度长等特点，被广泛应用于密码学领域和网络安全领域。</li></ul><h1 id="AES算法"><a href="#AES算法" class="headerlink" title="AES算法"></a>AES算法</h1><p>AES（Advanced Encryption Standard）是一种对称加密算法，它是目前应用最广泛的加密算法之一，常被用于数据的加密和解密。</p><p>AES算法可以采用不同的密钥长度，包括128位、192位和256位。密钥越长，加密强度越高，但也会增加加解密的时间和计算资源的消耗。</p><p>AES算法的加密过程是通过一系列的数学运算来实现的。它使用一个密钥来对数据进行加密，然后使用同样的密钥来对加密后的数据进行解密。加密和解密过程中使用的密钥必须是相同的，因此称为对称加密算法。</p><p>AES算法中的加密和解密过程都是基于矩阵操作的。数据会被分成一系列的块，并且每个块都会被转换成一个矩阵。这些矩阵会通过一系列的变换来进行加密或解密，包括字节替换、行移位、列混淆和轮密钥加。</p><p>AES算法的加密强度很高，因为它使用的是对称加密算法，且在处理每个块时都使用了多个变换和不同的密钥。它已经成为了广泛使用的加密算法，被应用于数据传输、数据存储和加密通信等场景。</p><h2 id="AES算法实现"><a href="#AES算法实现" class="headerlink" title="AES算法实现"></a>AES算法实现</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX_LEN</span> <span class="token expression"><span class="token number">1000</span></span></span><span class="token keyword">const</span> <span class="token keyword">char</span> str16<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"0123456789abcdef"</span><span class="token punctuation">;</span><span class="token keyword">int</span> m<span class="token punctuation">[</span><span class="token number">250</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> S<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0x63</span><span class="token punctuation">,</span> <span class="token number">0x7c</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x7b</span><span class="token punctuation">,</span> <span class="token number">0xf2</span><span class="token punctuation">,</span> <span class="token number">0x6b</span><span class="token punctuation">,</span> <span class="token number">0x6f</span><span class="token punctuation">,</span> <span class="token number">0xc5</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0x2b</span><span class="token punctuation">,</span> <span class="token number">0xfe</span><span class="token punctuation">,</span> <span class="token number">0xd7</span><span class="token punctuation">,</span> <span class="token number">0xab</span><span class="token punctuation">,</span> <span class="token number">0x76</span><span class="token punctuation">,</span>                                <span class="token number">0xca</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0xc9</span><span class="token punctuation">,</span> <span class="token number">0x7d</span><span class="token punctuation">,</span> <span class="token number">0xfa</span><span class="token punctuation">,</span> <span class="token number">0x59</span><span class="token punctuation">,</span> <span class="token number">0x47</span><span class="token punctuation">,</span> <span class="token number">0xf0</span><span class="token punctuation">,</span> <span class="token number">0xad</span><span class="token punctuation">,</span> <span class="token number">0xd4</span><span class="token punctuation">,</span> <span class="token number">0xa2</span><span class="token punctuation">,</span> <span class="token number">0xaf</span><span class="token punctuation">,</span> <span class="token number">0x9c</span><span class="token punctuation">,</span> <span class="token number">0xa4</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0xc0</span><span class="token punctuation">,</span>                                <span class="token number">0xb7</span><span class="token punctuation">,</span> <span class="token number">0xfd</span><span class="token punctuation">,</span> <span class="token number">0x93</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0x3f</span><span class="token punctuation">,</span> <span class="token number">0xf7</span><span class="token punctuation">,</span> <span class="token number">0xcc</span><span class="token punctuation">,</span> <span class="token number">0x34</span><span class="token punctuation">,</span> <span class="token number">0xa5</span><span class="token punctuation">,</span> <span class="token number">0xe5</span><span class="token punctuation">,</span> <span class="token number">0xf1</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0xd8</span><span class="token punctuation">,</span> <span class="token number">0x31</span><span class="token punctuation">,</span> <span class="token number">0x15</span><span class="token punctuation">,</span>                                <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0xc7</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0xc3</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x96</span><span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">,</span> <span class="token number">0x9a</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0xe2</span><span class="token punctuation">,</span> <span class="token number">0xeb</span><span class="token punctuation">,</span> <span class="token number">0x27</span><span class="token punctuation">,</span> <span class="token number">0xb2</span><span class="token punctuation">,</span> <span class="token number">0x75</span><span class="token punctuation">,</span>                                <span class="token number">0x09</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0x2c</span><span class="token punctuation">,</span> <span class="token number">0x1a</span><span class="token punctuation">,</span> <span class="token number">0x1b</span><span class="token punctuation">,</span> <span class="token number">0x6e</span><span class="token punctuation">,</span> <span class="token number">0x5a</span><span class="token punctuation">,</span> <span class="token number">0xa0</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x3b</span><span class="token punctuation">,</span> <span class="token number">0xd6</span><span class="token punctuation">,</span> <span class="token number">0xb3</span><span class="token punctuation">,</span> <span class="token number">0x29</span><span class="token punctuation">,</span> <span class="token number">0xe3</span><span class="token punctuation">,</span> <span class="token number">0x2f</span><span class="token punctuation">,</span> <span class="token number">0x84</span><span class="token punctuation">,</span>                                <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0xd1</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xed</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0xfc</span><span class="token punctuation">,</span> <span class="token number">0xb1</span><span class="token punctuation">,</span> <span class="token number">0x5b</span><span class="token punctuation">,</span> <span class="token number">0x6a</span><span class="token punctuation">,</span> <span class="token number">0xcb</span><span class="token punctuation">,</span> <span class="token number">0xbe</span><span class="token punctuation">,</span> <span class="token number">0x39</span><span class="token punctuation">,</span> <span class="token number">0x4a</span><span class="token punctuation">,</span> <span class="token number">0x4c</span><span class="token punctuation">,</span> <span class="token number">0x58</span><span class="token punctuation">,</span> <span class="token number">0xcf</span><span class="token punctuation">,</span>                                <span class="token number">0xd0</span><span class="token punctuation">,</span> <span class="token number">0xef</span><span class="token punctuation">,</span> <span class="token number">0xaa</span><span class="token punctuation">,</span> <span class="token number">0xfb</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0x4d</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x85</span><span class="token punctuation">,</span> <span class="token number">0x45</span><span class="token punctuation">,</span> <span class="token number">0xf9</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x7f</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x3c</span><span class="token punctuation">,</span> <span class="token number">0x9f</span><span class="token punctuation">,</span> <span class="token number">0xa8</span><span class="token punctuation">,</span>                                <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0xa3</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x8f</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x9d</span><span class="token punctuation">,</span> <span class="token number">0x38</span><span class="token punctuation">,</span> <span class="token number">0xf5</span><span class="token punctuation">,</span> <span class="token number">0xbc</span><span class="token punctuation">,</span> <span class="token number">0xb6</span><span class="token punctuation">,</span> <span class="token number">0xda</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0xff</span><span class="token punctuation">,</span> <span class="token number">0xf3</span><span class="token punctuation">,</span> <span class="token number">0xd2</span><span class="token punctuation">,</span>                                <span class="token number">0xcd</span><span class="token punctuation">,</span> <span class="token number">0x0c</span><span class="token punctuation">,</span> <span class="token number">0x13</span><span class="token punctuation">,</span> <span class="token number">0xec</span><span class="token punctuation">,</span> <span class="token number">0x5f</span><span class="token punctuation">,</span> <span class="token number">0x97</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">,</span> <span class="token number">0xc4</span><span class="token punctuation">,</span> <span class="token number">0xa7</span><span class="token punctuation">,</span> <span class="token number">0x7e</span><span class="token punctuation">,</span> <span class="token number">0x3d</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span> <span class="token number">0x5d</span><span class="token punctuation">,</span> <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span>                                <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x4f</span><span class="token punctuation">,</span> <span class="token number">0xdc</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x2a</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0x46</span><span class="token punctuation">,</span> <span class="token number">0xee</span><span class="token punctuation">,</span> <span class="token number">0xb8</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0xde</span><span class="token punctuation">,</span> <span class="token number">0x5e</span><span class="token punctuation">,</span> <span class="token number">0x0b</span><span class="token punctuation">,</span> <span class="token number">0xdb</span><span class="token punctuation">,</span>                                <span class="token number">0xe0</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">,</span> <span class="token number">0x3a</span><span class="token punctuation">,</span> <span class="token number">0x0a</span><span class="token punctuation">,</span> <span class="token number">0x49</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x5c</span><span class="token punctuation">,</span> <span class="token number">0xc2</span><span class="token punctuation">,</span> <span class="token number">0xd3</span><span class="token punctuation">,</span> <span class="token number">0xac</span><span class="token punctuation">,</span> <span class="token number">0x62</span><span class="token punctuation">,</span> <span class="token number">0x91</span><span class="token punctuation">,</span> <span class="token number">0x95</span><span class="token punctuation">,</span> <span class="token number">0xe4</span><span class="token punctuation">,</span> <span class="token number">0x79</span><span class="token punctuation">,</span>                                <span class="token number">0xe7</span><span class="token punctuation">,</span> <span class="token number">0xc8</span><span class="token punctuation">,</span> <span class="token number">0x37</span><span class="token punctuation">,</span> <span class="token number">0x6d</span><span class="token punctuation">,</span> <span class="token number">0x8d</span><span class="token punctuation">,</span> <span class="token number">0xd5</span><span class="token punctuation">,</span> <span class="token number">0x4e</span><span class="token punctuation">,</span> <span class="token number">0xa9</span><span class="token punctuation">,</span> <span class="token number">0x6c</span><span class="token punctuation">,</span> <span class="token number">0x56</span><span class="token punctuation">,</span> <span class="token number">0xf4</span><span class="token punctuation">,</span> <span class="token number">0xea</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span> <span class="token number">0x7a</span><span class="token punctuation">,</span> <span class="token number">0xae</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span>                                <span class="token number">0xba</span><span class="token punctuation">,</span> <span class="token number">0x78</span><span class="token punctuation">,</span> <span class="token number">0x25</span><span class="token punctuation">,</span> <span class="token number">0x2e</span><span class="token punctuation">,</span> <span class="token number">0x1c</span><span class="token punctuation">,</span> <span class="token number">0xa6</span><span class="token punctuation">,</span> <span class="token number">0xb4</span><span class="token punctuation">,</span> <span class="token number">0xc6</span><span class="token punctuation">,</span> <span class="token number">0xe8</span><span class="token punctuation">,</span> <span class="token number">0xdd</span><span class="token punctuation">,</span> <span class="token number">0x74</span><span class="token punctuation">,</span> <span class="token number">0x1f</span><span class="token punctuation">,</span> <span class="token number">0x4b</span><span class="token punctuation">,</span> <span class="token number">0xbd</span><span class="token punctuation">,</span> <span class="token number">0x8b</span><span class="token punctuation">,</span> <span class="token number">0x8a</span><span class="token punctuation">,</span>                                <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x3e</span><span class="token punctuation">,</span> <span class="token number">0xb5</span><span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">,</span> <span class="token number">0x48</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0xf6</span><span class="token punctuation">,</span> <span class="token number">0x0e</span><span class="token punctuation">,</span> <span class="token number">0x61</span><span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0xb9</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0xc1</span><span class="token punctuation">,</span> <span class="token number">0x1d</span><span class="token punctuation">,</span> <span class="token number">0x9e</span><span class="token punctuation">,</span>                                <span class="token number">0xe1</span><span class="token punctuation">,</span> <span class="token number">0xf8</span><span class="token punctuation">,</span> <span class="token number">0x98</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0x69</span><span class="token punctuation">,</span> <span class="token number">0xd9</span><span class="token punctuation">,</span> <span class="token number">0x8e</span><span class="token punctuation">,</span> <span class="token number">0x94</span><span class="token punctuation">,</span> <span class="token number">0x9b</span><span class="token punctuation">,</span> <span class="token number">0x1e</span><span class="token punctuation">,</span> <span class="token number">0x87</span><span class="token punctuation">,</span> <span class="token number">0xe9</span><span class="token punctuation">,</span> <span class="token number">0xce</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x28</span><span class="token punctuation">,</span> <span class="token number">0xdf</span><span class="token punctuation">,</span>                                <span class="token number">0x8c</span><span class="token punctuation">,</span> <span class="token number">0xa1</span><span class="token punctuation">,</span> <span class="token number">0x89</span><span class="token punctuation">,</span> <span class="token number">0x0d</span><span class="token punctuation">,</span> <span class="token number">0xbf</span><span class="token punctuation">,</span> <span class="token number">0xe6</span><span class="token punctuation">,</span> <span class="token number">0x42</span><span class="token punctuation">,</span> <span class="token number">0x68</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x2d</span><span class="token punctuation">,</span> <span class="token number">0x0f</span><span class="token punctuation">,</span> <span class="token number">0xb0</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0xbb</span><span class="token punctuation">,</span> <span class="token number">0x16</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> SR<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x09</span><span class="token punctuation">,</span> <span class="token number">0x6a</span><span class="token punctuation">,</span> <span class="token number">0xd5</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0xa5</span><span class="token punctuation">,</span> <span class="token number">0x38</span><span class="token punctuation">,</span> <span class="token number">0xbf</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0xa3</span><span class="token punctuation">,</span> <span class="token number">0x9e</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0xf3</span><span class="token punctuation">,</span> <span class="token number">0xd7</span><span class="token punctuation">,</span> <span class="token number">0xfb</span><span class="token punctuation">,</span>                                 <span class="token number">0x7c</span><span class="token punctuation">,</span> <span class="token number">0xe3</span><span class="token punctuation">,</span> <span class="token number">0x39</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0x9b</span><span class="token punctuation">,</span> <span class="token number">0x2f</span><span class="token punctuation">,</span> <span class="token number">0xff</span><span class="token punctuation">,</span> <span class="token number">0x87</span><span class="token punctuation">,</span> <span class="token number">0x34</span><span class="token punctuation">,</span> <span class="token number">0x8e</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0xc4</span><span class="token punctuation">,</span> <span class="token number">0xde</span><span class="token punctuation">,</span> <span class="token number">0xe9</span><span class="token punctuation">,</span> <span class="token number">0xcb</span><span class="token punctuation">,</span>                                 <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x7b</span><span class="token punctuation">,</span> <span class="token number">0x94</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">,</span> <span class="token number">0xa6</span><span class="token punctuation">,</span> <span class="token number">0xc2</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0x3d</span><span class="token punctuation">,</span> <span class="token number">0xee</span><span class="token punctuation">,</span> <span class="token number">0x4c</span><span class="token punctuation">,</span> <span class="token number">0x95</span><span class="token punctuation">,</span> <span class="token number">0x0b</span><span class="token punctuation">,</span> <span class="token number">0x42</span><span class="token punctuation">,</span> <span class="token number">0xfa</span><span class="token punctuation">,</span> <span class="token number">0xc3</span><span class="token punctuation">,</span> <span class="token number">0x4e</span><span class="token punctuation">,</span>                                 <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x2e</span><span class="token punctuation">,</span> <span class="token number">0xa1</span><span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">,</span> <span class="token number">0x28</span><span class="token punctuation">,</span> <span class="token number">0xd9</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0xb2</span><span class="token punctuation">,</span> <span class="token number">0x76</span><span class="token punctuation">,</span> <span class="token number">0x5b</span><span class="token punctuation">,</span> <span class="token number">0xa2</span><span class="token punctuation">,</span> <span class="token number">0x49</span><span class="token punctuation">,</span> <span class="token number">0x6d</span><span class="token punctuation">,</span> <span class="token number">0x8b</span><span class="token punctuation">,</span> <span class="token number">0xd1</span><span class="token punctuation">,</span> <span class="token number">0x25</span><span class="token punctuation">,</span>                                 <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0xf8</span><span class="token punctuation">,</span> <span class="token number">0xf6</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0x68</span><span class="token punctuation">,</span> <span class="token number">0x98</span><span class="token punctuation">,</span> <span class="token number">0x16</span><span class="token punctuation">,</span> <span class="token number">0xd4</span><span class="token punctuation">,</span> <span class="token number">0xa4</span><span class="token punctuation">,</span> <span class="token number">0x5c</span><span class="token punctuation">,</span> <span class="token number">0xcc</span><span class="token punctuation">,</span> <span class="token number">0x5d</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span> <span class="token number">0xb6</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span>                                 <span class="token number">0x6c</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x48</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0xfd</span><span class="token punctuation">,</span> <span class="token number">0xed</span><span class="token punctuation">,</span> <span class="token number">0xb9</span><span class="token punctuation">,</span> <span class="token number">0xda</span><span class="token punctuation">,</span> <span class="token number">0x5e</span><span class="token punctuation">,</span> <span class="token number">0x15</span><span class="token punctuation">,</span> <span class="token number">0x46</span><span class="token punctuation">,</span> <span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0xa7</span><span class="token punctuation">,</span> <span class="token number">0x8d</span><span class="token punctuation">,</span> <span class="token number">0x9d</span><span class="token punctuation">,</span> <span class="token number">0x84</span><span class="token punctuation">,</span>                                 <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0xd8</span><span class="token punctuation">,</span> <span class="token number">0xab</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x8c</span><span class="token punctuation">,</span> <span class="token number">0xbc</span><span class="token punctuation">,</span> <span class="token number">0xd3</span><span class="token punctuation">,</span> <span class="token number">0x0a</span><span class="token punctuation">,</span> <span class="token number">0xf7</span><span class="token punctuation">,</span> <span class="token number">0xe4</span><span class="token punctuation">,</span> <span class="token number">0x58</span><span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">,</span> <span class="token number">0xb8</span><span class="token punctuation">,</span> <span class="token number">0xb3</span><span class="token punctuation">,</span> <span class="token number">0x45</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span>                                 <span class="token number">0xd0</span><span class="token punctuation">,</span> <span class="token number">0x2c</span><span class="token punctuation">,</span> <span class="token number">0x1e</span><span class="token punctuation">,</span> <span class="token number">0x8f</span><span class="token punctuation">,</span> <span class="token number">0xca</span><span class="token punctuation">,</span> <span class="token number">0x3f</span><span class="token punctuation">,</span> <span class="token number">0x0f</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0xc1</span><span class="token punctuation">,</span> <span class="token number">0xaf</span><span class="token punctuation">,</span> <span class="token number">0xbd</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x13</span><span class="token punctuation">,</span> <span class="token number">0x8a</span><span class="token punctuation">,</span> <span class="token number">0x6b</span><span class="token punctuation">,</span>                                 <span class="token number">0x3a</span><span class="token punctuation">,</span> <span class="token number">0x91</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0x4f</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0xdc</span><span class="token punctuation">,</span> <span class="token number">0xea</span><span class="token punctuation">,</span> <span class="token number">0x97</span><span class="token punctuation">,</span> <span class="token number">0xf2</span><span class="token punctuation">,</span> <span class="token number">0xcf</span><span class="token punctuation">,</span> <span class="token number">0xce</span><span class="token punctuation">,</span> <span class="token number">0xf0</span><span class="token punctuation">,</span> <span class="token number">0xb4</span><span class="token punctuation">,</span> <span class="token number">0xe6</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span>                                 <span class="token number">0x96</span><span class="token punctuation">,</span> <span class="token number">0xac</span><span class="token punctuation">,</span> <span class="token number">0x74</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0xe7</span><span class="token punctuation">,</span> <span class="token number">0xad</span><span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x85</span><span class="token punctuation">,</span> <span class="token number">0xe2</span><span class="token punctuation">,</span> <span class="token number">0xf9</span><span class="token punctuation">,</span> <span class="token number">0x37</span><span class="token punctuation">,</span> <span class="token number">0xe8</span><span class="token punctuation">,</span> <span class="token number">0x1c</span><span class="token punctuation">,</span> <span class="token number">0x75</span><span class="token punctuation">,</span> <span class="token number">0xdf</span><span class="token punctuation">,</span> <span class="token number">0x6e</span><span class="token punctuation">,</span>                                 <span class="token number">0x47</span><span class="token punctuation">,</span> <span class="token number">0xf1</span><span class="token punctuation">,</span> <span class="token number">0x1a</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x1d</span><span class="token punctuation">,</span> <span class="token number">0x29</span><span class="token punctuation">,</span> <span class="token number">0xc5</span><span class="token punctuation">,</span> <span class="token number">0x89</span><span class="token punctuation">,</span> <span class="token number">0x6f</span><span class="token punctuation">,</span> <span class="token number">0xb7</span><span class="token punctuation">,</span> <span class="token number">0x62</span><span class="token punctuation">,</span> <span class="token number">0x0e</span><span class="token punctuation">,</span> <span class="token number">0xaa</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0xbe</span><span class="token punctuation">,</span> <span class="token number">0x1b</span><span class="token punctuation">,</span>                                 <span class="token number">0xfc</span><span class="token punctuation">,</span> <span class="token number">0x56</span><span class="token punctuation">,</span> <span class="token number">0x3e</span><span class="token punctuation">,</span> <span class="token number">0x4b</span><span class="token punctuation">,</span> <span class="token number">0xc6</span><span class="token punctuation">,</span> <span class="token number">0xd2</span><span class="token punctuation">,</span> <span class="token number">0x79</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x9a</span><span class="token punctuation">,</span> <span class="token number">0xdb</span><span class="token punctuation">,</span> <span class="token number">0xc0</span><span class="token punctuation">,</span> <span class="token number">0xfe</span><span class="token punctuation">,</span> <span class="token number">0x78</span><span class="token punctuation">,</span> <span class="token number">0xcd</span><span class="token punctuation">,</span> <span class="token number">0x5a</span><span class="token punctuation">,</span> <span class="token number">0xf4</span><span class="token punctuation">,</span>                                 <span class="token number">0x1f</span><span class="token punctuation">,</span> <span class="token number">0xdd</span><span class="token punctuation">,</span> <span class="token number">0xa8</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0xc7</span><span class="token punctuation">,</span> <span class="token number">0x31</span><span class="token punctuation">,</span> <span class="token number">0xb1</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x59</span><span class="token punctuation">,</span> <span class="token number">0x27</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0xec</span><span class="token punctuation">,</span> <span class="token number">0x5f</span><span class="token punctuation">,</span>                                 <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x7f</span><span class="token punctuation">,</span> <span class="token number">0xa9</span><span class="token punctuation">,</span> <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0xb5</span><span class="token punctuation">,</span> <span class="token number">0x4a</span><span class="token punctuation">,</span> <span class="token number">0x0d</span><span class="token punctuation">,</span> <span class="token number">0x2d</span><span class="token punctuation">,</span> <span class="token number">0xe5</span><span class="token punctuation">,</span> <span class="token number">0x7a</span><span class="token punctuation">,</span> <span class="token number">0x9f</span><span class="token punctuation">,</span> <span class="token number">0x93</span><span class="token punctuation">,</span> <span class="token number">0xc9</span><span class="token punctuation">,</span> <span class="token number">0x9c</span><span class="token punctuation">,</span> <span class="token number">0xef</span><span class="token punctuation">,</span>                                 <span class="token number">0xa0</span><span class="token punctuation">,</span> <span class="token number">0xe0</span><span class="token punctuation">,</span> <span class="token number">0x3b</span><span class="token punctuation">,</span> <span class="token number">0x4d</span><span class="token punctuation">,</span> <span class="token number">0xae</span><span class="token punctuation">,</span> <span class="token number">0x2a</span><span class="token punctuation">,</span> <span class="token number">0xf5</span><span class="token punctuation">,</span> <span class="token number">0xb0</span><span class="token punctuation">,</span> <span class="token number">0xc8</span><span class="token punctuation">,</span> <span class="token number">0xeb</span><span class="token punctuation">,</span> <span class="token number">0xbb</span><span class="token punctuation">,</span> <span class="token number">0x3c</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x61</span><span class="token punctuation">,</span>                                 <span class="token number">0x17</span><span class="token punctuation">,</span> <span class="token number">0x2b</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x7e</span><span class="token punctuation">,</span> <span class="token number">0xba</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xd6</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span> <span class="token number">0xe1</span><span class="token punctuation">,</span> <span class="token number">0x69</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0x63</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x0c</span><span class="token punctuation">,</span> <span class="token number">0x7d</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> Rcon<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0x01000000</span><span class="token punctuation">,</span> <span class="token number">0x02000000</span><span class="token punctuation">,</span>                               <span class="token number">0x04000000</span><span class="token punctuation">,</span> <span class="token number">0x08000000</span><span class="token punctuation">,</span>                               <span class="token number">0x10000000</span><span class="token punctuation">,</span> <span class="token number">0x20000000</span><span class="token punctuation">,</span>                               <span class="token number">0x40000000</span><span class="token punctuation">,</span> <span class="token number">0x80000000</span><span class="token punctuation">,</span>                               <span class="token number">0x1b000000</span><span class="token punctuation">,</span> <span class="token number">0x36000000</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> colM<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>                        <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>                        <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span>                        <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> colMR<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span>                         <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span>                         <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span>                         <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> w<span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">substitute</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span>state<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> tmp<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        tmp <span class="token operator">=</span> state<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        state<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> S<span class="token punctuation">[</span>tmp <span class="token operator">/</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">[</span>tmp <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">substituteR</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span>state<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> tmp<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        tmp <span class="token operator">=</span> state<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        state<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> SR<span class="token punctuation">[</span>tmp <span class="token operator">/</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">[</span>tmp <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">row_shift</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span>state<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> tmp<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            tmp<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> j <span class="token operator">+</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> state<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">*</span> j <span class="token operator">+</span> <span class="token number">5</span> <span class="token operator">*</span> i<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            state<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> j <span class="token operator">+</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> j <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">row_shiftR</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span>state<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> tmp<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            tmp<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> j <span class="token operator">+</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> state<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">*</span> j <span class="token operator">-</span> <span class="token number">3</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            state<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> j <span class="token operator">+</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> j <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token function">multi</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> a<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> v<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>b <span class="token operator">&amp;</span> <span class="token number">0x01</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            ans <span class="token operator">^=</span> a<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        v <span class="token operator">=</span> a <span class="token operator">&gt;&gt;</span> <span class="token number">7</span><span class="token punctuation">;</span>        a <span class="token operator">=</span> a <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            a <span class="token operator">^=</span> <span class="token number">0x1b</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        b <span class="token operator">=</span> b <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> ans<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">col_mix</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span>state<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> tmp<span class="token punctuation">,</span> statep<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            tmp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                tmp <span class="token operator">^=</span> <span class="token function">multi</span><span class="token punctuation">(</span>colM<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> state<span class="token punctuation">[</span>k <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            statep<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> j<span class="token punctuation">]</span> <span class="token operator">=</span> tmp <span class="token operator">&amp;</span> <span class="token number">0x00ff</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        state<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> statep<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">col_mixR</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span>state<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> tmp<span class="token punctuation">,</span> statep<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            tmp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                tmp <span class="token operator">=</span> tmp <span class="token operator">^</span> <span class="token function">multi</span><span class="token punctuation">(</span>colMR<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> state<span class="token punctuation">[</span>k <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            statep<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> j<span class="token punctuation">]</span> <span class="token operator">=</span> tmp <span class="token operator">&amp;</span> <span class="token number">0x00ff</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        state<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> statep<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token function">T</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> t<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> tmp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> r<span class="token punctuation">,</span> c<span class="token punctuation">;</span>    x <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;&gt;</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        c <span class="token operator">=</span> x <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">;</span>        x <span class="token operator">&gt;&gt;=</span> <span class="token number">4</span><span class="token punctuation">;</span>        r <span class="token operator">=</span> x <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">;</span>        x <span class="token operator">&gt;&gt;=</span> <span class="token number">4</span><span class="token punctuation">;</span>        tmp <span class="token operator">|=</span> S<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token number">8</span> <span class="token operator">*</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    tmp <span class="token operator">^=</span> Rcon<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> tmp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">generate_w</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>strk<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> tmp<span class="token punctuation">,</span> key<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        key<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span>strk<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        w<span class="token punctuation">[</span>i <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">|=</span> key<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">-</span> i <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">44</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            w<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> w<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">^</span> w<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span>        <span class="token punctuation">{</span>            w<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> w<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token function">T</span><span class="token punctuation">(</span>w<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> i <span class="token operator">/</span> <span class="token number">4</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span>state<span class="token punctuation">,</span> <span class="token keyword">int</span> t<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> tmp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        tmp <span class="token operator">|=</span> state<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">-</span> i <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            tmp <span class="token operator">^=</span> w<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> t <span class="token operator">+</span> i <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                state<span class="token punctuation">[</span>i <span class="token operator">-</span> j<span class="token punctuation">]</span> <span class="token operator">=</span> tmp <span class="token operator">%</span> <span class="token number">256</span><span class="token punctuation">;</span>                tmp <span class="token operator">&gt;&gt;=</span> <span class="token number">8</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            tmp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">int_to_str_en</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span>ct<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">char</span> ans<span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    ans<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">'\0'</span><span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> tmp<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        tmp <span class="token operator">=</span> ct<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        ans<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> str16<span class="token punctuation">[</span><span class="token punctuation">(</span>tmp <span class="token operator">/</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        ans<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> str16<span class="token punctuation">[</span>tmp <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> ans<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">int_to_str_de</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span>ct<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">char</span> anst<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    anst<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">'\0'</span><span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> tmp<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        tmp <span class="token operator">=</span> ct<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        anst<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>tmp<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> anst<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">aes_encode</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>strx<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>strk<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span>strx<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">16</span> <span class="token operator">&amp;&amp;</span> <span class="token function">strlen</span><span class="token punctuation">(</span>strk<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">"invalid length"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> bit<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        bit<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span>strx<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">generate_w</span><span class="token punctuation">(</span>strk<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">add</span><span class="token punctuation">(</span>bit<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> t <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> t<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">substitute</span><span class="token punctuation">(</span>bit<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">row_shift</span><span class="token punctuation">(</span>bit<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">col_mix</span><span class="token punctuation">(</span>bit<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">add</span><span class="token punctuation">(</span>bit<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">substitute</span><span class="token punctuation">(</span>bit<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">row_shift</span><span class="token punctuation">(</span>bit<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">add</span><span class="token punctuation">(</span>bit<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">int_to_str_en</span><span class="token punctuation">(</span>bit<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">aes_decode</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>strx<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>strk<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span>strx<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">32</span> <span class="token operator">&amp;&amp;</span> <span class="token function">strlen</span><span class="token punctuation">(</span>strk<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">"invalid length"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    m<span class="token punctuation">[</span><span class="token char">'0'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'2'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'3'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'4'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'5'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'6'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'7'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'8'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'9'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'a'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'b'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'c'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'d'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">13</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'e'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">14</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'f'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> bit<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        bit<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> m<span class="token punctuation">[</span>strx<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        bit<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>bit<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">|</span> m<span class="token punctuation">[</span>strx<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">generate_w</span><span class="token punctuation">(</span>strk<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">add</span><span class="token punctuation">(</span>bit<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span> t <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> t<span class="token operator">--</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">row_shiftR</span><span class="token punctuation">(</span>bit<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">substituteR</span><span class="token punctuation">(</span>bit<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">add</span><span class="token punctuation">(</span>bit<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">col_mixR</span><span class="token punctuation">(</span>bit<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">row_shiftR</span><span class="token punctuation">(</span>bit<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">substituteR</span><span class="token punctuation">(</span>bit<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">add</span><span class="token punctuation">(</span>bit<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">int_to_str_de</span><span class="token punctuation">(</span>bit<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token number">1</span></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">char</span> <span class="token operator">*</span>option<span class="token punctuation">,</span> <span class="token operator">*</span>text<span class="token punctuation">,</span> <span class="token operator">*</span>key<span class="token punctuation">,</span> <span class="token operator">*</span>out<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>argc <span class="token operator">!=</span> <span class="token number">4</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Usage: aes &lt;--encode | --decode&gt; &lt;text&gt; &lt;key&gt;\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span>    <span class="token punctuation">{</span>        option <span class="token operator">=</span> argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        text <span class="token operator">=</span> argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        key <span class="token operator">=</span> argv<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>option<span class="token punctuation">,</span> <span class="token string">"--encode"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            out <span class="token operator">=</span> <span class="token function">aes_encode</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">puts</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>option<span class="token punctuation">,</span> <span class="token string">"--decode"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            out <span class="token operator">=</span> <span class="token function">aes_decode</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">puts</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span>        <span class="token punctuation">{</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Usage: aes &lt;--encode | --decode&gt; &lt;text&gt; &lt;key&gt;\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="DES算法"><a href="#DES算法" class="headerlink" title="DES算法"></a>DES算法</h1><p>DES（Data Encryption Standard）算法是一种对称加密算法，也是一种古老的加密算法。它使用一个密钥来对数据进行加密和解密，密钥长度为56位。</p><p>DES算法的加密和解密过程都是通过一系列的替换、置换和混淆等操作来实现的。加密过程中，数据会被分成64位的块，然后通过16轮的迭代来进行加密。每轮加密中，数据会经过初始置换、Feistel网络、轮密钥加和逆置换等步骤。其中Feistel网络是DES算法的核心部分，它通过迭代的方式来对数据进行加密和解密。在每轮加密中，会使用不同的子密钥进行处理，子密钥是从主密钥中派生出来的。</p><p>DES算法虽然曾经是广泛使用的加密算法，但由于密钥长度过短，加密强度较弱，易受到暴力破解攻击，因此已经逐渐被更安全的加密算法所取代，如AES算法等。为了提高DES算法的安全性，后来又出现了3DES算法，它是通过对数据进行三次DES加密来提高加密强度。</p><h2 id="DES算法实现"><a href="#DES算法实现" class="headerlink" title="DES算法实现"></a>DES算法实现</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX_LEN</span> <span class="token expression"><span class="token number">1000</span></span></span><span class="token keyword">const</span> <span class="token keyword">char</span> str16<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"0123456789abcdef"</span><span class="token punctuation">;</span><span class="token keyword">int</span> m<span class="token punctuation">[</span><span class="token number">250</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//置换IP表</span><span class="token keyword">const</span> <span class="token keyword">int</span> IP<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span>    <span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span>    <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span>    <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//逆置换IP-1表</span><span class="token keyword">const</span> <span class="token keyword">int</span> IPR<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span>    <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span>    <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span>    <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">// E位选择表(扩展置换表)</span><span class="token keyword">const</span> <span class="token keyword">int</span> E<span class="token punctuation">[</span><span class="token number">48</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span>    <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span>    <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span>    <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">// P换位表(单纯换位表)</span><span class="token keyword">const</span> <span class="token keyword">int</span> P<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span>    <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">// PC1选位表(密钥生成置换表1)</span><span class="token keyword">const</span> <span class="token keyword">int</span> PC1<span class="token punctuation">[</span><span class="token number">56</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span>    <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span>    <span class="token number">63</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span>    <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">// PC2选位表(密钥生成置换表2)</span><span class="token keyword">const</span> <span class="token keyword">int</span> PC2<span class="token punctuation">[</span><span class="token number">48</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span>    <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span>    <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span>    <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//左移位数表</span><span class="token keyword">const</span> <span class="token keyword">int</span> LOOP<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">// S盒</span><span class="token keyword">const</span> <span class="token keyword">int</span> S<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token comment">// S1</span>    <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span>    <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span>    <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span>    <span class="token comment">// S2</span>    <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span>    <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span>    <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span>    <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span>    <span class="token comment">// S3</span>    <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span>    <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span>    <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span>    <span class="token comment">// S4</span>    <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span>    <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span>    <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span>    <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span>    <span class="token comment">// S5</span>    <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span>    <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span>    <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span>    <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span>    <span class="token comment">// S6</span>    <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span>    <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span>    <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span>    <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span>    <span class="token comment">// S7</span>    <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span>    <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span>    <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span>    <span class="token comment">// S8</span>    <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span>    <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span>    <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span>    <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">int</span> L<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">,</span> R<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">,</span> C<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">,</span> D<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">,</span> K<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">48</span><span class="token punctuation">]</span><span class="token punctuation">,</span> FT<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">padding</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>str<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>rep<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        rep<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>i <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">&gt;&gt;</span> <span class="token punctuation">(</span><span class="token number">7</span> <span class="token operator">-</span> i <span class="token operator">%</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x01</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">ip_permutate</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>X<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        L<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> X<span class="token punctuation">[</span>IP<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        R<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> X<span class="token punctuation">[</span>IP<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">32</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">key_generate</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>X<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">28</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        C<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> X<span class="token punctuation">[</span>PC1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        D<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> X<span class="token punctuation">[</span>PC1<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">28</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">28</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            C<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> C<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span>j <span class="token operator">+</span> LOOP<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            D<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> D<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span>j <span class="token operator">+</span> LOOP<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">48</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>PC2<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">28</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                K<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> C<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>PC2<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span>            <span class="token punctuation">{</span>                K<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> D<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>PC2<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">F</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>X<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>Y<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>f<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> e<span class="token punctuation">[</span><span class="token number">48</span><span class="token punctuation">]</span><span class="token punctuation">,</span> r<span class="token punctuation">,</span> c<span class="token punctuation">,</span> p<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">,</span> res<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">48</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        e<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> X<span class="token punctuation">[</span>E<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        e<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> Y<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x01</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        r <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">[</span><span class="token number">6</span> <span class="token operator">*</span> i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">|</span> e<span class="token punctuation">[</span><span class="token number">6</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        c <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">[</span><span class="token number">6</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>e<span class="token punctuation">[</span><span class="token number">6</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>e<span class="token punctuation">[</span><span class="token number">6</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">|</span> e<span class="token punctuation">[</span><span class="token number">6</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        res <span class="token operator">=</span> S<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            p<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> i <span class="token operator">+</span> j<span class="token punctuation">]</span> <span class="token operator">=</span> res <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">;</span>            res <span class="token operator">/=</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        f<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> p<span class="token punctuation">[</span>P<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">calculate_en</span><span class="token punctuation">(</span><span class="token keyword">int</span> t<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> f<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">F</span><span class="token punctuation">(</span>R<span class="token punctuation">[</span>t <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> K<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        L<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> R<span class="token punctuation">[</span>t <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        R<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> L<span class="token punctuation">[</span>t <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">calculate_de</span><span class="token punctuation">(</span><span class="token keyword">int</span> t<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> f<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">F</span><span class="token punctuation">(</span>R<span class="token punctuation">[</span>t <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> K<span class="token punctuation">[</span><span class="token number">17</span> <span class="token operator">-</span> t<span class="token punctuation">]</span><span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        L<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> R<span class="token punctuation">[</span>t <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        R<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> L<span class="token punctuation">[</span>t <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">ip_reverse</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>X<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>Y<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">64</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>IPR<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">32</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            FT<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> X<span class="token punctuation">[</span>IPR<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span>        <span class="token punctuation">{</span>            FT<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Y<span class="token punctuation">[</span>IPR<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">int_to_str_en</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>ct<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">char</span> ans<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    ans<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">'\0'</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> tmp<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        tmp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            tmp <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> tmp <span class="token operator">+</span> ct<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> i <span class="token operator">+</span> j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        ans<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> str16<span class="token punctuation">[</span>tmp<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> ans<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">int_to_str_de</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>ct<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">char</span> anst<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    anst<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">'\0'</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> tmp<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        tmp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            tmp <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> tmp <span class="token operator">+</span> ct<span class="token punctuation">[</span><span class="token number">8</span> <span class="token operator">*</span> i <span class="token operator">+</span> j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        anst<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>tmp<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> anst<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">des_encode</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>strx<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>strk<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span>strx<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">8</span> <span class="token operator">&amp;&amp;</span> <span class="token function">strlen</span><span class="token punctuation">(</span>strk<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">"invalid length"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">int</span> bit<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> key<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token function">padding</span><span class="token punctuation">(</span>strx<span class="token punctuation">,</span> bit<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">padding</span><span class="token punctuation">(</span>strk<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">ip_permutate</span><span class="token punctuation">(</span>bit<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">key_generate</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">calculate_en</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">ip_reverse</span><span class="token punctuation">(</span>R<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">,</span> L<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">int_to_str_en</span><span class="token punctuation">(</span>FT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">des_decode</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>strx<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>strk<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span>strx<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">16</span> <span class="token operator">&amp;&amp;</span> <span class="token function">strlen</span><span class="token punctuation">(</span>strk<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">"invalid length"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    m<span class="token punctuation">[</span><span class="token char">'0'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'2'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'3'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'4'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'5'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'6'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'7'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'8'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'9'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'a'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'b'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'c'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'d'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">13</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'e'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">14</span><span class="token punctuation">;</span>    m<span class="token punctuation">[</span><span class="token char">'f'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> bit<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> key<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> res<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span>strx<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        res <span class="token operator">=</span> m<span class="token punctuation">[</span>strx<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            bit<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> i <span class="token operator">+</span> j<span class="token punctuation">]</span> <span class="token operator">=</span> res <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">;</span>            res <span class="token operator">/=</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token function">padding</span><span class="token punctuation">(</span>strk<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">ip_permutate</span><span class="token punctuation">(</span>bit<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">key_generate</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">calculate_de</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">ip_reverse</span><span class="token punctuation">(</span>R<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">,</span> L<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">int_to_str_de</span><span class="token punctuation">(</span>FT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token number">1</span></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">char</span> <span class="token operator">*</span>option<span class="token punctuation">,</span> <span class="token operator">*</span>text<span class="token punctuation">,</span> <span class="token operator">*</span>key<span class="token punctuation">,</span> <span class="token operator">*</span>out<span class="token punctuation">;</span>    <span class="token comment">// 64bit - 8char</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>argc <span class="token operator">!=</span> <span class="token number">4</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Usage: des &lt;--encode | --decode&gt; &lt;text&gt; &lt;key&gt;\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span>    <span class="token punctuation">{</span>        option <span class="token operator">=</span> argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        text <span class="token operator">=</span> argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        key <span class="token operator">=</span> argv<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>option<span class="token punctuation">,</span> <span class="token string">"--encode"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            out <span class="token operator">=</span> <span class="token function">des_encode</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">puts</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>option<span class="token punctuation">,</span> <span class="token string">"--decode"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            out <span class="token operator">=</span> <span class="token function">des_decode</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">puts</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span>        <span class="token punctuation">{</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Usage: des &lt;--encode | --decode&gt; &lt;text&gt; &lt;key&gt;\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="MD5算法"><a href="#MD5算法" class="headerlink" title="MD5算法"></a>MD5算法</h1><p>MD5是一种广泛使用的加密算法，它将任意长度的消息作为输入，并生成一个128位的哈希值作为输出。MD5的哈希值通常表示为32个十六进制数。</p><p>MD5这个名字是“Message-Digest Algorithm 5”的缩写，它由Ron Rivest于1991年创建。MD5采用了一系列数据处理步骤来生成哈希值。</p><p>首先，MD5会对输入消息进行填充（padding），使其长度为64的倍数。填充方式是在消息末尾添加一些比特，以使其长度达到64的倍数，同时保留原始消息的内容。填充后的消息被划分成512比特（64字节）的块，每个块再进行一系列运算，最终得到一个哈希值。</p><p>具体来说，MD5会将每个512比特的块划分成16个32比特的子块。然后，MD5会执行四轮处理，每轮处理包括以下四个步骤：</p><ol><li>置换（Substitution）：MD5会对每个子块进行一系列置换操作，将输入框中的32位二进制数转换为另一组32位数。</li><li>排序（Permutation）：MD5会根据一定规则对子块进行排序。</li><li>循环移位（Shift）：MD5会对子块进行一定的左移操作。</li><li>加（Addition）：MD5会将子块与上一轮处理后的结果相加，生成一个新的结果。</li></ol><p>经过四轮处理，最终可以得到一个128比特的哈希值。这个哈希值是唯一的，并且对于不同的输入数据，它也会生成不同的哈希值。因此，MD5可以用于验证数据的完整性，以及密码的安全性等方面。</p><p>尽管MD5在密码学中拥有广泛的应用，但它已经被证明存在一些漏洞，使其变得不太安全。在现代密码学中，通常使用更强大的算法，如SHA-256等来代替MD5。</p><h2 id="MD5算法实现"><a href="#MD5算法实现" class="headerlink" title="MD5算法实现"></a>MD5算法实现</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">A</span> <span class="token expression"><span class="token number">0x67452301</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">B</span> <span class="token expression"><span class="token number">0xefcdab89</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">C</span> <span class="token expression"><span class="token number">0x98badcfe</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">D</span> <span class="token expression"><span class="token number">0x10325476</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX_LEN</span> <span class="token expression"><span class="token number">1000</span></span></span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> strlength<span class="token punctuation">,</span> num<span class="token punctuation">,</span> FA<span class="token punctuation">,</span> FB<span class="token punctuation">,</span> FC<span class="token punctuation">,</span> FD<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">char</span> str16<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"0123456789abcdef"</span><span class="token punctuation">;</span><span class="token comment">// 4*16</span><span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> T<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0xd76aa478</span><span class="token punctuation">,</span> <span class="token number">0xe8c7b756</span><span class="token punctuation">,</span> <span class="token number">0x242070db</span><span class="token punctuation">,</span> <span class="token number">0xc1bdceee</span><span class="token punctuation">,</span> <span class="token number">0xf57c0faf</span><span class="token punctuation">,</span> <span class="token number">0x4787c62a</span><span class="token punctuation">,</span><span class="token number">0xa8304613</span><span class="token punctuation">,</span> <span class="token number">0xfd469501</span><span class="token punctuation">,</span> <span class="token number">0x698098d8</span><span class="token punctuation">,</span> <span class="token number">0x8b44f7af</span><span class="token punctuation">,</span> <span class="token number">0xffff5bb1</span><span class="token punctuation">,</span> <span class="token number">0x895cd7be</span><span class="token punctuation">,</span><span class="token number">0x6b901122</span><span class="token punctuation">,</span> <span class="token number">0xfd987193</span><span class="token punctuation">,</span> <span class="token number">0xa679438e</span><span class="token punctuation">,</span> <span class="token number">0x49b40821</span><span class="token punctuation">,</span> <span class="token number">0xf61e2562</span><span class="token punctuation">,</span> <span class="token number">0xc040b340</span><span class="token punctuation">,</span><span class="token number">0x265e5a51</span><span class="token punctuation">,</span> <span class="token number">0xe9b6c7aa</span><span class="token punctuation">,</span> <span class="token number">0xd62f105d</span><span class="token punctuation">,</span> <span class="token number">0x02441453</span><span class="token punctuation">,</span> <span class="token number">0xd8a1e681</span><span class="token punctuation">,</span> <span class="token number">0xe7d3fbc8</span><span class="token punctuation">,</span><span class="token number">0x21e1cde6</span><span class="token punctuation">,</span> <span class="token number">0xc33707d6</span><span class="token punctuation">,</span> <span class="token number">0xf4d50d87</span><span class="token punctuation">,</span> <span class="token number">0x455a14ed</span><span class="token punctuation">,</span> <span class="token number">0xa9e3e905</span><span class="token punctuation">,</span> <span class="token number">0xfcefa3f8</span><span class="token punctuation">,</span><span class="token number">0x676f02d9</span><span class="token punctuation">,</span> <span class="token number">0x8d2a4c8a</span><span class="token punctuation">,</span> <span class="token number">0xfffa3942</span><span class="token punctuation">,</span> <span class="token number">0x8771f681</span><span class="token punctuation">,</span> <span class="token number">0x6d9d6122</span><span class="token punctuation">,</span> <span class="token number">0xfde5380c</span><span class="token punctuation">,</span><span class="token number">0xa4beea44</span><span class="token punctuation">,</span> <span class="token number">0x4bdecfa9</span><span class="token punctuation">,</span> <span class="token number">0xf6bb4b60</span><span class="token punctuation">,</span> <span class="token number">0xbebfbc70</span><span class="token punctuation">,</span> <span class="token number">0x289b7ec6</span><span class="token punctuation">,</span> <span class="token number">0xeaa127fa</span><span class="token punctuation">,</span><span class="token number">0xd4ef3085</span><span class="token punctuation">,</span> <span class="token number">0x04881d05</span><span class="token punctuation">,</span> <span class="token number">0xd9d4d039</span><span class="token punctuation">,</span> <span class="token number">0xe6db99e5</span><span class="token punctuation">,</span> <span class="token number">0x1fa27cf8</span><span class="token punctuation">,</span> <span class="token number">0xc4ac5665</span><span class="token punctuation">,</span><span class="token number">0xf4292244</span><span class="token punctuation">,</span> <span class="token number">0x432aff97</span><span class="token punctuation">,</span> <span class="token number">0xab9423a7</span><span class="token punctuation">,</span> <span class="token number">0xfc93a039</span><span class="token punctuation">,</span> <span class="token number">0x655b59c3</span><span class="token punctuation">,</span> <span class="token number">0x8f0ccc92</span><span class="token punctuation">,</span><span class="token number">0xffeff47d</span><span class="token punctuation">,</span> <span class="token number">0x85845dd1</span><span class="token punctuation">,</span> <span class="token number">0x6fa87e4f</span><span class="token punctuation">,</span> <span class="token number">0xfe2ce6e0</span><span class="token punctuation">,</span> <span class="token number">0xa3014314</span><span class="token punctuation">,</span> <span class="token number">0x4e0811a1</span><span class="token punctuation">,</span><span class="token number">0xf7537e82</span><span class="token punctuation">,</span> <span class="token number">0xbd3af235</span><span class="token punctuation">,</span> <span class="token number">0x2ad7d2bb</span><span class="token punctuation">,</span> <span class="token number">0xeb86d391</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> s<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span>  <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span>  <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span>  <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span>  <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token function">F</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> X<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> Y<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> Z<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">(</span>X <span class="token operator">&amp;</span> Y<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token operator">~</span>X <span class="token operator">&amp;</span> Z<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token function">G</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> X<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> Y<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> Z<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">(</span>X <span class="token operator">&amp;</span> Z<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>Y <span class="token operator">&amp;</span> <span class="token operator">~</span>Z<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token function">H</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> X<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> Y<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> Z<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> X <span class="token operator">^</span> Y <span class="token operator">^</span> Z<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token function">I</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> X<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> Y<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> Z<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> Y <span class="token operator">^</span> <span class="token punctuation">(</span>X <span class="token operator">|</span> <span class="token operator">~</span>Z<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>str<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> slen <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>num <span class="token operator">=</span> <span class="token punctuation">(</span>slen <span class="token operator">*</span> <span class="token number">8</span> <span class="token operator">+</span> <span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">512</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>strlength <span class="token operator">=</span> num <span class="token operator">*</span> <span class="token number">16</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> vec<span class="token punctuation">[</span>MAX_LEN<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> slen<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//小端 256进制</span>vec<span class="token punctuation">[</span>i <span class="token operator">&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//补充1000..000</span>vec<span class="token punctuation">[</span>slen <span class="token operator">&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">|=</span> <span class="token number">0x80</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>slen <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> tmp <span class="token operator">=</span> slen <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span>vec<span class="token punctuation">[</span>strlength <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span><span class="token keyword">return</span> vec<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">uin_to_str</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> z<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">static</span> <span class="token keyword">char</span> ans<span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">;</span>ans<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">'\0'</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> tmp <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;&gt;</span> <span class="token punctuation">(</span><span class="token number">8</span> <span class="token operator">*</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ans<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> str16<span class="token punctuation">[</span><span class="token punctuation">(</span>tmp <span class="token operator">/</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>ans<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> str16<span class="token punctuation">[</span>tmp <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> tmp <span class="token operator">=</span> <span class="token punctuation">(</span>y <span class="token operator">&gt;&gt;</span> <span class="token punctuation">(</span><span class="token number">8</span> <span class="token operator">*</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ans<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> str16<span class="token punctuation">[</span><span class="token punctuation">(</span>tmp <span class="token operator">/</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>ans<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> str16<span class="token punctuation">[</span>tmp <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">12</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> tmp <span class="token operator">=</span> <span class="token punctuation">(</span>z <span class="token operator">&gt;&gt;</span> <span class="token punctuation">(</span><span class="token number">8</span> <span class="token operator">*</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ans<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> str16<span class="token punctuation">[</span><span class="token punctuation">(</span>tmp <span class="token operator">/</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>ans<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> str16<span class="token punctuation">[</span>tmp <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> tmp <span class="token operator">=</span> <span class="token punctuation">(</span>k <span class="token operator">&gt;&gt;</span> <span class="token punctuation">(</span><span class="token number">8</span> <span class="token operator">*</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ans<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> str16<span class="token punctuation">[</span><span class="token punctuation">(</span>tmp <span class="token operator">/</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>ans<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> str16<span class="token punctuation">[</span>tmp <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> ans<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token function">rotateL</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;&lt;</span> n<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;&gt;</span> <span class="token punctuation">(</span><span class="token number">32</span> <span class="token operator">-</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span>md<span class="token punctuation">,</span> <span class="token keyword">int</span> res<span class="token punctuation">,</span> <span class="token keyword">int</span> t<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>md<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> md<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span>md<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> md<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token function">rotateL</span><span class="token punctuation">(</span>md<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> res <span class="token operator">+</span> t <span class="token operator">+</span> T<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">,</span> s<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>md<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> md<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">calculate</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span>X<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> md<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> g<span class="token punctuation">,</span> k<span class="token punctuation">;</span>md<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> A<span class="token punctuation">;</span>md<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> B<span class="token punctuation">;</span>md<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> C<span class="token punctuation">;</span>md<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> D<span class="token punctuation">;</span>md<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>g <span class="token operator">=</span> <span class="token function">F</span><span class="token punctuation">(</span>md<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> md<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> md<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>k <span class="token operator">=</span> i<span class="token punctuation">;</span><span class="token function">update</span><span class="token punctuation">(</span>md<span class="token punctuation">,</span> g<span class="token punctuation">,</span> X<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>g <span class="token operator">=</span> <span class="token function">G</span><span class="token punctuation">(</span>md<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> md<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> md<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>k <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">;</span><span class="token function">update</span><span class="token punctuation">(</span>md<span class="token punctuation">,</span> g<span class="token punctuation">,</span> X<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">32</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">48</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>g <span class="token operator">=</span> <span class="token function">H</span><span class="token punctuation">(</span>md<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> md<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> md<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>k <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">;</span><span class="token function">update</span><span class="token punctuation">(</span>md<span class="token punctuation">,</span> g<span class="token punctuation">,</span> X<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">48</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">64</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>g <span class="token operator">=</span> <span class="token function">I</span><span class="token punctuation">(</span>md<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> md<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> md<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>k <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">7</span> <span class="token operator">*</span> i<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">;</span><span class="token function">update</span><span class="token punctuation">(</span>md<span class="token punctuation">,</span> g<span class="token punctuation">,</span> X<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>FA <span class="token operator">=</span> A <span class="token operator">+</span> md<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>FB <span class="token operator">=</span> B <span class="token operator">+</span> md<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>FC <span class="token operator">=</span> C <span class="token operator">+</span> md<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>FD <span class="token operator">=</span> D <span class="token operator">+</span> md<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">md5_encode</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>str<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span>vect<span class="token punctuation">;</span>vect <span class="token operator">=</span> <span class="token function">padding</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> tmp<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>tmp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> vect<span class="token punctuation">[</span><span class="token number">16</span> <span class="token operator">*</span> i <span class="token operator">+</span> j<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">calculate</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token function">uin_to_str</span><span class="token punctuation">(</span>FA<span class="token punctuation">,</span> FB<span class="token punctuation">,</span> FC<span class="token punctuation">,</span> FD<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token number">1</span></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">char</span> <span class="token operator">*</span>option<span class="token punctuation">,</span> <span class="token operator">*</span>text<span class="token punctuation">,</span> <span class="token operator">*</span>out<span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>argc <span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Usage: md5 &lt;--encode&gt; &lt;text&gt;\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>option <span class="token operator">=</span> argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>text <span class="token operator">=</span> argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>option<span class="token punctuation">,</span> <span class="token string">"--encode"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>out <span class="token operator">=</span> <span class="token function">md5_encode</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">puts</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Usage: md5 &lt;--encode&gt; &lt;text&gt;\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="RSA算法"><a href="#RSA算法" class="headerlink" title="RSA算法"></a>RSA算法</h1><p>RSA算法是一种非对称加密算法，是目前最广泛使用的加密算法之一。它的安全性基于质因数分解难题，即将一个大的合数分解为其素数因子的乘积是一个困难的数学问题。</p><p>RSA算法中，每个用户都有一对密钥：公钥和私钥。公钥可以公开，用于加密数据，私钥用于解密数据。因此，RSA算法也被称为公钥加密算法。</p><p>RSA算法的加密过程如下：首先，将接收者的公钥发送给发送者。发送者使用该公钥对数据进行加密，得到密文，并将密文发送给接收者。接收者使用自己的私钥对密文进行解密，得到原始数据。</p><p>RSA算法的安全性主要取决于密钥的长度。通常，密钥长度越长，加密强度越高，但加密和解密的速度也越慢。在实际应用中，一般会采用2048位或更长的密钥来保证安全性。</p><p>RSA算法不仅可以用于加密数据，还可以用于数字签名和密钥协商等领域。因此，它被广泛应用于电子商务、金融、电子邮件等领域。</p><h2 id="RSA算法实现"><a href="#RSA算法实现" class="headerlink" title="RSA算法实现"></a>RSA算法实现</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;gmpxx.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;time.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>mpz_t p<span class="token punctuation">,</span> q<span class="token punctuation">,</span> n<span class="token punctuation">,</span> phi<span class="token punctuation">,</span> pub_key<span class="token punctuation">,</span> pri_key<span class="token punctuation">;</span>string pub_keystr<span class="token punctuation">,</span> pri_keystr<span class="token punctuation">,</span> nstr<span class="token punctuation">,</span> m<span class="token punctuation">,</span> c<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">mpz_init</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_init</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_init</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_init</span><span class="token punctuation">(</span>phi<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_init</span><span class="token punctuation">(</span>pub_key<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_init</span><span class="token punctuation">(</span>pri_key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">generate_pq</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    gmp_randstate_t seed<span class="token punctuation">;</span>    <span class="token function">gmp_randinit_default</span><span class="token punctuation">(</span>seed<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">gmp_randseed_ui</span><span class="token punctuation">(</span>seed<span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_urandomb</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> seed<span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_urandomb</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span> seed<span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_nextprime</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_nextprime</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">calculate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">mpz_mul</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> q<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_sub_ui</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> p<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_sub_ui</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span> q<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_mul</span><span class="token punctuation">(</span>phi<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">generate_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">mpz_set_ui</span><span class="token punctuation">(</span>pub_key<span class="token punctuation">,</span> <span class="token number">65537</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_invert</span><span class="token punctuation">(</span>pri_key<span class="token punctuation">,</span> pub_key<span class="token punctuation">,</span> phi<span class="token punctuation">)</span><span class="token punctuation">;</span>    mpz_class <span class="token function">temp_n</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>    mpz_class <span class="token function">temp_pub</span><span class="token punctuation">(</span>pub_key<span class="token punctuation">)</span><span class="token punctuation">;</span>    mpz_class <span class="token function">temp_pri</span><span class="token punctuation">(</span>pri_key<span class="token punctuation">)</span><span class="token punctuation">;</span>    nstr <span class="token operator">=</span> temp_n<span class="token punctuation">.</span><span class="token function">get_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    pub_keystr <span class="token operator">=</span> temp_pub<span class="token punctuation">.</span><span class="token function">get_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    pri_keystr <span class="token operator">=</span> temp_pri<span class="token punctuation">.</span><span class="token function">get_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>string <span class="token function">rsa_encode</span><span class="token punctuation">(</span>string strm<span class="token punctuation">)</span><span class="token punctuation">{</span>    mpz_t m<span class="token punctuation">,</span> temp_pub<span class="token punctuation">,</span> temp_n<span class="token punctuation">;</span>    string ans <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token function">mpz_init</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_init</span><span class="token punctuation">(</span>temp_pub<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_init</span><span class="token punctuation">(</span>temp_n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_set_str</span><span class="token punctuation">(</span>temp_pub<span class="token punctuation">,</span> pub_keystr<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_set_str</span><span class="token punctuation">(</span>temp_n<span class="token punctuation">,</span> nstr<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> strm<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">mpz_set_ui</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token punctuation">)</span>strm<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">mpz_powm</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> m<span class="token punctuation">,</span> temp_pub<span class="token punctuation">,</span> temp_n<span class="token punctuation">)</span><span class="token punctuation">;</span>        mpz_class <span class="token function">t</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>        ans <span class="token operator">+=</span> t<span class="token punctuation">.</span><span class="token function">get_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ans <span class="token operator">+=</span> <span class="token char">'\n'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">mpz_clear</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_clear</span><span class="token punctuation">(</span>temp_pub<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_clear</span><span class="token punctuation">(</span>temp_n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> ans<span class="token punctuation">;</span><span class="token punctuation">}</span>string <span class="token function">rsa_decode</span><span class="token punctuation">(</span>string strc<span class="token punctuation">)</span><span class="token punctuation">{</span>    mpz_t c<span class="token punctuation">,</span> temp_pri<span class="token punctuation">,</span> temp_n<span class="token punctuation">;</span>    string ans <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> temp <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token function">mpz_init</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_init</span><span class="token punctuation">(</span>temp_pri<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_init</span><span class="token punctuation">(</span>temp_n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_set_str</span><span class="token punctuation">(</span>temp_pri<span class="token punctuation">,</span> pri_keystr<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">mpz_set_str</span><span class="token punctuation">(</span>temp_n<span class="token punctuation">,</span> nstr<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> strc<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>strc<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">'\n'</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token function">mpz_set_str</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> temp<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">mpz_powm</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> c<span class="token punctuation">,</span> temp_pri<span class="token punctuation">,</span> temp_n<span class="token punctuation">)</span><span class="token punctuation">;</span>            mpz_class <span class="token function">t</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">unsigned</span> <span class="token keyword">long</span> x <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">get_ui</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ans <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>            temp <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span>        <span class="token punctuation">{</span>            temp <span class="token operator">+=</span> strc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> ans<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token number">1</span></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    string option<span class="token punctuation">,</span> text<span class="token punctuation">,</span> out1<span class="token punctuation">,</span> out2<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>argc <span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Usage: rsa &lt;--run&gt; &lt;text&gt;\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span>    <span class="token punctuation">{</span>        string <span class="token function">option</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        string <span class="token function">text</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>option <span class="token operator">==</span> <span class="token string">"--run"</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">generate_pq</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">calculate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">generate_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            out1 <span class="token operator">=</span> <span class="token function">rsa_encode</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>            cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Encode: "</span> <span class="token operator">&lt;&lt;</span> out1<span class="token punctuation">;</span>            out2 <span class="token operator">=</span> <span class="token function">rsa_decode</span><span class="token punctuation">(</span>out1<span class="token punctuation">)</span><span class="token punctuation">;</span>            cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Decode: "</span> <span class="token operator">&lt;&lt;</span> out2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span>        <span class="token punctuation">{</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Usage: rsa &lt;--run&gt; &lt;text&gt;\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="SHA-256算法"><a href="#SHA-256算法" class="headerlink" title="SHA-256算法"></a>SHA-256算法</h1><p>SHA-256是一种密码学哈希函数，可以接受任何大小的数据，并输出固定长度为256位的散列值。SHA代表安全哈希算法（Secure Hash Algorithm）。SHA-256是SHA家族算法的最新版本之一，在许多密码学应用程序中广泛使用，包括数字签名、身份验证和消息加密等。</p><p>SHA-256是一个单向函数，不能像加密算法那样解密。它将输入文本作为消息，然后通过运算生成一系列唯一的固定字长输出，即散列值。要进行SHA-256哈希，可以使用各种编程语言内置的库或开源实现，例如OpenSSL、Crypto++等。以下是SHA-256哈希的几个重要特点：</p><ul><li>不可逆性：SHA-256是一个不可逆的算法，因此无法通过散列值反推出原始输入文本。</li><li>单向性：SHA-256是一个单向函数，只能从输入文本生成散列值，但不能从散列值还原出输入文本。</li><li>唯一性：不同的输入文本将生成不同的散列值。SHA-256散列值分布范围很广，即使输入文本的微小改变也会产生完全不同的散列值。</li><li>长度固定：无论输入文本有多长，都将生成长度为256位的散列值。这个长度是确定的，不受输入文本长度的影响。</li></ul><p>SHA-256主要优点在于安全性强， 生成摘要时产生的冲突概率小，具有不可逆、单向性和唯一性等特性。因此，SHA-256广泛用于数据完整性校验、数字签名、认证等领域。但是，SHA-256的计算速度相对较慢，因此，在实际应用中需要综合考虑时间效率和安全性。</p><h2 id="SHA-256算法实现"><a href="#SHA-256算法实现" class="headerlink" title="SHA-256算法实现"></a>SHA-256算法实现</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX_LEN</span> <span class="token expression"><span class="token number">1000</span></span></span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> strlength<span class="token punctuation">,</span> num<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">char</span> str16<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"0123456789abcdef"</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> h<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token number">0x6a09e667</span><span class="token punctuation">,</span> <span class="token number">0xbb67ae85</span><span class="token punctuation">,</span> <span class="token number">0x3c6ef372</span><span class="token punctuation">,</span> <span class="token number">0xa54ff53a</span><span class="token punctuation">,</span>    <span class="token number">0x510e527f</span><span class="token punctuation">,</span> <span class="token number">0x9b05688c</span><span class="token punctuation">,</span> <span class="token number">0x1f83d9ab</span><span class="token punctuation">,</span> <span class="token number">0x5be0cd19</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> K<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token number">0x428a2f98</span><span class="token punctuation">,</span> <span class="token number">0x71374491</span><span class="token punctuation">,</span> <span class="token number">0xb5c0fbcf</span><span class="token punctuation">,</span> <span class="token number">0xe9b5dba5</span><span class="token punctuation">,</span> <span class="token number">0x3956c25b</span><span class="token punctuation">,</span> <span class="token number">0x59f111f1</span><span class="token punctuation">,</span> <span class="token number">0x923f82a4</span><span class="token punctuation">,</span> <span class="token number">0xab1c5ed5</span><span class="token punctuation">,</span>    <span class="token number">0xd807aa98</span><span class="token punctuation">,</span> <span class="token number">0x12835b01</span><span class="token punctuation">,</span> <span class="token number">0x243185be</span><span class="token punctuation">,</span> <span class="token number">0x550c7dc3</span><span class="token punctuation">,</span> <span class="token number">0x72be5d74</span><span class="token punctuation">,</span> <span class="token number">0x80deb1fe</span><span class="token punctuation">,</span> <span class="token number">0x9bdc06a7</span><span class="token punctuation">,</span> <span class="token number">0xc19bf174</span><span class="token punctuation">,</span>    <span class="token number">0xe49b69c1</span><span class="token punctuation">,</span> <span class="token number">0xefbe4786</span><span class="token punctuation">,</span> <span class="token number">0x0fc19dc6</span><span class="token punctuation">,</span> <span class="token number">0x240ca1cc</span><span class="token punctuation">,</span> <span class="token number">0x2de92c6f</span><span class="token punctuation">,</span> <span class="token number">0x4a7484aa</span><span class="token punctuation">,</span> <span class="token number">0x5cb0a9dc</span><span class="token punctuation">,</span> <span class="token number">0x76f988da</span><span class="token punctuation">,</span>    <span class="token number">0x983e5152</span><span class="token punctuation">,</span> <span class="token number">0xa831c66d</span><span class="token punctuation">,</span> <span class="token number">0xb00327c8</span><span class="token punctuation">,</span> <span class="token number">0xbf597fc7</span><span class="token punctuation">,</span> <span class="token number">0xc6e00bf3</span><span class="token punctuation">,</span> <span class="token number">0xd5a79147</span><span class="token punctuation">,</span> <span class="token number">0x06ca6351</span><span class="token punctuation">,</span> <span class="token number">0x14292967</span><span class="token punctuation">,</span>    <span class="token number">0x27b70a85</span><span class="token punctuation">,</span> <span class="token number">0x2e1b2138</span><span class="token punctuation">,</span> <span class="token number">0x4d2c6dfc</span><span class="token punctuation">,</span> <span class="token number">0x53380d13</span><span class="token punctuation">,</span> <span class="token number">0x650a7354</span><span class="token punctuation">,</span> <span class="token number">0x766a0abb</span><span class="token punctuation">,</span> <span class="token number">0x81c2c92e</span><span class="token punctuation">,</span> <span class="token number">0x92722c85</span><span class="token punctuation">,</span>    <span class="token number">0xa2bfe8a1</span><span class="token punctuation">,</span> <span class="token number">0xa81a664b</span><span class="token punctuation">,</span> <span class="token number">0xc24b8b70</span><span class="token punctuation">,</span> <span class="token number">0xc76c51a3</span><span class="token punctuation">,</span> <span class="token number">0xd192e819</span><span class="token punctuation">,</span> <span class="token number">0xd6990624</span><span class="token punctuation">,</span> <span class="token number">0xf40e3585</span><span class="token punctuation">,</span> <span class="token number">0x106aa070</span><span class="token punctuation">,</span>    <span class="token number">0x19a4c116</span><span class="token punctuation">,</span> <span class="token number">0x1e376c08</span><span class="token punctuation">,</span> <span class="token number">0x2748774c</span><span class="token punctuation">,</span> <span class="token number">0x34b0bcb5</span><span class="token punctuation">,</span> <span class="token number">0x391c0cb3</span><span class="token punctuation">,</span> <span class="token number">0x4ed8aa4a</span><span class="token punctuation">,</span> <span class="token number">0x5b9cca4f</span><span class="token punctuation">,</span> <span class="token number">0x682e6ff3</span><span class="token punctuation">,</span>    <span class="token number">0x748f82ee</span><span class="token punctuation">,</span> <span class="token number">0x78a5636f</span><span class="token punctuation">,</span> <span class="token number">0x84c87814</span><span class="token punctuation">,</span> <span class="token number">0x8cc70208</span><span class="token punctuation">,</span> <span class="token number">0x90befffa</span><span class="token punctuation">,</span> <span class="token number">0xa4506ceb</span><span class="token punctuation">,</span> <span class="token number">0xbef9a3f7</span><span class="token punctuation">,</span> <span class="token number">0xc67178f2</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token function">rotateR</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token number">32</span> <span class="token operator">-</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token function">Ch</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> X<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> Y<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> Z<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>X <span class="token operator">&amp;</span> Y<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>X<span class="token punctuation">)</span> <span class="token operator">&amp;</span> Z<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token function">Ma</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> X<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> Y<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> Z<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>X <span class="token operator">&amp;</span> Y<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>X <span class="token operator">&amp;</span> Z<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>Y <span class="token operator">&amp;</span> Z<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token function">sigma0</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> X<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">rotateR</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token function">rotateR</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token function">rotateR</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token function">sigma1</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> X<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">rotateR</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token function">rotateR</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token function">rotateR</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token function">round0</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> X<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">rotateR</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token function">rotateR</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>X <span class="token operator">&gt;&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token function">round1</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> X<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">rotateR</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token function">rotateR</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>X <span class="token operator">&gt;&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>str<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> slen <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>    num <span class="token operator">=</span> <span class="token punctuation">(</span>slen <span class="token operator">*</span> <span class="token number">8</span> <span class="token operator">+</span> <span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">512</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    strlength <span class="token operator">=</span> num <span class="token operator">*</span> <span class="token number">16</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> vec<span class="token punctuation">[</span>MAX_LEN<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> slen<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment">//大端 256进制</span>        vec<span class="token punctuation">[</span>i <span class="token operator">&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">-</span> i <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//补充1000..000</span>    vec<span class="token punctuation">[</span>slen <span class="token operator">&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">|=</span> <span class="token number">0x80</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">-</span> slen <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    vec<span class="token punctuation">[</span>strlength <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>slen <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> vec<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span>ha<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> res0<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> res1<span class="token punctuation">)</span><span class="token punctuation">{</span>    ha<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>ha<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> res0<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        ha<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> ha<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    ha<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> res0 <span class="token operator">+</span> res1<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">calculate</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span>w<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> ha<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> res0<span class="token punctuation">,</span> res1<span class="token punctuation">,</span> ch<span class="token punctuation">,</span> sig1<span class="token punctuation">,</span> sig0<span class="token punctuation">,</span> ma<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        ha<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> h<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">64</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        ch <span class="token operator">=</span> <span class="token function">Ch</span><span class="token punctuation">(</span>ha<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ha<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ha<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sig1 <span class="token operator">=</span> <span class="token function">sigma1</span><span class="token punctuation">(</span>ha<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ma <span class="token operator">=</span> <span class="token function">Ma</span><span class="token punctuation">(</span>ha<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ha<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ha<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sig0 <span class="token operator">=</span> <span class="token function">sigma0</span><span class="token punctuation">(</span>ha<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        res0 <span class="token operator">=</span> <span class="token punctuation">(</span>ha<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">+</span> sig1 <span class="token operator">+</span> ch <span class="token operator">+</span> K<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> w<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        res1 <span class="token operator">=</span> <span class="token punctuation">(</span>sig0 <span class="token operator">+</span> ma<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">update</span><span class="token punctuation">(</span>ha<span class="token punctuation">,</span> res0<span class="token punctuation">,</span> res1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        h<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+=</span> ha<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">uin_to_str</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span>h<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">char</span> ans<span class="token punctuation">[</span><span class="token number">65</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    ans<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">'\0'</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">unsigned</span> <span class="token keyword">int</span> x <span class="token operator">=</span> h<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">unsigned</span> <span class="token keyword">int</span> tmp <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;&gt;</span> <span class="token punctuation">(</span><span class="token number">8</span> <span class="token operator">*</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ans<span class="token punctuation">[</span><span class="token number">8</span> <span class="token operator">*</span> j <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> str16<span class="token punctuation">[</span><span class="token punctuation">(</span>tmp <span class="token operator">/</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            ans<span class="token punctuation">[</span><span class="token number">8</span> <span class="token operator">*</span> j <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> str16<span class="token punctuation">[</span>tmp <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> ans<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">sha256_encode</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>str<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span>vect <span class="token operator">=</span> <span class="token function">padding</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> w<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">64</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span>                w<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> vect<span class="token punctuation">[</span><span class="token number">16</span> <span class="token operator">*</span> i <span class="token operator">+</span> j<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">else</span>                w<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">round1</span><span class="token punctuation">(</span>w<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> w<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token function">round0</span><span class="token punctuation">(</span>w<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> w<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token function">calculate</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token function">uin_to_str</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token number">1</span></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">char</span> <span class="token operator">*</span>option<span class="token punctuation">,</span> <span class="token operator">*</span>text<span class="token punctuation">,</span> <span class="token operator">*</span>out<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>argc <span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Usage: sha256 &lt;--encode&gt; &lt;text&gt;\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span>    <span class="token punctuation">{</span>        option <span class="token operator">=</span> argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        text <span class="token operator">=</span> argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>option<span class="token punctuation">,</span> <span class="token string">"--encode"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            out <span class="token operator">=</span> <span class="token function">sha256_encode</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">puts</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span>        <span class="token punctuation">{</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Usage: sha256 &lt;--encode&gt; &lt;text&gt;\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于搜索引擎的信息检索</title>
      <link href="/2023/02/21/ji-suan-ji-ke-xue-ji-chu/ji-yu-sou-suo-yin-qing-de-xin-xi-jian-suo/"/>
      <url>/2023/02/21/ji-suan-ji-ke-xue-ji-chu/ji-yu-sou-suo-yin-qing-de-xin-xi-jian-suo/</url>
      
        <content type="html"><![CDATA[<h1 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h1><p>搜索引擎(Search Engine)旨在为用户提供在Web动态页面的海洋中导航，有效地检索网络信息资源的途径。搜索引擎的目的是帮助用户寻找网络资源、检索网上信息，在Internet计算机网络环境下，其实现是基于关键词匹配的信息检索机制。</p><p>搜索引擎的基本检索功能是布尔逻辑检索。</p><h1 id="布尔逻辑检索技巧"><a href="#布尔逻辑检索技巧" class="headerlink" title="布尔逻辑检索技巧"></a>布尔逻辑检索技巧</h1><h2 id="逻辑与"><a href="#逻辑与" class="headerlink" title="逻辑与"></a>逻辑与</h2><p>逻辑与也称与、and、AND、&amp;。</p><p>搜索时，<code>计算机 病毒</code>等价于<code>计算机+病毒</code>等价于<code>计算机and病毒</code>，<code>计算机</code>和<code>病毒</code>的布尔逻辑关系是逻辑与。</p><h2 id="逻辑或"><a href="#逻辑或" class="headerlink" title="逻辑或"></a>逻辑或</h2><p>逻辑或也称或、or、OR、|。</p><p>搜索时，<code>计算机or电脑</code>等价于<code>计算机|电脑</code>，<code>计算机</code>和<code>电脑</code>的布尔逻辑关系是逻辑或。</p><h2 id="逻辑非"><a href="#逻辑非" class="headerlink" title="逻辑非"></a>逻辑非</h2><p>逻辑非也称非、not、NOT、-。</p><p>搜索时，<code>数据not数值</code>等价于<code>数据-数值</code>，<code>数据</code>和<code>数值</code>的布尔逻辑关系是逻辑非。</p><h1 id="字符串检索技巧"><a href="#字符串检索技巧" class="headerlink" title="字符串检索技巧"></a>字符串检索技巧</h1><h2 id="模糊字符串检索技巧"><a href="#模糊字符串检索技巧" class="headerlink" title="模糊字符串检索技巧"></a>模糊字符串检索技巧</h2><p>当输入一个检索词时，搜索引擎会把与该检索词相关的词一并反馈，列出供用户选择。</p><p>相关性检索的检索结果通常是根据相关程度按从大到小的顺序降序排列的模糊搜索。这是一种具有模糊性、引导性的检索方法。</p><p>现在主流的搜索引擎默认的字符串搜索规则是模糊匹配，而非精准匹配。</p><h2 id="完全字符串检索技巧"><a href="#完全字符串检索技巧" class="headerlink" title="完全字符串检索技巧"></a>完全字符串检索技巧</h2><p>完全字符串检索方法是将一个字符串(通常用双引号括起)当作一个独立的运算单元，进行严格匹配，以提高检索的精度和准确度。</p><p>搜索时，<code>"计算机"</code>会精准匹配<code>计算机</code>的相关内容，搜索到的内容一定要包括<code>计算机</code>。</p><h2 id="前缀字符串检索技巧"><a href="#前缀字符串检索技巧" class="headerlink" title="前缀字符串检索技巧"></a>前缀字符串检索技巧</h2><p>前缀字符串检索方法是将一个字符串(后面加上<code>*</code>)进行右截法字符串匹配，搜索结果取并集，可以扩大检索范围。</p><p>例如，<code>nutri*</code>可以搜索到<code>nutria</code>、<code>nutrient</code>、<code>nutrilitei</code>、<code>nutriment</code>、<code>nutrition</code>。</p><h1 id="自然语言检索技巧"><a href="#自然语言检索技巧" class="headerlink" title="自然语言检索技巧"></a>自然语言检索技巧</h1><p>自然语言检索直接采用自然语言中的字、词甚至整个句子作提问式进行检索。</p><p>同样含义的自然语言语句可能搜索到不同的结果集。</p><h1 id="常见的搜索引擎"><a href="#常见的搜索引擎" class="headerlink" title="常见的搜索引擎"></a>常见的搜索引擎</h1><p>现如今最主流的搜索引擎主要有Google、Bing、Baidu等。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%9F%BA%E4%BA%8E%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E7%9A%84%E4%BF%A1%E6%81%AF%E6%A3%80%E7%B4%A2/1.png"></p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%9F%BA%E4%BA%8E%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E7%9A%84%E4%BF%A1%E6%81%AF%E6%A3%80%E7%B4%A2/2.png"></p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%9F%BA%E4%BA%8E%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E7%9A%84%E4%BF%A1%E6%81%AF%E6%A3%80%E7%B4%A2/3.png"></p><h1 id="影响检索结果相关性的因素"><a href="#影响检索结果相关性的因素" class="headerlink" title="影响检索结果相关性的因素"></a>影响检索结果相关性的因素</h1><ol><li>检索词的个数：检索出的记录中含有的检索词个数越多，相关性越大。</li><li>检索词在数据库记录中出现的位置：检索出的记录中含有的检索词出现在题名字段的，比出现在其他(如正文或URL)字段的相关性更大。</li><li>检索词所属的类目级别：检索出的记录中含有的检索词所属的类目级别越高，相关性越大。</li><li>检索词的权值：检索出的记录中含有的检索词权值比重越大，相关性越大(词的专指度越高，权值越大)。</li></ol><h1 id="搜索技巧"><a href="#搜索技巧" class="headerlink" title="搜索技巧"></a>搜索技巧</h1><p>最有效的搜索技巧是选择尽可能好的搜索关键词。</p><ol><li>查询要求应具体明确。</li><li>不要使用常用词，即不要使用太泛的词。如“保险”可细化为“健康保险报价”、“自动保险报价”、“人寿保险报价”等。</li><li>调整查询。如果查询返回太多的结果，就要使检索词更具体。如果查询没有产生足够多的结果，就要使它更一般。不要认为第一次选择的关键字是最好的。</li><li>使用单词的词尾变化。例如，如果要查找有关running的Web页，则可使用“run”、“runs”和“running”等。</li><li>使用同义词。如果用户正在使用的搜索引擎是支持关键词组配的搜索工具，一定要使用“OR”将各个同义词配合起来。</li><li>尽可能多使用字符串检索。如果用户想准确地匹配一个短语或标题，一定要用引号将它括起来，即进行字符串检索。例如，如果想在Internet上查找“information retrieval”，在搜索表单中应键入“information retrieval”。</li><li>熟悉正在使用的搜索工具。掌握一些搜索工具有很特殊的功能，使得查找相关内容更加容易。</li><li>任何信息搜索工具都有其局限性。当用户使用某种工具的搜索效果不理想时，换一种工具再试。一些工具在查询某类信息时的搜索领域宽于查询另一类信息的搜索领域，也可以考虑使用元搜索引擎或专业搜索引擎进行检索。</li><li>当获得的搜索结果十分有价值时，将它作为一个HTML文本存储在本地计算机中，以便再次使用。</li><li>查找专业性较强的信息时，应优先考虑使用专业搜索引擎。国内目前就有多种专业搜索引擎，如公路交通信息搜索引擎、医学搜索引擎、水产搜索引擎、暖通空调搜索引擎等。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息检索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>程序的编译与运行</title>
      <link href="/2023/01/25/ji-suan-ji-ke-xue-ji-chu/cheng-xu-de-bian-yi-yu-yun-xing/"/>
      <url>/2023/01/25/ji-suan-ji-ke-xue-ji-chu/cheng-xu-de-bian-yi-yu-yun-xing/</url>
      
        <content type="html"><![CDATA[<h1 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h1><p>C语言源程序要依据语法规则编写。</p><p>C语言源程序主要包括以下部分：</p><ul><li>预处理器指令</li><li>函数</li><li>变量</li><li>语句和表达式</li><li>注释</li></ul><p>C语言源程序样板：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello, World!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>推荐阅读：<a href="https://www.runoob.com/cprogramming/c-tutorial.html">菜鸟教程 - C语言教程</a></p><p>推荐阅读：<a href="https://blog.csdn.net/weixin_43896318/category_11653076.html">程序设计的基本理论和常识</a></p><p>开发流程：</p><ol><li>打开文本编辑器或集成开发工具，创建C语言工程和C程序源文件，编写C语言代码。</li><li>保存C程序源文件。</li><li>打开命令终端，进入到保存文件所在的目录。</li><li>键入<code>gcc main.c</code>，输入回车，编译代码。</li><li>如果代码中没有错误，命令提示符会跳到下一行，并生成<code>a.out</code>可执行文件，通过<code>-o</code>选项可以改编可执行文件名称。</li><li>键入可执行文件的名称，例如<code>./main</code>或<code>./a.out</code>。</li><li>看到屏幕上显示输出结果。</li></ol><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%BC%96%E8%AF%91%E4%B8%8E%E8%BF%90%E8%A1%8C/1.png"></p><h1 id="搭建开发环境"><a href="#搭建开发环境" class="headerlink" title="搭建开发环境"></a>搭建开发环境</h1><p>常用编辑器：Visual Studio Code</p><p>常用IDE：Code Blocks、Dev C++、Visual Studio、CLion</p><h2 id="CLion"><a href="#CLion" class="headerlink" title="CLion"></a>CLion</h2><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%BC%96%E8%AF%91%E4%B8%8E%E8%BF%90%E8%A1%8C/2.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%BC%96%E8%AF%91%E4%B8%8E%E8%BF%90%E8%A1%8C/3.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%BC%96%E8%AF%91%E4%B8%8E%E8%BF%90%E8%A1%8C/4.png"></p><p>建议从<a href="https://www.jetbrains.com/clion/">官网</a>下载程序，或者通过ToolBox安装。</p><p>刚刚安装的CLion需要配置后才能Run程序：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%BC%96%E8%AF%91%E4%B8%8E%E8%BF%90%E8%A1%8C/5.png"></p><p>我们可以下载并安装MinGW编译器：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%BC%96%E8%AF%91%E4%B8%8E%E8%BF%90%E8%A1%8C/6.jpg"></p><p>如上图，点击download，会跳转网页，这里推荐另一个网页可<a href="https://sourceforge.net/projects/mingw-w64/">下载MinGW</a>：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%BC%96%E8%AF%91%E4%B8%8E%E8%BF%90%E8%A1%8C/7.png"></p><p>不要直接点击绿色的Download，而是往下找：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%BC%96%E8%AF%91%E4%B8%8E%E8%BF%90%E8%A1%8C/8.png"></p><p>选上图这个版本即可。然后开始下载：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%BC%96%E8%AF%91%E4%B8%8E%E8%BF%90%E8%A1%8C/9.png"></p><p>然后找到需要的位置，解压：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%BC%96%E8%AF%91%E4%B8%8E%E8%BF%90%E8%A1%8C/10.png"></p><p>此时需要找到文件路径添加到CLion的Settings里（注意：路径要写到mingw64，建议直接复制粘贴）：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%BC%96%E8%AF%91%E4%B8%8E%E8%BF%90%E8%A1%8C/11.png"></p><p>稍作等待，待全部出现上图的绿色对勾就OK了，点击“OK”这个Button：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%BC%96%E8%AF%91%E4%B8%8E%E8%BF%90%E8%A1%8C/12.png"></p><p>等配置完成，Run一下HelloWorld试试吧：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%BC%96%E8%AF%91%E4%B8%8E%E8%BF%90%E8%A1%8C/13.png"></p><h2 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h2><p>想要更好地学习和掌握C语言，还是要掌握Linux操作系统。</p><p>推荐阅读：<a href="https://blankspace.blog.csdn.net/article/details/104792128">VMware安装CentOS7系统</a></p><h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><p>推荐阅读：<a href="https://blankspace.blog.csdn.net/article/details/119749522">翻译、编译、解释、汇编</a></p><p>推荐阅读：<a href="https://blankspace.blog.csdn.net/article/details/102681464">C语言源程序的编译与执行</a></p><p>推荐阅读：<a href="https://www.cnblogs.com/wang_yb/p/3990952.html">Makefile使用总结 </a></p><p>通常，程序以二进制可执行文件的形式驻留在磁盘上。例如，<code>a.out</code>或<code>hello.exe</code>。为了在CPU上运行，程序必须进入内存并置于进程的上下文中。</p><p>C语言源文件将被<strong>编译器(compiler)</strong> 编译成目标文件，这些目标文件旨在加载到任何物理内存位置，这种格式称为<strong>可重定位目标文件</strong>。</p><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><p><strong>链接器(linker)</strong> 将这些可重定位目标文件整合成一个<strong>二进制可执行文件</strong>。在链接阶段，也可能包含其他目标文件或库，通过-lm指定。</p><p>实际上，不见得所有库都链接到可执行文件并加载到内存中，大多数操作系统都允许程序在加载程序时动态链接库。例如，Windows支持动态链接库(DLL)。这种方法的好处是它避免了链接和加载可能最终不会被用于可执行文件的库。动态链接库是有条件地链接的，如果在程序运行时需要它，它就会被加载。链接器会插入重定向信息，允许它在程序加载时动态链接和加载。</p><p>目标文件和可执行文件通常具有标准格式，包括编译后的机器代码和符号表，其中包含有关程序中引用的函数和变量的元数据。对于UNIX和Linux系统，这种标准格式称为可执行和可链接格式(ELF)。可重定位文件和可执行文件有不同的ELF格式。可执行文件的ELF文件中有一条信息是程序的入口点，它包含程序运行时要执行的第一条指令的地址。Windows系统使用PE(Portable Executable)格式，MacOS使用Mach-O格式。</p><p><strong>动态链接</strong>类似于下文提到的动态加载，通常用于系统库，如语言的子程序库。动态链接库为系统库，可链接到用户程序，以便运行。有的操作系统只支持静态链接，它的系统库与其他目标模块一样，通过加载程序，被整合到二进制程序映像。如果不支持动态链接，系统内的所有程序都需要一份语言库的副本或那些被程序所引用的子程序，极大地浪费了磁盘空间和内存空间。</p><p>如果支持动态链接，在二进制映像内，每个库程序的引用都有一个存根(stub)。该存根是一小段代码，用来指出如何定位适当的内存驻留库程序，或者当程序不在内存里时应如何加载库。当执行存根时，它首先检查所需程序是否已在内存中。如果不在，就将程序加载到内存。不管如何，存根会用程序地址来替换自己，并开始执行程序。因此，下次再执行该程序代码时，就可以直接进行，而不会因动态链接产生任何开销。采用这种方案，使用语言库的所有进程只需要一个库代码副本就可以了。</p><p>动态链接也可用于库的更新。一个库可以被新的版本所替代，而且使用该库的所有程序会自动使用新的版本。没有动态链接，所有这些程序应当重新链接以便访问新的库。为了不让程序意外执行新的、不兼容版本的库，版本信息包括在程序和库中。一个库的多个版本可以都加载到内存，程序将通过版本信息来确定使用哪个库的副本。版本更迭会导致版本号的增加。因此，只有采用新库编译的程序才会受新库的不兼容改动的影响。在新库安装之前链接的其他程序将继续使用较旧的库。这种系统也称为共享库。</p><p>与动态加载不同，动态链接通常需要操作系统的帮助。如果内存中的进程是彼此保护的，那么只有操作系统才可以检查所需程序是否在某个进程的内存空间内，或是允许多个进程访问同样的内存地址。</p><h1 id="加载"><a href="#加载" class="headerlink" title="加载"></a>加载</h1><p><strong>加载器(loader)</strong> 用于将二进制可执行文件加载到内存中，使其有资格在CPU上运行。链接和加载需要经过<strong>重定向</strong>，它将实际地址分配给程序部分并调整程序中的代码和数据以匹配这些地址。例如，代码可以调用库函数并在执行时访问其变量。</p><p>如果一个进程的整个程序和所有数据都应在物理内存中，进程的大小受限于内存的大小。为了获得更高的内存空间利用率，可以使用<strong>动态加载</strong>。采用动态加载时，一个程序只有在调用时才会加载。所有程序都以可重定位加载格式保存在磁盘上，等到主程序被加载到内存即可执行。</p><p>当一个程序需要调用另一个程序时，调用程序首先检查另一个程序是否已加载。如果没有加载，可重定位链接程序会加载所需的程序到内存，并更新程序的地址表以反映这一变化。接着，控制传递给新加载的程序。</p><p>动态加载的优点是，当程序被需要时，它才会被加载。当大多数代码需要用来处理异常情况时，这种方法特别有效。在这种情况下，虽然整个程序可能很大，但是所用到的和加载的部分可能很小。</p><p>与动态链接不同，动态加载不需要操作系统提供特别支持。用户只需要认真设计程序以利用这种方法的优点，而操作系统可以通过实现动态加载的程序库来帮助程序员更好地编程。</p><h1 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h1><p>推荐阅读：<a href="https://www.cnblogs.com/chip/articles/4289623.html">程序在内存中运行的奥秘</a></p><p>推荐阅读：<a href="https://blankspace.blog.csdn.net/article/details/128744560">操作系统</a></p><p>推荐阅读：<a href="https://blankspace.blog.csdn.net/article/details/128746107">操作系统的进程管理</a></p><p>推荐阅读：<a href="https://blankspace.blog.csdn.net/article/details/128747625">操作系统的内存管理</a></p><p>完成上述过程后，如果想要运行程序，只需在命令行中输入可执行文件的名称即可，例如<code>./main</code>。</p><p>利用UNIX/Linux系统执行程序的可执行文件，可以通过命令终端或GUI界面。<br>在终端中输入程序名称运行程序时，Shell首先<strong>创建一个新进程</strong>以使用fork()系统调用运行该程序。然后Shell使用exec()系统调用<strong>调用加载程序</strong>，将可执行文件的名称传递给 exec()。加载程序然后使用新创建的进程的地址空间将指定的程序加载到内存中。<br>在GUI界面操作时，<strong>双击</strong>与可执行文件关联的图标会使用类似的机制调用加载程序。</p><p>多个进程可以共享动态链接库，从而显著节省内存使用。</p><p>printf()的执行也要执行系统调用。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown核心语法</title>
      <link href="/2023/01/23/ji-suan-ji-ke-xue-ji-chu/markdown-he-xin-yu-fa/"/>
      <url>/2023/01/23/ji-suan-ji-ke-xue-ji-chu/markdown-he-xin-yu-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><blockquote><p>Markdown 是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p></blockquote><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><p>CSDN写法(非Markdown标准语法，其他Markdown编辑器不解析)：</p><pre class="line-numbers language-none"><code class="language-none">@[TOC]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-none"><code class="language-none">@[TOC](文章目录标题)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>GitHub写法(自定义)：</p><pre class="line-numbers language-none"><code class="language-none">- [分级标题](#分级标题)- [分隔线](#分隔线)- [超链接](#超链接)  - [行内式](#行内式)  - [参考式](#参考式)  - [自动链接](#自动链接)- [区块引用](#区块引用)  - [引用的多层嵌套](#引用的多层嵌套)  - [引用其它要素](#引用其它要素)- [锚点](#锚点)- [强调](#强调)  - [斜体](#斜体)  - [粗体](#粗体)  - [删除线](#删除线)- [列表](#列表)  - [无序列表](#无序列表)  - [有序列表](#有序列表)  - [包含引用的列表](#包含引用的列表)- [插入图片](#插入图片)  - [图片行内式](#图片行内式)  - [图片参考式](#图片参考式)- [表格](#表格)- [代码](#代码)  - [代码行内式](#代码行内式)  - [缩进式多行代码](#缩进式多行代码)  - [用六个`包裹多行代码](#用六个--包裹多行代码)  - [HTML 原始码](#html-原始码)- [内容目录](#内容目录)- [注脚](#注脚)- [LaTeX 公式](#latex-公式)  - [$ 表示行内公式](#-表示行内公式)  - [$$ 表示整行公式](#-表示整行公式)- [流程图](#流程图)- [时序图](#时序图)- [待办事宜列表](#待办事宜列表)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="分级标题"><a href="#分级标题" class="headerlink" title="分级标题"></a>分级标题</h1><p>方法1：</p><pre class="line-numbers language-none"><code class="language-none">这是一个一级标题============================这是一个二级标题--------------------------------------------------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><h1 id="这是一个一级标题"><a href="#这是一个一级标题" class="headerlink" title="这是一个一级标题"></a>这是一个一级标题</h1><h2 id="这是一个二级标题"><a href="#这是一个二级标题" class="headerlink" title="这是一个二级标题"></a>这是一个二级标题</h2></blockquote><p>方法2：</p><pre class="line-numbers language-none"><code class="language-none"># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6></blockquote><h1 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h1><p>分割线可以用一行内三个以上的星号、减号、底线来标注，此行内不能有其他内容。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><pre class="line-numbers language-none"><code class="language-none">* * *********- - ----------------------------------------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><hr><hr></blockquote><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p>Markdown支持两种形式的链接语法：行内式和参考式。</p><h3 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h3><p><code>[]</code>里写链接文字，<code>()</code>里写链接地址，<code>()</code>中的 <code>""</code>中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的title文字。<code>[链接文字](链接地址 "链接标题")</code>这样的形式。链接地址与链接标题前有一个空格。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url">[<span class="token content">Google</span>](<span class="token url">https://www.google.com</span>)</span><span class="token url">[<span class="token content">Google</span>](<span class="token url">https://www.google.com</span> <span class="token string">"google"</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p><a href="https://www.google.com/">Google</a><br><br></p><p><a href="https://www.google.com/" title="google">Google</a></p></blockquote><h3 id="参考式"><a href="#参考式" class="headerlink" title="参考式"></a>参考式</h3><p>参考式超链接一般用在学术论文上面，或者另一种情况，如果某一个链接在文章中多处使用，那么使用引用的方式创建链接将非常好，它可以让你对链接进行统一的管理。</p><p>参考式链接分为两部分，文中的写法 <code>[链接文字][链接标记]</code>，在文本的任意位置添加 <code>[链接标记]:链接地址 "链接标题"</code>，链接地址与链接标题前有一个空格。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">全球最大的搜索引擎网站是<span class="token url">[<span class="token content">Google</span>][<span class="token variable">1</span>]</span>。[1]:http://www.google.com "Google"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>全球最大的搜索引擎网站是 <a href="http://www.google.com/" title="Google">Google</a>。<br><br></p></blockquote><h3 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h3><p>Markdown支持以比较简短的自动链接形式来处理网址和电子邮件信箱, 只要是用<code>&lt;&gt;</code>包起来，Markdown就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&lt;https://google.com&gt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hahaha@gmail.com</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p><a href="https://google.com/">https://google.com</a><br><br></p><p><a href="mailto:hahaha@gmail.com">hahaha@gmail.com</a></p></blockquote><h2 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h2><p>区块引用需要在被引用的文本前加上<code>&gt;</code>符号。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token blockquote punctuation">&gt;</span> 这是一个区块引用实例，<span class="token blockquote punctuation">&gt;</span> Markdown<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>这是一个区块引用实例，</p></blockquote><blockquote><p>Markdown</p></blockquote><p>Markdown也允许你偷懒只在整个段落的第一行最前面加上<code>&gt;</code>:</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token blockquote punctuation">&gt;</span> 练得身形似鹤形，千株松下两函经。我来问道无余说，云在青天水在瓶。<span class="token blockquote punctuation">&gt;</span> 飘飘乎如遗世独立，羽化而登仙。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>练得身形似鹤形，<br>千株松下两函经。<br>我来问道无余说，<br>云在青天水在瓶。</p></blockquote><blockquote><p>飘飘乎如遗世独立，<br>羽化而登仙。</p></blockquote><h3 id="引用的多层嵌套"><a href="#引用的多层嵌套" class="headerlink" title="引用的多层嵌套"></a>引用的多层嵌套</h3><p>区块引用可以嵌套，只要根据层次加上不同数量的<code>&gt;</code>即可：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token blockquote punctuation">&gt;&gt;&gt;</span> 飘飘乎如遗世独立，羽化而登仙。 - 苏轼<span class="token blockquote punctuation">&gt;&gt;</span> 我来问道无余说，云在青天水在瓶。 - 李翱<span class="token blockquote punctuation">&gt;</span> 仿佛兮若轻云之蔽月，飘飘兮若流风之回雪。 - 曹植<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><blockquote><blockquote><p>飘飘乎如遗世独立，羽化而登仙。 - 苏轼</p></blockquote></blockquote></blockquote><blockquote><blockquote><p>我来问道无余说，云在青天水在瓶。 - 李翱</p></blockquote></blockquote><blockquote><p>仿佛兮若轻云之蔽月，飘飘兮若流风之回雪。 - 曹植</p></blockquote><h3 id="引用其它要素"><a href="#引用其它要素" class="headerlink" title="引用其它要素"></a>引用其它要素</h3><p>引用的区块内也可以使用其他的Markdown语法，包括标题、列表、代码区块等:</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token blockquote punctuation">&gt;</span> <span class="token list punctuation">-</span> 仿佛兮若轻云之蔽月，飘飘兮若流风之回雪。<span class="token blockquote punctuation">&gt;</span><span class="token blockquote punctuation">&gt;</span> <span class="token list punctuation">-</span> 飘飘乎如遗世独立，羽化而登仙。<span class="token blockquote punctuation">&gt;</span><span class="token blockquote punctuation">&gt;</span> <span class="token list punctuation">-</span> 下面是一段代码：<span class="token blockquote punctuation">&gt;</span>     ```java<span class="token blockquote punctuation">&gt;</span>     public class Main {<span class="token blockquote punctuation">&gt;</span>         public static void main(String[] args) {<span class="token blockquote punctuation">&gt;</span>             System.out.println("Hello, World!");<span class="token blockquote punctuation">&gt;</span>         }<span class="token blockquote punctuation">&gt;</span>     }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">&gt; - 仿佛兮若轻云之蔽月，飘飘兮若流风之回雪。&gt;&gt; - 飘飘乎如遗世独立，羽化而登仙。&gt;&gt; - 下面是一段代码：&gt;     ```java&gt;     public class Main {&gt;         public static void main(String[] args) {&gt;             System.out.println("Hello, World!");&gt;         }&gt;     }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h2><p>网页中, 锚点其实就是页内超链接，也就是链接本文档内部的某些元素，实现当前页面中的跳转。比如写下一个锚点，点击回到目录，就能跳转到目录。在目录中点击这一节，就能跳转。还有下一节的注脚。这些根本上都是用锚点来实现的。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token bold"><span class="token punctuation">**</span><span class="token content"><span class="token url">[<span class="token content">⬆ top</span>](<span class="token url">#什么是-markdown-</span>)</span></span><span class="token punctuation">**</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong><a href="#%E4%BB%80%E4%B9%88%E6%98%AF-markdown-">⬆ top</a></strong></p><h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><p>Markdown 使用星号<code>*</code>和下划线<code>_</code>作为标记强调字词的符号。</p><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token italic"><span class="token punctuation">*</span><span class="token content">霁光浮瓦碧参差</span><span class="token punctuation">*</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><em>霁光浮瓦碧参差</em></p></blockquote><h3 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token bold"><span class="token punctuation">**</span><span class="token content">霁光浮瓦碧参差</span><span class="token punctuation">**</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><strong>霁光浮瓦碧参差</strong></p></blockquote><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token strike"><span class="token punctuation">~~</span><span class="token content">霁光浮瓦碧参差</span><span class="token punctuation">~~</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><del>霁光浮瓦碧参差</del></p></blockquote><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>使用<code>*</code>、<code>+</code>、<code>-</code>表示无序列表。</p><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">-</span> 虹起烟宵<span class="token list punctuation">-</span> 驰光绝景<span class="token list punctuation">-</span> 重明万方<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><ul><li><p>虹起烟宵</p></li><li><p>驰光绝景</p></li><li><p>重明万方</p></li></ul></blockquote><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>有序列表则使用数字接着一个英文句点。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> 虹起烟宵<span class="token list punctuation">2.</span> 驰光绝景<span class="token list punctuation">3.</span> 重明万方<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><ol><li><p>虹起烟宵</p></li><li><p>驰光绝景</p></li><li><p>重明万方</p></li></ol></blockquote><h3 id="包含引用的列表"><a href="#包含引用的列表" class="headerlink" title="包含引用的列表"></a>包含引用的列表</h3><p>如果要在列表项目内放进引用，那<code>&gt;</code>就需要缩进：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">-</span> 问道诗:  &gt; 练得身形似鹤形，千株松下两函经。  &gt; 我来问道无余说，云在青天水在瓶。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>问道诗:</p><blockquote><p>练得身形似鹤形，千株松下两函经。<br>我来问道无余说，云在青天水在瓶。</p></blockquote></li></ul><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><p>图片的创建方式与超链接相似，而且和超链接一样也有两种写法，行内式和参考式写法。</p><p>语法中图片alt的意思是如果图片因为某些原因不能显示，就用定义的图片alt文字来代替图片。 图片title则和链接中的title一样，表示鼠标悬停与图片上时出现的文字。alt和title都不是必须的，可以省略，但建议写上。</p><h3 id="图片行内式"><a href="#图片行内式" class="headerlink" title="图片行内式"></a>图片行内式</h3><p><code>![图片Alt](图片地址 "图片Title")</code></p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url"><span class="token operator">!</span>[<span class="token content">google</span>](<span class="token url">https://ucc.alicdn.com/pic/developer-ecology/ftm5ivdcrcte4_aa409bbafcbc408eaf283c5fdf6d970d.png</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/img_convert/af1fea8eed9d419ad6b0ccb7383645f0.png" alt="google"></p><h3 id="图片参考式"><a href="#图片参考式" class="headerlink" title="图片参考式"></a>图片参考式</h3><p>在文档要插入图片的地方写 <code>![图片alt][标记]</code>。</p><p>在文档的最后写上 <code>[标记]:图片地址 "title"</code>。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url"><span class="token operator">!</span>[<span class="token content">google</span>][<span class="token variable">_google</span>]</span>[_google]:https://img-blog.csdnimg.cn/img_convert/af1fea8eed9d419ad6b0ccb7383645f0.png "google"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/img_convert/af1fea8eed9d419ad6b0ccb7383645f0.png" alt="google" title="google"></p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>Markdown表格中，第一行为表头，第二行分隔表头和主体部分，第三行开始每一行为一个表格行。列于列之间用管道符<code>|</code>隔开。原生方式的表格每一行的两边也要有管道符。第二行还可以为不同的列指定对齐方向。默认为左对齐, 在<code>-</code>右边加上<code>:</code>就右对齐。</p><p>简单方式：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">诗名|作者|朝代-|-|-赤壁赋|苏轼|宋代锦瑟|李商隐|唐代洛神赋|曹植|三国<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>诗名</th><th>作者</th><th>朝代</th></tr></thead><tbody><tr><td>赤壁赋</td><td>苏轼</td><td>宋代</td></tr><tr><td>锦瑟</td><td>李商隐</td><td>唐代</td></tr><tr><td>洛神赋</td><td>曹植</td><td>三国</td></tr></tbody></table><p>原生方式：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">|诗名|作者|朝代||-|-|-||赤壁赋|苏轼|宋代||锦瑟|李商隐|唐代||洛神赋|曹植|三国|<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>诗名</th><th>作者</th><th>朝代</th></tr></thead><tbody><tr><td>赤壁赋</td><td>苏轼</td><td>宋代</td></tr><tr><td>锦瑟</td><td>李商隐</td><td>唐代</td></tr><tr><td>洛神赋</td><td>曹植</td><td>三国</td></tr></tbody></table><p>为表格第二列指定方向：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">诗名|名句-|-:长恨歌|云鬓花颜金步摇，芙蓉帐暖度春宵。梦游天姥吟留别|云青青兮欲雨，水澹澹兮生烟。陋室铭|无丝竹之乱耳，无案牍之劳形。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>诗名</th><th align="right">名句</th></tr></thead><tbody><tr><td>长恨歌</td><td align="right">云鬓花颜金步摇，芙蓉帐暖度春宵。</td></tr><tr><td>梦游天姥吟留别</td><td align="right">云青青兮欲雨，水澹澹兮生烟。</td></tr><tr><td>陋室铭</td><td align="right">无丝竹之乱耳，无案牍之劳形。</td></tr></tbody></table><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">诗名|名句-|:-长恨歌|云鬓花颜金步摇，芙蓉帐暖度春宵。梦游天姥吟留别|云青青兮欲雨，水澹澹兮生烟。陋室铭|无丝竹之乱耳，无案牍之劳形。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>诗名</th><th align="left">名句</th></tr></thead><tbody><tr><td>长恨歌</td><td align="left">云鬓花颜金步摇，芙蓉帐暖度春宵。</td></tr><tr><td>梦游天姥吟留别</td><td align="left">云青青兮欲雨，水澹澹兮生烟。</td></tr><tr><td>陋室铭</td><td align="left">无丝竹之乱耳，无案牍之劳形。</td></tr></tbody></table><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>对于程序员来说这个功能是必不可少的，插入程序代码的方式有两种：利用缩进(Tab)，或利用”`”符号(一般在ESC键下方)包裹代码。</p><ul><li>插入行内代码，即插入一个单词或者一句代码的情况，使用 `code` 这样的形式插入。</li><li>插入多行代码，可以使用缩进或者 ``` code ```。</li></ul><h3 id="代码行内式"><a href="#代码行内式" class="headerlink" title="代码行内式"></a>代码行内式</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">Java打印堆栈信息<span class="token code-snippet code keyword">`e.printStackTrace()`</span>。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>Java打印堆栈信息<code>e.printStackTrace()</code>。</p></blockquote><h3 id="缩进式多行代码"><a href="#缩进式多行代码" class="headerlink" title="缩进式多行代码"></a>缩进式多行代码</h3><p>缩进4个空格或是1个制表符。</p><p>一个代码区块会一直持续到没有缩进的那一行(或是文件结尾)。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">public static void main(String[] args) {    System.out.println("Hello, World!");}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>public static void main(String[] args) {    System.out.println("Hello, World!");}</code></pre><h3 id="用六个-96-包裹多行代码"><a href="#用六个-96-包裹多行代码" class="headerlink" title="用六个`包裹多行代码"></a>用六个`包裹多行代码</h3><p>```java<br>public class Main {<br>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args) {<br>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(“Hello, World!”);<br>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}<br>}<br>```</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello, World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="HTML原始码"><a href="#HTML原始码" class="headerlink" title="HTML原始码"></a>HTML原始码</h3><p>在代码区块里面，<code>&amp;</code> 、<code>&lt;</code>和<code>&gt;</code>会自动转成HTML实体，这样的方式让你非常容易使用Markdown插入范例用的HTML原始码，只需要复制贴上，剩下的Markdown都会帮你处理，例如：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>星期一<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>星期二<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>星期三<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>李强<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>王刚<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>张涛<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><table>    <tbody><tr>        <th>星期一</th>        <th>星期二</th>        <th>星期三</th>    </tr>    <tr>        <td>李强</td>        <td>王刚</td>        <td>张涛</td>    </tr></tbody></table><h3 id="内容目录"><a href="#内容目录" class="headerlink" title="内容目录"></a>内容目录</h3><p>在段落中填写 <code>[TOC]</code> 以显示全文内容的目录结构。</p><h2 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h2><p>在需要添加注脚的文字后加上脚注名字<code>[^注脚名字]</code>，称为加注。 然后在文本的任意位置(一般在最后)添加脚注，脚注前必须有对应的脚注名字。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">使用 Markdown[^1]可以效率的书写文档, 直接转换成 HTML[^2]。<span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">^1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> Markdown</span> 是一种纯文本标记语言<span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">^2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> HyperText</span> Markup Language 超文本标记语言<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="LaTeX公式"><a href="#LaTeX公式" class="headerlink" title="LaTeX公式"></a>LaTeX公式</h2><h3 id="LaTeX公式规范"><a href="#LaTeX公式规范" class="headerlink" title="LaTeX公式规范"></a>LaTeX公式规范</h3><p>推荐阅读：<a href="https://blankspace.blog.csdn.net/article/details/104517063">LaTeX符号语法总结</a></p><h3 id="表示行内公式"><a href="#表示行内公式" class="headerlink" title="$表示行内公式"></a>$表示行内公式</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">质能守恒方程可以用一个很简洁的方程式$E=mc^2$来表达。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>质能守恒方程可以用一个很简洁的方程式$E=mc^2$来表达。</p><h3 id="表示整行公式"><a href="#表示整行公式" class="headerlink" title="$$ 表示整行公式"></a>$$ 表示整行公式</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">$$\sum_{i=1}^n a_i=0$$$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$$$\sum^{j-1}<span class="token italic"><span class="token punctuation">_</span><span class="token content">{k=0}{\widehat{\gamma}</span><span class="token punctuation">_</span></span>{kj} z_k}$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>过去GitHub等网站的等Markdown解释器不支持LaTeX公式，但是有个折中的解决方案，使用 codecogs，例如：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">![](https://latex.csdn.net/eq?\sum_{i=1}^n%20a_i=0)![](https://latex.csdn.net/eq?f\(x_1,x_x,\ldots,x_n\)%20=%20x_1^2%20+%20x_2^2%20+%20\cdots%20+%20x_n^2%20)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://latex.csdn.net/eq?%5Csum_%7Bi=1%7D%5En%20a_i=0"></p><p><img src="https://latex.csdn.net/eq?f(x_1,x_x,%5Cldots,x_n)%20=%20x_1%5E2%20+%20x_2%5E2%20+%20%5Ccdots%20+%20x_n%5E2%20"></p><p>现在GitHub已经支持LaTeX公式：</p><p>$$\sum_{i=1}^n a_i=0$$<br>$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$</p><h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><p>流程图大致分为两段，第一段是定义元素，第二段是定义元素之间的走向。</p><p>定义元素的语法<code>tag=&gt;type: content:&gt;url</code>。</p><ul><li>tag就是元素名字。</li><li>type是这个元素的类型，有6中类型，分别为：</li></ul><table><thead><tr><th>type</th><th>含义</th></tr></thead><tbody><tr><td>start</td><td>开始</td></tr><tr><td>end</td><td>结束</td></tr><tr><td>operation</td><td>操作</td></tr><tr><td>subroutine</td><td>子程序</td></tr><tr><td>condition</td><td>条件</td></tr><tr><td>inputoutput</td><td>输入或产出</td></tr></tbody></table><p>content 就是在框框中要写的内容，注意type后的冒号与文本之间一定要有个空格。</p><p>用<code>-&gt;</code>来连接两个元素，需要注意的是condition类型，因为他有yes和no两个分支，所以要写成：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">c2(yes)-&gt;io-&gt;ec2(no)-&gt;op2-&gt;e<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>```mermaid<br>flowchat<br>st=&gt;start: Start:&gt;<a href="https://www.markdown-syntax.com/">https://www.markdown-syntax.com</a><br>io=&gt;inputoutput: verification<br>op=&gt;operation: Your Operation<br>cond=&gt;condition: Yes or No?<br>sub=&gt;subroutine: Your Subroutine<br>e=&gt;end<br>st-&gt;io-&gt;op-&gt;cond<br>cond(yes)-&gt;e<br>cond(no)-&gt;sub-&gt;io<br>```</p><pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">flowchatst=&gt;start<span class="token operator">:</span> Start<span class="token operator">:</span>&gt;https<span class="token operator">:</span>//www.markdown-syntax.comio=&gt;inputoutput<span class="token operator">:</span> verificationop=&gt;operation<span class="token operator">:</span> Your Operationcond=&gt;condition<span class="token operator">:</span> Yes or No?sub=&gt;subroutine<span class="token operator">:</span> Your Subroutinee=&gt;endst<span class="token arrow operator">-&gt;</span>io<span class="token arrow operator">-&gt;</span>op<span class="token arrow operator">-&gt;</span>condcond<span class="token text string">(yes)</span>-&gt;econd<span class="token text string">(no)</span>-&gt;sub<span class="token arrow operator">-&gt;</span>io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h2><p>```mermaid<br>sequenceDiagram<br>Alice-&gt;&gt;Bob: Hello Bob, how are you ?<br>Note right of Bob: Bob thinks<br>Bob–&gt;&gt;Alice: I am good thanks!<br>```</p><pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid"><span class="token keyword">sequenceDiagram</span>Alice<span class="token arrow operator">-&gt;&gt;</span>Bob<span class="token operator">:</span> Hello Bob, how are you ?<span class="token keyword">Note right of</span> Bob<span class="token operator">:</span> Bob thinksBob<span class="token arrow operator">--&gt;&gt;</span>Alice<span class="token operator">:</span> I am good thanks!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="待办事宜列表"><a href="#待办事宜列表" class="headerlink" title="待办事宜列表"></a>待办事宜列表</h2><p>使用带有<code>[ ]</code>或<code>[x]</code>(未完成或已完成)项的列表语法撰写一个待办事宜列表，例如：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">-</span> [ ] 早起跑步<span class="token list punctuation">-</span> [x] 看书<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><input disabled="" type="checkbox"> 早起跑步</li><li><input checked="" disabled="" type="checkbox"> 看书</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>策略和机制分离</title>
      <link href="/2023/01/22/ji-suan-ji-ke-xue-ji-chu/ce-lue-he-ji-zhi-fen-chi/"/>
      <url>/2023/01/22/ji-suan-ji-ke-xue-ji-chu/ce-lue-he-ji-zhi-fen-chi/</url>
      
        <content type="html"><![CDATA[<h1 id="策略和机制"><a href="#策略和机制" class="headerlink" title="策略和机制"></a>策略和机制</h1><p>计算机科学和软件工程实践中，“策略和机制分离”是一条重要经验。为了弄明白这句话的含义，首先要理解什么是策略，什么是机制。</p><p>想要做一件事达成一个目标，要知道为什么做(Why)，做什么(What)，如何做(How)。研究目的或工程需求明确了“为什么做”，策略决定了“做什么”，机制决定了“如何做”。</p><p>策略与机制的分离对于灵活性的保持很重要。在实际操作中，明确了“为什么做”以后，就该明确“做什么”，此后的“如何做”可能有多种方案；而对于明确的“为什么做”，前期开发出充足的底层机制，可以为后续提供更多的策略选择。例如，面对给定的任务目标和输入输出需求，我们可以更换许多可选的模型去尝试调参，我们可以尝试更换许多不同的算法实现去比较，算法的可替换性就显得十分重要。如果不能实现低成本的替换，则不利于任务目标的达成。</p><p>对于固定的顶层策略，底层实现应该提供多种选择，并且做到低成本切换和替换。对于固定的底层机制，策略可能随时间或地点而改变，对策略改变不敏感的通用底层机制将是更可取的。</p><h1 id="操作系统中的策略和机制"><a href="#操作系统中的策略和机制" class="headerlink" title="操作系统中的策略和机制"></a>操作系统中的策略和机制</h1><p>推荐阅读：<a href="https://blankspace.blog.csdn.net/article/details/128744560">操作系统</a></p><p>例如，操作系统存在某种机制，可赋予某些类型的程序相对更高的优先权。如果这种机制能与策略分离开，那么它可用于支持I/O密集型程序应比CPU密集型程序具有更高优先级的策略，或者支持相反策略。</p><p>微内核操作系统也是一个典型的例子。微内核操作系统通过实现一组基本且简单的模块，将机制与策略的分离用到了极致。这些模块几乎与策略无关，通过用户创建的内核模块或用户程序本身，可以增加更高级的机制与策略。</p><h1 id="软件工程中的策略模式"><a href="#软件工程中的策略模式" class="headerlink" title="软件工程中的策略模式"></a>软件工程中的策略模式</h1><p>策略模式是GoF23种设计模式中的一种，是软件工程的重要实践。通过策略模式，借助委托，我们可以更方便地替换算法，甚至是动态替换算法。</p><p>策略模式涉及三个角色：</p><ul><li><strong>Strategy</strong>：该角色负责决定实现策略所必需的接口。</li><li><strong>ConcreteStrategy</strong>：该角色负责实现Strategy角色所定义的接口。</li><li><strong>Context</strong>：该角色保存了ConcreteStrategy角色的实例，并调用ConcreteStrategy的角色去实现需求。</li></ul><p>基于<a href="https://www.processon.com/">ProcessOn</a>绘制的策略模式的类图如下所示：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%AD%96%E7%95%A5%E5%92%8C%E6%9C%BA%E5%88%B6%E5%88%86%E7%A6%BB/1.png"></p><h2 id="策略模式的排序应用"><a href="#策略模式的排序应用" class="headerlink" title="策略模式的排序应用"></a>策略模式的排序应用</h2><p>Maven依赖：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.junit.jupiter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit-jupiter-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.9.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.junit.jupiter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit-jupiter-engine<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.9.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.junit.jupiter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit-jupiter-params<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.9.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Strategy类定义为<code>SortStrategy.java</code>：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">SortStrategy</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Comparable</span><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>提供选择排序实现机制<code>InsertSortStrategy.java</code>：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InsertSortStrategy</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Comparable</span><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">SortStrategy</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> position<span class="token punctuation">,</span> length <span class="token operator">=</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token class-name">T</span> temp<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            temp <span class="token operator">=</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>position <span class="token operator">=</span> i<span class="token punctuation">;</span> position <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> temp<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>position <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">;</span> position<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                data<span class="token punctuation">[</span>position<span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span>position <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            data<span class="token punctuation">[</span>position<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>提供冒泡排序实现机制<code>BubbleSortStrategy.java</code>：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BubbleSortStrategy</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Comparable</span><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">SortStrategy</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> record<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> position<span class="token punctuation">,</span> bound<span class="token punctuation">,</span> length <span class="token operator">=</span> record<span class="token punctuation">.</span>length<span class="token punctuation">,</span> exchange <span class="token operator">=</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token class-name">T</span> temp<span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>exchange <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            bound <span class="token operator">=</span> exchange<span class="token punctuation">;</span>            exchange <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>position <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> position <span class="token operator">&lt;</span> bound<span class="token punctuation">;</span> position<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>record<span class="token punctuation">[</span>position<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>record<span class="token punctuation">[</span>position <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    temp <span class="token operator">=</span> record<span class="token punctuation">[</span>position<span class="token punctuation">]</span><span class="token punctuation">;</span>                    record<span class="token punctuation">[</span>position<span class="token punctuation">]</span> <span class="token operator">=</span> record<span class="token punctuation">[</span>position <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    record<span class="token punctuation">[</span>position <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>                    exchange <span class="token operator">=</span> position<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>单元测试<code>SortStrategyTest .java</code>（省略Context角色）：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Assertions</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>blankspace<span class="token punctuation">.</span>csdn<span class="token punctuation">.</span>pattern<span class="token punctuation">.</span>strategy<span class="token punctuation">.</span>sort<span class="token punctuation">.</span></span><span class="token class-name">BubbleSortStrategy</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>blankspace<span class="token punctuation">.</span>csdn<span class="token punctuation">.</span>pattern<span class="token punctuation">.</span>strategy<span class="token punctuation">.</span>sort<span class="token punctuation">.</span></span><span class="token class-name">InsertSortStrategy</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>blankspace<span class="token punctuation">.</span>csdn<span class="token punctuation">.</span>pattern<span class="token punctuation">.</span>strategy<span class="token punctuation">.</span>sort<span class="token punctuation">.</span></span><span class="token class-name">SortStrategy</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SortStrategyTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertSortStrategyTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">SortStrategy</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> strategy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InsertSortStrategy</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> actualData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> expectedData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        strategy<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>actualData<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Assertions</span><span class="token punctuation">.</span><span class="token function">assertArrayEquals</span><span class="token punctuation">(</span>expectedData<span class="token punctuation">,</span> actualData<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">bubbleSortStrategyTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">SortStrategy</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> strategy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BubbleSortStrategy</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> actualData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> expectedData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        strategy<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>actualData<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Assertions</span><span class="token punctuation">.</span><span class="token function">assertArrayEquals</span><span class="token punctuation">(</span>expectedData<span class="token punctuation">,</span> actualData<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机科学基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>度量前缀与性能指标</title>
      <link href="/2023/01/18/ji-suan-ji-ke-xue-ji-chu/du-liang-qian-zhui-yu-xing-neng-zhi-biao/"/>
      <url>/2023/01/18/ji-suan-ji-ke-xue-ji-chu/du-liang-qian-zhui-yu-xing-neng-zhi-biao/</url>
      
        <content type="html"><![CDATA[<h1 id="度量前缀"><a href="#度量前缀" class="headerlink" title="度量前缀"></a>度量前缀</h1><p>每个领域都有自己衡量事物的方式，计算机领域也不例外。计算机人员要互相告诉对方某物有多大或有多快，他们必须使用相同的度量单位。</p><p>下表给出了计算机科学中可能会大量用到的前缀及其数值含义。</p><table><thead><tr><th align="center">前缀</th><th align="center">符号</th><th align="center">10进制</th><th align="center">2进制</th></tr></thead><tbody><tr><td align="center">Kilo</td><td align="center">K</td><td align="center">${10}^{3}$</td><td align="center">${2}^{10}$</td></tr><tr><td align="center">Mega</td><td align="center">M</td><td align="center">${10}^{6}$</td><td align="center">${2}^{20}$</td></tr><tr><td align="center">Giga</td><td align="center">G</td><td align="center">${10}^{9}$</td><td align="center">${2}^{30}$</td></tr><tr><td align="center">Tera</td><td align="center">T</td><td align="center">${10}^{12}$</td><td align="center">${2}^{40}$</td></tr><tr><td align="center">Peta</td><td align="center">P</td><td align="center">${10}^{15}$</td><td align="center">${2}^{50}$</td></tr><tr><td align="center">Exa</td><td align="center">E</td><td align="center">${10}^{18}$</td><td align="center">${2}^{60}$</td></tr><tr><td align="center">Zetta</td><td align="center">Z</td><td align="center">${10}^{21}$</td><td align="center">${2}^{70}$</td></tr><tr><td align="center">Yotta</td><td align="center">Y</td><td align="center">${10}^{24}$</td><td align="center">${2}^{80}$</td></tr><tr><td align="center">Mili</td><td align="center">m</td><td align="center">${10}^{-3}$</td><td align="center">${2}^{-10}$</td></tr><tr><td align="center">Micro</td><td align="center">μ</td><td align="center">${10}^{-6}$</td><td align="center">${2}^{-20}$</td></tr><tr><td align="center">Nano</td><td align="center">n</td><td align="center">${10}^{-9}$</td><td align="center">${2}^{-30}$</td></tr><tr><td align="center">Pico</td><td align="center">p</td><td align="center">${10}^{-12}$</td><td align="center">${2}^{-40}$</td></tr><tr><td align="center">Femto</td><td align="center">f</td><td align="center">${10}^{-15}$</td><td align="center">${2}^{-50}$</td></tr><tr><td align="center">Atto</td><td align="center">a</td><td align="center">${10}^{-18}$</td><td align="center">${2}^{-60}$</td></tr><tr><td align="center">Zepto</td><td align="center">z</td><td align="center">${10}^{-21}$</td><td align="center">${2}^{-70}$</td></tr><tr><td align="center">Yocto</td><td align="center">y</td><td align="center">${10}^{-24}$</td><td align="center">${2}^{-80}$</td></tr></tbody></table><p>这些前缀可以与具体的度量单位组成新的度量单位。例如，对于bps这个单位，可以加上k组成kbps，可以加上M组成Mbps。</p><p>K、M等前缀都不是单位，只有数值含义。例如，2GB可以表示存储量，但2G只能表示以1B为存储单位的数量。</p><p>以K为例，看起来${10}^{3}$和${2}^{10}$分别是其十进制和二进制表示，但大家都知道${2}^{10}=1024≠1000={10}^{3}$。<br>遗憾的是，二者明明不同，却常常被混用。了解这些前缀的具体含义很重要。<br>例如，一千字节 (1KB) 的内存通常是 $1024$ 字节的内存，而不是 $1000$ 字节的内存。但是，一个 1GB 的磁盘驱动器实际上可能是 10 亿字节而不是 ${2}^{30}$，这意味着实际获得的存储空间比想象的要少。所有 3.5 英寸软盘都被描述为存储 1.44MB 的数据，而实际上它们存储 1440KB（或 $1440 ×{2}^{10} = 1474560$ 字节）。<br>具体应用的时候，要认真了解前缀的具体含义，以确保确切知道 1K、1KB 或 1G 代表什么。</p><p>另外，$2$的幂次也要记住：</p><ul><li>${2}^{0}=1$</li><li>${2}^{1}=2$</li><li>${2}^{2}=4$</li><li>${2}^{3}=8$</li><li>${2}^{4}=16$</li><li>${2}^{5}=32$</li><li>${2}^{6}=64$</li><li>${2}^{7}=128$</li><li>${2}^{8}=256$</li><li>${2}^{9}=512$</li><li>${2}^{10}=1024$</li><li>${2}^{11}=2048$</li><li>${2}^{12}=4096$</li><li>${2}^{13}=8192$</li><li>${2}^{14}=16384$</li><li>${2}^{15}=32768$</li><li>$……$</li></ul><h1 id="性能指标"><a href="#性能指标" class="headerlink" title="性能指标"></a>性能指标</h1><p>下面是一些重要的计算机性能指标：</p><ol><li>吞吐量：吞吐量指信息流入、处理和流出系统的速率。它取决于CPU能多快地取指令，数据能够多快地从内存取出或存入，以及所得结果能够多快地从内存送到输出设备。这些决定因素中的任一步骤都与主存紧密相关，因此吞吐量主要取决于主存的存取周期。</li><li>响应时间：响应时间指从提交作业到得到CPU响应所经历的时间。响应时间越短，吞吐量越大。</li><li>主频：主频是机器内部主时钟的频率，是衡量机器速度的重要参数，其常用单位是Hz、MHz等。</li><li>CPU周期：CPU周期又称为机器周期，通常用从内存读取一条指令字的最短时间来定义。一个指令周期常由若干个CPU周期构成。</li><li>CPU时钟周期：主频的倒数，CPU最小的时间单位。</li><li>CPI、MIPS、FLOPS：<ol><li>CPI：执行一条指令所需要的时钟周期数。</li><li>MIPS：每秒钟可执行的百万条指令数。</li><li>FLOPS：每秒钟执行的浮点运算次数。<ol><li>MFLOPS：每秒钟执行的百万次浮点运算数。</li><li>GFLOPS：每秒钟执行的十亿次浮点运算数。</li><li>TFLOPS：每秒钟执行的万亿次浮点运算数。</li><li>PFLOPS：每秒钟执行的千万亿次浮点运算数。</li></ol></li></ol></li><li>CPU执行时间：CPU执行时间指CPU对特定程序的执行时间。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 性能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机专业实用网站</title>
      <link href="/2022/06/25/ji-suan-ji-ke-xue-ji-chu/ji-suan-ji-zhuan-ye-shi-yong-wang-zhan/"/>
      <url>/2022/06/25/ji-suan-ji-ke-xue-ji-chu/ji-suan-ji-zhuan-ye-shi-yong-wang-zhan/</url>
      
        <content type="html"><![CDATA[<h1 id="算法OJ"><a href="#算法OJ" class="headerlink" title="算法OJ"></a>算法OJ</h1><ul><li><a href="https://leetcode-cn.com/problemset/all">LeetCode</a></li><li><a href="https://www.lintcode.com/">LintCode</a></li><li><a href="http://ybt.ssoier.cn:8088/index.php">信息学奥赛一本通</a></li><li><a href="http://www.lanqiao.org/">蓝桥</a></li><li><a href="https://www.luogu.com.cn/">洛谷</a></li><li><a href="https://www.patest.cn/">PAT</a></li><li><a href="http://acm.hdu.edu.cn/">HDOJ</a></li><li><a href="http://poj.org/">POJ</a></li><li><a href="https://zoj.pintia.cn/home/news">ZOJ</a></li><li><a href="http://codeforces.com/">Codeforces</a></li><li><a href="https://csp.ccf.org.cn/csp/index.action">CCF</a></li><li><a href="https://oi-wiki.org/">OIWiki</a></li><li><a href="https://www.kancloud.cn/kancloud/pack/70124">背包九讲</a></li><li><a href="https://www3.risc.jku.at/people/ckoutsch/stuff/e_algorithms.html">最重要的32个算法</a></li></ul><h1 id="面试经验"><a href="#面试经验" class="headerlink" title="面试经验"></a>面试经验</h1><ul><li><a href="https://www.nowcoder.com/">牛客</a></li><li><a href="https://leetcode.cn/circle/?query=&amp;page=1">LeetCode</a></li></ul><h1 id="代码仓库"><a href="#代码仓库" class="headerlink" title="代码仓库"></a>代码仓库</h1><ul><li><a href="https://github.com/">GitHub</a></li><li><a href="https://gitee.com/">Gitee</a></li><li><a href="https://about.gitlab.com/">GitLab</a></li><li><a href="https://minhaskamal.github.io/DownGit/#/home">DownGit</a></li></ul><h1 id="技术博客"><a href="#技术博客" class="headerlink" title="技术博客"></a>技术博客</h1><ul><li><a href="https://www.csdn.net/">CSDN</a></li><li><a href="https://www.cnblogs.com/">博客园</a></li><li><a href="https://www.zhihu.com/">知乎</a></li><li><a href="https://juejin.cn/">掘金</a></li><li><a href="https://www.jianshu.com/">简书</a></li><li><a href="https://developer.aliyun.com/">阿里云开发者社区</a></li><li><a href="https://www.infoq.cn/">InfoQ</a></li><li><a href="https://www.oschina.net/">OSCHINA</a> 开源中国</li><li><a href="http://www.woshipm.com/">人人都是产品经理</a></li><li><a href="https://www.51cto.com/">51CTO</a></li></ul><h1 id="技术问答"><a href="#技术问答" class="headerlink" title="技术问答"></a>技术问答</h1><ul><li><a href="https://stackoverflow.com/">Stack Overflow</a></li><li><a href="https://segmentfault.com/">SegmentFault</a> 思否</li></ul><h1 id="画图工具"><a href="#画图工具" class="headerlink" title="画图工具"></a>画图工具</h1><ul><li><a href="https://naotu.baidu.com/">百度脑图</a></li><li><a href="https://mm.edrawsoft.cn/">MindMaster</a></li><li><a href="https://www.processon.com/">ProcessOn</a></li></ul><h1 id="文档工具"><a href="#文档工具" class="headerlink" title="文档工具"></a>文档工具</h1><ul><li><a href="https://www.feishu.cn/">飞书云文档</a></li></ul><h1 id="翻译工具"><a href="#翻译工具" class="headerlink" title="翻译工具"></a>翻译工具</h1><ul><li><a href="https://translate.google.cn/">Google翻译</a></li><li><a href="https://fanyi.baidu.com/">百度翻译</a></li><li><a href="https://www.deepl.com/translator">DeepL翻译</a></li></ul><h1 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h1><ul><li><a href="https://www.google.com/">Google</a></li><li><a href="https://cn.bing.com/">Bing</a></li><li><a href="https://www.baidu.com/">百度</a></li></ul><h1 id="知识百科"><a href="#知识百科" class="headerlink" title="知识百科"></a>知识百科</h1><ul><li><a href="https://www.wikipedia.org/">Wikipedia</a></li><li><a href="https://baike.baidu.com/">百度百科</a></li></ul><h1 id="文档资源"><a href="#文档资源" class="headerlink" title="文档资源"></a>文档资源</h1><ul><li><a href="https://wenku.baidu.com/">百度文库</a></li><li><a href="https://www.docin.com/">豆丁网</a></li><li><a href="https://www.doc88.com/">道客巴巴</a></li></ul><h1 id="论文资源"><a href="#论文资源" class="headerlink" title="论文资源"></a>论文资源</h1><ul><li><a href="https://dblp.org/">DBLP</a></li><li><a href="https://scholar.google.com/">Google Scholar</a> 谷歌学术</li><li><a href="https://www.cnki.net/">中国知网</a></li><li><a href="https://fz.wanfangdata.com.cn/index.do">万方</a></li><li><a href="http://www.chaoxing.com/">超星</a></li><li><a href="http://www.oalib.com/">Open Access Library</a></li><li><a href="https://www.aminer.cn/">AMiner</a></li></ul><h1 id="科研工具"><a href="#科研工具" class="headerlink" title="科研工具"></a>科研工具</h1><ul><li><a href="http://muchong.com/">小木虫</a></li><li><a href="https://www.cncnki.com/">知网查重</a></li><li><a href="http://vpcs.cqvip.com/">维普查重</a></li><li><a href="https://check.wanfangdata.com.cn/">万方查重</a></li><li><a href="https://www.paperyy.com/">Paperyy</a></li><li><a href="https://ccfddl.github.io/">CCF会议截止时间</a></li><li><a href="https://www.overleaf.com/">Overleaf</a> 在线TeX论文编辑</li></ul><h1 id="图片资源"><a href="#图片资源" class="headerlink" title="图片资源"></a>图片资源</h1><ul><li><a href="https://www.iconfont.cn/">阿里巴巴矢量图标库</a></li><li><a href="https://wallhaven.cc/">Awesome Wallpapers</a></li><li><a href="https://giphy.com/">Giphy</a></li><li><a href="https://emojipedia.org/">Emojipedia</a> Emoji图像</li><li><a href="https://pixabay.com/">Pixabay</a></li><li><a href="http://pic.55.la/">图像格式转换工具</a></li><li><a href="https://ezgif.com/">GIF图像生成工具</a></li></ul><h1 id="课程资源"><a href="#课程资源" class="headerlink" title="课程资源"></a>课程资源</h1><ul><li><a href="https://www.icourse163.org/">中国大学MOOC</a></li><li><a href="https://open.163.com/">网易公开课</a></li><li><a href="https://www.icourses.cn/">爱课程</a></li><li><a href="https://www.xuetangx.com/">学堂在线</a></li><li><a href="https://study.163.com/">网易云课堂</a></li><li><a href="https://www.fenbi.com/">粉笔网</a></li><li><a href="https://www.educoder.net/">EduCoder</a></li><li><a href="https://www.bilibili.com/">Bilibili</a></li><li><a href="https://www.youtube.com/">Youtube</a></li><li><a href="https://www.hjenglish.com/">沪江英语网</a></li></ul><h1 id="电子书资源"><a href="#电子书资源" class="headerlink" title="电子书资源"></a>电子书资源</h1><ul><li><a href="https://www.jiumodiary.com/">鸠摩搜书</a></li><li><a href="https://ebook.huzerui.com/">熊猫搜书</a></li></ul><h1 id="升学资源"><a href="#升学资源" class="headerlink" title="升学资源"></a>升学资源</h1><ul><li><a href="http://bbs.kaoyan.com/">考研论坛</a></li><li><a href="https://www.eeban.com/">保研论坛</a></li><li><a href="https://yz.chsi.com.cn/">中国研究生招生信息网</a></li><li><a href="http://csrankings.org/">CSRankings</a></li></ul><h1 id="教程资源"><a href="#教程资源" class="headerlink" title="教程资源"></a>教程资源</h1><ul><li><a href="https://www.runoob.com/">菜鸟教程</a></li><li><a href="https://www.w3cschool.cn/">W3Cschool</a></li><li><a href="https://www.w3school.com.cn/">W3school</a></li><li><a href="https://cloud.tencent.com/developer/devdocs">腾讯云开发者手册</a></li><li><a href="https://www.yiibai.com/">易百教程</a></li></ul><h1 id="镜像资源"><a href="#镜像资源" class="headerlink" title="镜像资源"></a>镜像资源</h1><ul><li><a href="https://mirrors.ustc.edu.cn/">中科大镜像</a></li></ul><h1 id="职场招聘"><a href="#职场招聘" class="headerlink" title="职场招聘"></a>职场招聘</h1><ul><li><a href="https://www.linkedin.cn/">领英</a></li><li><a href="https://maimai.cn/">脉脉</a></li><li><a href="https://landing.zhaopin.com/">智联招聘</a></li><li><a href="https://www.zhipin.com/">BOSS直聘</a></li><li><a href="https://www.wondercv.com/">WonderCV</a> 在线简历制作</li></ul><h1 id="文档工具-1"><a href="#文档工具-1" class="headerlink" title="文档工具"></a>文档工具</h1><ul><li><a href="https://www.notion.so/">Notion</a></li><li><a href="https://docs.feishu.cn/">飞书云文档</a></li><li><a href="https://convertio.co/">Convertio</a> 文档格式转换</li><li><a href="https://www.aconvert.com/">AConvert格式转换</a> 文档格式转换</li><li><a href="https://www.sanpdf.com/pdf-to-word">SanPDF</a> PDF文档格式转换</li></ul><h1 id="实战演练"><a href="#实战演练" class="headerlink" title="实战演练"></a>实战演练</h1><ul><li><a href="https://fanyi.baidu.com/">实验楼</a></li><li><a href="http://www.mooctest.net/">慕测平台</a> 南京大学</li><li><a href="https://www.kaggle.com/">Kaggle</a> 数据科学竞赛平台</li></ul><h1 id="人工智能学习资源"><a href="#人工智能学习资源" class="headerlink" title="人工智能学习资源"></a>人工智能学习资源</h1><ul><li><a href="https://archive.ics.uci.edu/ml/index.php">UCI机器学习</a></li><li><a href="http://zh.gluon.ai/chapter_preface/preface.html">动手深度学习</a></li><li><a href="https://mo.zju.edu.cn/">Mo人工智能实训建模平台</a> 浙江大学</li></ul><h1 id="博客资源"><a href="#博客资源" class="headerlink" title="博客资源"></a>博客资源</h1><ul><li><a href="http://www.ruanyifeng.com/blog">阮一峰的网络日志</a></li><li><a href="https://cuijiahua.com/blog/spider">JackCui的博客</a></li><li><a href="https://pachong.vip/">梦想橡皮擦的网络爬虫教程</a></li><li><a href="https://kexue.fm/category/Big-Data">科学空间</a></li><li><a href="https://www.linuxidc.com/aboutus.htm">Linux公社</a></li><li><a href="https://www.cnblogs.com/swiftma/p/5631311.html">Java编程的逻辑</a></li></ul><h1 id="模板资源"><a href="#模板资源" class="headerlink" title="模板资源"></a>模板资源</h1><ul><li><a href="https://modao.cc/">墨刀</a></li><li><a href="http://sc.chinaz.com/tag_jiaoben/jquery.html">站长素材</a></li><li><a href="http://ppt.sotary.com/web/wxapp/index.html">PPT超级市场</a></li><li><a href="https://html5up.net/">HTML5UP</a> 博客HTML模板</li><li><a href="http://blinkfox.com/">闪烁之狐</a> 博客Hexo模板</li><li><a href="https://www.tablesgenerator.com/html_tables">Tables Generator</a> Excel/Csv生成网页Table代码</li></ul><h1 id="格式工具"><a href="#格式工具" class="headerlink" title="格式工具"></a>格式工具</h1><ul><li><a href="http://www.jslint.com/">JSLint</a> JSON格式检查工具</li><li><a href="http://xiaoniutxt.com/markdownEditor.html">小牛Markdown文本编辑器</a></li><li><a href="https://www.html.cn/tool/html-escape">HTML转义工具</a></li><li><a href="http://c.runoob.com/front-end/53">JSON语法在线解析器</a></li><li><a href="https://latex.codecogs.com/">CodeCogs</a> LaTeX公式编辑器</li></ul><h1 id="其他工具"><a href="#其他工具" class="headerlink" title="其他工具"></a>其他工具</h1><ul><li><a href="https://encycolorpedia.cn/">Encycolorpedia</a> 十六进制颜色代码表、图表及调色板</li><li><a href="http://www.ab126.com/web/3552.html">子网划分工具</a></li><li><a href="https://www.sojson.com/convert/subnetmask.html">网络和IP地址计算器</a></li><li><a href="https://cloud.feitsui.com/gcp">谷歌云在线Ping测速工具</a></li><li><a href="http://www.turingapi.com/">图灵机器人接口</a></li><li><a href="https://anvaka.github.io/city-roads">网络地图绘制</a></li><li><a href="https://suulnnka.github.io/BullshitGenerator/index.html">狗屁不通文章生成器</a></li><li><a href="https://adblockplus.org/">Adblock Plus</a> 浏览器广告过滤器</li><li><a href="https://web.baimiaoapp.com/">白描ORC工具</a></li><li><a href="http://lookdiv.com/">JetBrains-Key</a></li><li><a href="http://www.galmoe.com/">Galmoe</a> B站封面提取工具</li><li><a href="https://highlightcode.com/">HighlightCode</a> 代码在线高亮工具</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习</title>
      <link href="/2022/05/04/ji-suan-ji-ke-xue-ji-chu/shen-du-xue-xi/"/>
      <url>/2022/05/04/ji-suan-ji-ke-xue-ji-chu/shen-du-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="深度学习用到的常用术语"><a href="#深度学习用到的常用术语" class="headerlink" title="深度学习用到的常用术语"></a>深度学习用到的常用术语</h1><ul><li>特征(<em>feature</em>)：预测时使用的输入变量</li><li>特征集(<em>feature set</em>)：训练深度学习模型时采用的一组特征</li><li>标签(<em>label</em>)：监督学习中样本的“标准答案”</li><li>类别(<em>class</em>)：为标签枚举的一组目标值中的一个</li><li>样本(<em>example</em>)/输入(<em>input</em>)：数据集的一行，分为有标签样本和无标签样本</li><li>权重(<em>weight</em>)：线性模型中特征的系数，或者深度网络中的边</li><li>偏差(<em>bias</em>)：距离原点的截距或偏移</li><li>激活函数(<em>activation function</em>)：一种用于对上一层所有输入加权求和后生成输出值以传递给下一层的函数</li><li>反向传播(<em>back propagation</em>)：在神经网络上执行梯度下降法的主要算法，先前向传播计算并存储每个结点的输出值，再反向传播遍历图去计算损失函数值相对每个参数的偏导数</li><li>批次(<em>batch</em>)：模型训练的一次迭代(一次梯度更新)中使用的样本集</li><li>批次大小(<em>batch size</em>)：一个批次中的样本数</li><li>轮次(<em>epoch</em>)：在训练时，整个数据集的一次完整遍历</li><li>层(<em>layer</em>)：一组神经网络中负责处理一组输入特征或一组神经元的输出的神经元</li><li>全连接层(<em>fully connected layer</em>)：又称密集层，一种每个节点均与下一隐藏层中每个节点相连的隐藏层</li><li>输入层(<em>input layer</em>)：神经网络的第一层</li><li>隐藏层(<em>hidden layer</em>)：神经网络中的合成层，介于输入层和输出层之间</li><li>输出层(<em>output layer</em>)：神经网络的最后一层</li><li>学习率(<em>learning rate</em>)：训练模型时用于梯度下降的一个标量，学习率×梯度＝梯度步长</li><li>指标(<em>metric</em>)：可能在机器学习系统中得到优化的重点关注的指标</li><li>神经网络(<em>neural network</em>)：一种模型，灵感来自脑部结构，由多个层构成，每个层都包含简单相连的单元或神经元(非线性关系)</li><li>神经元(<em>neuron</em>)：神经网络中的节点，接受多个输入，应用激活函数将输入值加权处理后生成输出值</li><li>过拟合(<em>overfitting</em>)：创建的模型与训练数据过于匹配，以致模型无法根据新数据进行正确的预测</li><li>参数(<em>parameter</em>)：深度学习自行训练的模型的变量</li><li>预测(<em>prediction</em>)/输出(<em>output</em>)：模型在收到输入样本后的输出</li><li>回归模型(<em>regression model</em>)：一种能够将输入的连续的值映射到输出的离散的值的模型</li><li>分类模型(<em>classification model</em>)：一种用于区分两种或多种离散类别的模型</li><li>序列模型(<em>sequence model</em>)：一种输入有序列依赖性的模型</li></ul><h1 id="深度学习环境搭建"><a href="#深度学习环境搭建" class="headerlink" title="深度学习环境搭建"></a>深度学习环境搭建</h1><p>推荐阅读：<a href="https://blankspace.blog.csdn.net/article/details/126098882">连接远程Linux服务器</a></p><p>推荐阅读：<a href="https://blankspace.blog.csdn.net/article/details/126534763">Conda安装TensorFlow和PyTorch的GPU支持包</a></p><p>推荐阅读：<a href="https://blankspace.blog.csdn.net/article/details/127764676">VSCode连接远程Linux服务器</a></p><p>推荐阅读：<a href="https://blankspace.blog.csdn.net/article/details/127766482">VSCode通过虚拟环境运行Python程序</a></p><h2 id="TensorFlow安装"><a href="#TensorFlow安装" class="headerlink" title="TensorFlow安装"></a>TensorFlow安装</h2><p>可以选择conda安装和pip安装，个人推荐pip安装。</p><p>conda搜索TensorFlow的GPU版本：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda search tensorflow-gpu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>conda安装TensorFlow的GPU版本：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda <span class="token function">install</span> tensorflow-gpu<span class="token operator">==</span><span class="token number">2.2</span>.0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>pip安装TensorFlow的GPU版本：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> tensorflow-gpu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="PyTorch安装"><a href="#PyTorch安装" class="headerlink" title="PyTorch安装"></a>PyTorch安装</h2><p>可以选择conda安装和pip安装，个人推荐pip安装。</p><p>conda搜索PyTorch的GPU版本：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda search torch-gpu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>conda安装PyTorch的GPU版本(版本1.2.0)：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda <span class="token function">install</span> torch-gpu<span class="token operator">==</span><span class="token number">1.2</span>.0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>CUDA版本查看：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nvcc -V<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/1.png"></p><p>pip安装PyTorch的GPU版本：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> torch torchvision torchaudio<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>pip安装PyTorch的命令应该去<a href="https://pytorch.org/">官网</a>查看：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/2.png"></p><p>pip安装不顺可以直接下载<a href="http://download.pytorch.org/whl">.whl</a>文件，本地<code>pip install</code>。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人工智能 </tag>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>元宇宙的最新技术、应用和挑战</title>
      <link href="/2022/01/04/ji-suan-ji-ke-xue-ji-chu/yuan-yu-zhou-de-zui-xin-ji-zhu-ying-yong-he-tiao-zhan/"/>
      <url>/2022/01/04/ji-suan-ji-ke-xue-ji-chu/yuan-yu-zhou-de-zui-xin-ji-zhu-ying-yong-he-tiao-zhan/</url>
      
        <content type="html"><![CDATA[<h1 id="0-摘要"><a href="#0-摘要" class="headerlink" title="0 摘要"></a>0 摘要</h1><p>元宇宙是一种融合多种新技术的新型互联网应用和社交形态。 它具有多技术性、社会性、超时空性等特点。 本文介绍了元宇宙的发展现状，从网络基础设施、管理技术、基础共性技术、虚拟现实对象连接、虚拟现实融合五个角度介绍了元宇宙的技术框架。 本文还介绍了元宇宙的社会性和超时空性的本质，讨论了元宇宙的第一个应用领域以及它可能面临的一些问题和挑战。</p><p>关键词: Metaverse(元宇宙)、Multi-technology(多技术)、Sociality(社会性)、Hyper Spatiotemporality(超时空性) </p><h1 id="1-导引"><a href="#1-导引" class="headerlink" title="1 导引"></a>1 导引</h1><p>元宇宙是一种融合多种新技术的新型互联网应用和社交形态。 它提供基于增强现实技术的沉浸式体验，基于数字孪生技术打造现实世界的镜像，基于区块链技术构建经济体系，将虚拟世界和现实世界紧密融合到经济体系中，社会系统和身份系统，允许每个用户生产内容和编辑世界。 元宇宙仍然是一个不断演进的概念，不同的参与者正在以自己的方式丰富其意义。<br>从技术角度来看，人类的交流方式在不断改进（见下图）。相应地，技术创新、多项新技术的融合、互联网的新应用也随之发展。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%85%83%E5%AE%87%E5%AE%99%E7%9A%84%E6%9C%80%E6%96%B0%E6%8A%80%E6%9C%AF%E3%80%81%E5%BA%94%E7%94%A8%E5%92%8C%E6%8C%91%E6%88%98/1.png"></p><p>从商业角度看，元宇宙已经展现出深远的商业前景。作为一种新的资本输出，大公司纷纷投身于元宇宙的建设。从用户的角度来看，对虚拟世界的自由度、互联网的内容和交互方式等的需求不断增加。<br>本文总结了元宇宙的发展现状，从元宇宙的定义入手，提出了技术框架、社会框架和超空间。它还对元宇宙的未来发展进行了预测和讨论。<br>本文的第二节介绍了元宇宙的发展现状；第三节介绍了元宇宙的三个特点：多技术优势、社会性和超空间；第四节基于元宇宙的多技术优势，介绍了元宇宙的多种新技术和框架；第五节根据元宇宙的社会性质，介绍元宇宙作为一种新的社会形态，包括经济制度、文化文明制度、法律制度等方面；第六节基于元宇宙的时空性质，进一步介绍元宇宙的自由、沉浸、多维性质；第七节根据元宇宙目前的发展规划，预测元宇宙的第一个应用领域；第八节讨论了元宇宙需要解决的几个问题；第九节，结论部分，总结了本文和元宇宙的发展。 </p><h1 id="2-元宇宙的发展现状"><a href="#2-元宇宙的发展现状" class="headerlink" title="2 元宇宙的发展现状"></a>2 元宇宙的发展现状</h1><p>本节重点介绍不同国家和国际组织的政策、代表性企业及其典型产品，结合Web of Science数据库和SCOPUS数据库中元宇宙相关出版物数量统计，分析元宇宙的发展历史和现状，分析各国元宇宙政策与本国元宇宙企业设计的关系。</p><h2 id="2-1-国家和国际组织的政策"><a href="#2-1-国家和国际组织的政策" class="headerlink" title="2.1 国家和国际组织的政策"></a>2.1 国家和国际组织的政策</h2><p>不同的国家和国际组织对元宇宙有不同的态度。本节将从政治、经济、政府态度等方面考察不同国家和国际组织的政策，分析元宇宙的发展现状。<br>因为在元宇宙经济体系中，最重要的基础是基于区块链的通证经济。区块链是数字货币最重要的技术。因此，我们将从经济角度分析不同国家和国际组织对区块链和数字货币的政策。人工智能、交互技术、云计算和边缘计算是元宇宙的支撑技术。因此，我们将在技术方面分析不同国家和国际组织对这些技术的发展的政策。<br>具体国家政策见下表：</p><table><thead><tr><th align="center">国家</th><th align="left">政策</th></tr></thead><tbody><tr><td align="center">美国</td><td align="left">美国卫生与公众服务部下属的国家卫生信息技术协调员办公室组织了一场由医疗保健黑客进行的应用程序开发马拉松，将区块链技术应用于医疗保健领域。代表特朗普政府的国会行政部门已经认识到区块链的潜力，并呼吁在公共部门发展区块链技术。<br>美国国会宣布成立国会区块链决策委员会。 美国证券交易委员会（SEC）发布的《关于潜在非法加密资产交易平台的声明》确认数字加密资产属于证券范围，但不具有实际货币的特定属性和法律地位。</td></tr><tr><td align="center">中国</td><td align="left">2016年12月，中国将区块链技术列入“十三五”国家信息化规划。<br>2016年10月，中国工信部发布了《2016中国区块链技术与应用发展白皮书》。<br>2021年5月，中国工信部印发《关于加快区块链技术应用和产业发展的指导意见》。<br>中国工信部发言人表示，2020年5G部署将加快，年内新增5G基站超过60万个。 5G普及率正处于快速提升阶段。预计到2023年，5G个人用户渗透率将超过40%，用户数将超过5.6亿，5G网络接入流量占比将超过50%。<br>中国国务院印发了《云计算服务安全评价办法》政策文件。</td></tr><tr><td align="center">日本</td><td align="left">日本政府成立了第一个区块链行业组织——日本区块链协会（JBA）以及区块链合作联盟。<br>2017年4月1日，日本颁布了《支付服务法》，正式承认比特币是一种合法的支付方式，并对数字、加密资产的交易制定了明确的监管要求。<br>日本经济当局对“元宇宙”进行了定义，但目前还没有将其视为最终的商业形态。 该部计划改进法律和发展指南，并试图在全球虚拟空间行业中占据领先地位。</td></tr><tr><td align="center">韩国</td><td align="left">韩国政府希望在元宇宙产业中发挥主导作用。<br>韩国政府计划到 2022 年拨款9.3万亿韩元（约合516亿元人民币），用于加速数字化转型和培育元宇宙等新兴产业，并帮助中小企业和风险投资公司构建区块链。<br>2025年，预计将有2.6万亿韩元（约合22亿美元）用于元宇宙、区块链和其他技术。<br>2022年至2025年，韩国政府将全面支持韩国企业开发的元宇宙平台。<br>韩国技术与标准办公室正在努力成为元宇宙的世界技术领导者。<br>韩国技术与标准办公室负责人李向红在网上会议上表示，韩国政府将向任何希望制定该领域技术标准的公司提供必要的支持。<br>韩国教育部正在推广元宇宙中的课程。<br>首尔教育局表示，将在全市开设相关课程，为2100名中小学生打开元宇宙世界的大门。首尔教育局局长金恩兵说：“通过运营基于元宇宙的创意科学教室，我们提供虚拟现实和人工智能，努力成为综合科学教育的中心。”</td></tr><tr><td align="center">阿拉伯联合酋长国</td><td align="left">2016 年，迪拜成立了全球区块链委员会。<br>2017 年，迪拜政府宣布，迪拜经济的子公司 Emcredit 将与美国初创公司 Object Tech Grp Ltd 合作，创建一种名为 emCash 的加密数字货币。<br>2020 年底，阿联酋证券和商品管理局 (SCA) 发布了“管理局主席关于加密资产监管的 2020 年决定 (21/RM)”。<br>2021 年 10 月，迪拜政府将举办区块链峰会，这是一项互惠互利的举措，旨在从受监管的加密经济过渡到元宇宙。<br>阿联酋中央银行公布了 2023-2026 年期间的规划路线图，以实现 CBDC 的运作，并使阿联酋成为全球金融业数字化转型的十大国家之一。<br>在第 12 届全球移动宽带论坛（MBBF）上，阿联酋 SAAMENA 通信委员会首席执行官表示，所有海湾国家都已发布商用 5G 网络。</td></tr></tbody></table><p>国际组织的具体指南见下表：</p><table><thead><tr><th align="center">国际组织</th><th align="left">行动</th></tr></thead><tbody><tr><td align="center">ITU</td><td align="left">2020 年 8 月，ITU 发布了第一套区块链国际标准。<br>2021年4月19日至30日，国际电联将召开全体会议。会上，中国信息通信研究院牵头的三项国际区块链标准提案获得通过。<br>2016年2月23日至3月2日，国际电联工作组第23次会议在北京召开。中国信息通信研究院是中方主办方。 ITU 开始评估 5G 技术并探索新的移动通信频谱。</td></tr><tr><td align="center">IEEE</td><td align="left">2017年12月6日，IEEE区块链资产交易委员会正式获批成立。<br>2020年12月23日，IEEE 2418.2-2020《IEEE区块链系统数据格式标准》在中国电子标准化研究院的牵头下正式发布实施。<br>IEEE 发布了《IEEE 全球 CIO 和 CTO 访谈调查：2021 年的机遇与挑战，以及关键技术趋势》，根据调查结果，人工智能和机器学习、5G和物联网技术将成为影响2021年最重要的技术。</td></tr><tr><td align="center">IET</td><td align="left">IET区块链是IET与同济大学和上海区块链应用SERCBAAS合作推出的，旨在发布与区块链基础理论、应用技术和产业发展、技术创新和最新观点相关的前沿成果。</td></tr><tr><td align="center">WWW</td><td align="left">2016年6月8日-9日，第一届去中心化网络峰会在美国旧金山召开。 WWW 的创始人 Tim Berners-Lee 在会议上提到，区块链和 P2P 技术将被用于创建一个去中心化的互联网。<br>万维网联盟W3C召开区块链研讨会，呼吁为区块链技术制定公共标准。</td></tr></tbody></table><h2 id="2-2-不同国家的代表公司及其典型产品或服务"><a href="#2-2-不同国家的代表公司及其典型产品或服务" class="headerlink" title="2.2 不同国家的代表公司及其典型产品或服务"></a>2.2 不同国家的代表公司及其典型产品或服务</h2><p>元宇宙融合了5G、云计算、计算机视觉、区块链、人工智能等最前沿技术，在游戏、艺术、商业等众多领域都有应用。通过上文的阐述，我们初步了解了国际组织和国家在元宇宙上的不同政策。由于元宇宙不同国家的政策不同，不同国家的代表企业及其典型产品和发展规划也不同。比如美国，作为元宇宙的先行者，元宇宙布局比较广泛，应用在商业、游戏、艺术、社会等诸多领域。中国拥有庞大的市场和强大的互联网企业和互联网应用。国内互联网公司相继在元宇宙引入商业、游戏、艺术。日本凭借在ACG产业积累的优势和丰富的IP资源，专注于动漫和电子游戏的应用领域，而韩国则是政府主导和偶像产业驱动。德国和意大利的奢侈品牌正试图通过虚拟产品等方式让更多的人成为他们的客户。其他国家的其他代表公司及其典型产品见下表：</p><table><thead><tr><th align="center">企业</th><th align="left">典型产品或服务</th></tr></thead><tbody><tr><td align="center">Amazon（美国）</td><td align="left">2018年以来，亚马逊一直在开发“新的VR购物体验”，并试图通过在元宇宙中建立一种虚拟的“亚马逊商城”来建立一个购物者可以与数字产品互动的虚拟购物空间，以维护其在市场上的主导地位。</td></tr><tr><td align="center">Roblox（美国）</td><td align="left">玩家可以创建自己的虚拟世界或编写各种游戏，想象力是唯一的限制。 Roblox 支持 VR 设备以增强用户沉浸感。 Roblox已成为全球最大的游戏UGC平台，支持iOS、Android、PC、Mac等平台。 Roblox 目前是最接近元宇宙的“世界”之一。</td></tr><tr><td align="center">Facebook（美国）</td><td align="left">2019年9月，Facebook发布VR社交平台Facebook Horizon，并于2020年8月推出公测。<br>2021 年 7 月，Facebook 宣布将成为元宇宙团队，五年内转型为元宇宙公司，并为其 Reality Labs 投资至少 100 亿美元项目。<br>2021 年 10 月，Facebook 宣布将自己更名为 Meta。</td></tr><tr><td align="center">Epic Games（美国）</td><td align="left">2021 年 4 月，Epic Games 宣布投资 10 亿美元建立一个元宇宙。并收购了最大的3D模型平台Skethfab，吸纳Skethfab平台的用户流量，增加其在元宇宙的市场份额。</td></tr><tr><td align="center">Disney（美国）</td><td align="left">迪士尼首席技术官蒂拉克·曼达迪 (Tilak Mandadi) 表示，打造“主题公园元宇宙”将是迪士尼主题公园发展的下一步。</td></tr><tr><td align="center">Snapchat（美国）</td><td align="left">Snapchat 引入了自定义头像和过滤器，用数字内容填充世界。</td></tr><tr><td align="center">Nvidia（美国）</td><td align="left">2021 年 8 月 11 日，Nvidia 宣布了 Nvidia Omniverse 计划，以创建世界上第一个虚拟协作和模拟平台。</td></tr><tr><td align="center">Microsoft（美国）</td><td align="left">微软对元宇宙持谨慎态度。魏青：“元宇宙”只有回归现实世界才有实用价值。</td></tr><tr><td align="center">Decentraland（美国）</td><td align="left">基于以太坊的VR虚拟世界，第一个由用户拥有的完全去中心化的虚拟世界。<br>Decentraland 的核心内容是艺术品，有一个专门展示数字艺术品的地方。</td></tr><tr><td align="center">Tencent（中国）</td><td align="left">腾讯对元宇宙生态进行了全系列投资，包括AR开发平台、《阿瓦金生活》游戏、Spotify音乐流媒体平台等，并于 2021 年 9 月申请注册 “Kings Metaverse” 和 “TiMi Metaverse” 的商标。</td></tr><tr><td align="center">Alibaba（中国）</td><td align="left">阿里巴巴申请了“阿里元宇宙”、“淘宝元宇宙”等商标注册。<br>XR Lab负责人谭平将元宇宙划分为四层：L1（全息构建）、L2（全息模拟）、L3（虚实融合）、L4（虚实联动）。</td></tr><tr><td align="center">ByteDance（中国）</td><td align="left">字节跳动拥有抖音等高流量平台，还投资了视觉计算和AI计算平台Moore Thread，发布了游戏《重启世界》，并收购了中国VR设备公司PICO。</td></tr><tr><td align="center">NetEase（中国）</td><td align="left">网易对元宇宙的布局以游戏业务为主，为游戏开发提供低门槛的工具。网易投资了 IMPROBABLE 的元计算平台，使第三方能够构建虚拟世界，并投资了 IMVU 虚拟角色平台。</td></tr><tr><td align="center">Shenzhen Zqgame Co.,Ltd（中国）</td><td align="left">Zqgame是一家引领潮流的中国游戏工作室。 2021年9月6日，Zqgame发布了游戏Brew Master的预览。该游戏允许玩家在模拟环境中创业并体验现实生活中的影响。</td></tr><tr><td align="center">Wondershare Technology Group Co.,Ltd（中国）</td><td align="left">万兴科技投资Realibox，加强在AR/VR领域的业务布局，为元宇宙初期部署提供坚实的技术基础。</td></tr><tr><td align="center">Sony, Hassilas（日本）</td><td align="left">Mechaverse 是第一个日本元宇宙平台。企业可以在该平台上快速进行产品发布，并为参与者提供视频介绍和3D模型实验。</td></tr><tr><td align="center">GREE（日本）</td><td align="left">GREE通过其子公司 REALITY 经营元宇宙业务。预计到 2024 年将投资 100 亿日元，在全球开发超过 1 亿用户。</td></tr><tr><td align="center">Avex Business Development、Digital Motion（日本）</td><td align="left">Avex Business Development 和 Digital Motion 成立了“Virtual Avex Group”，计划推广现有的动画或游戏角色，举办虚拟艺术家活动，并将真实艺术家的音乐会和其他活动虚拟化。</td></tr><tr><td align="center">SAMSUNG（韩国）</td><td align="left">三星推出了“三星全球元宇宙基金”。</td></tr><tr><td align="center">SK Telecom（韩国）</td><td align="left">2021年7月，SK电讯推出了名为“ifland”的虚拟世界，用户可以在其中通过卡通人物主持和参与会议。</td></tr><tr><td align="center">Urbanbase（韩国）</td><td align="left">Urbanbase 是一个用于房地产和室内设计开发的 3D 空间数据平台。该公司在 B+ 轮融资中筹集了 130 亿韩元（约合 4.5 亿元人民币）。这笔资金将用于开发 Urbanbase 进入元宇宙所需的 VR/AR 和 3D 技术。</td></tr><tr><td align="center">Metaverse Alliance（韩国）</td><td align="left">韩国信息通信产业振兴院已将25家机构和企业组成“元宇宙联盟”，通过政商合作，构建以私营部门为主导的元宇宙生态系统，实现现实与虚拟各个领域的开放元宇宙平台。</td></tr><tr><td align="center">Sotheby’s（英国）</td><td align="left">英国苏富比拍卖行推出了“苏富比元宇宙”板块，并举办了一场名为“Natively Digital 1.2: The Collectors”的特别拍卖会，一次展出了 53 件来自 NFT 艺术收藏的作品。</td></tr><tr><td align="center">Maze Theory（英国）</td><td align="left">英国著名VR工作室Maze Theory将围绕知名IP和知名粉丝宇宙打造“粉丝元宇宙”。</td></tr><tr><td align="center">MetaDubai（阿联酋）</td><td align="left">MetaDubai 正在迪拜建设一个基于区块链、NFT、AI、去中心化数据存储的元宇宙城市，以开发最完整的虚拟世界形象、经济系统和应用程序。</td></tr><tr><td align="center">Ripple（阿联酋）</td><td align="left">区块链支付公司 Ripple 宣布在迪拜国际金融中心（DIFC）设立地区总部。</td></tr><tr><td align="center">Stage11（法国）</td><td align="left">法国 Metaverse 音乐平台 Stage11 已完成由欧洲风险投资基金 Otium Capital 领投的 500 万欧元融资，旨在打造沉浸式 Metaverse 音乐。</td></tr><tr><td align="center">RIMOWA（德国）</td><td align="left">德国奢侈行李箱品牌 RIMOWA 5 月在 Instagram 上宣布，将与设计工作室 NUOVA 合作推出 4 件 NFT 艺术品，名为“来自元宇宙的蓝图”。</td></tr><tr><td align="center">Gucci（意大利）</td><td align="left">意大利奢侈品牌 Gucci 推出了虚拟运动鞋。<br>购买虚拟运动鞋后，消费者可以在Gucci APP和VR社交平台VR CHAT中使用，或者在游戏平台Roblox上试用。</td></tr></tbody></table><h2 id="2-3-元宇宙相关出版物数量"><a href="#2-3-元宇宙相关出版物数量" class="headerlink" title="2.3 元宇宙相关出版物数量"></a>2.3 元宇宙相关出版物数量</h2><p>Web of Science 是一个基于网络的多学科文献数据库。它是世界上最大的综合性学术信息资源，涵盖了最多的学科。收录了在自然科学、工程技术、生物医学等各个研究领域最具影响力的多种核心学术期刊。因此，我们选择统计该数据库上发布的元宇宙相关出版物的数量来分析元宇宙的发展过程。<br>截至 2021年11月1日，该数据库共发布了211篇与元宇宙相关的出版物。从下图历年的发表数量可以看出，我们可以将元宇宙的发展划分为四个阶段：萌芽阶段、初级阶段、衰退阶段和发展阶段。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%85%83%E5%AE%87%E5%AE%99%E7%9A%84%E6%9C%80%E6%96%B0%E6%8A%80%E6%9C%AF%E3%80%81%E5%BA%94%E7%94%A8%E5%92%8C%E6%8C%91%E6%88%98/2.png"></p><p>元宇宙的最初概念来自尼尔·斯蒂芬森 1992 年的科幻小说《雪崩》，1998 年在 Web of Science 上首次发表了关于元宇宙的文章。该刊物分析了实时虚拟人的现状在小说《雪崩》中，包括外貌、服饰配饰、肢体动作等，为元宇宙的研究拉开了帷幕。1999 年的“黑客帝国”展示了一个由人工智能计算机系统控制的现实世界，称为“黑客帝国”。在缺乏技术工具的情况下，文学和艺术被用作研究萌芽阶段的元宇宙的工具，例如电影、书籍等。<br>21世纪初，虚拟现实技术和计算机图形学的飞速发展，为元宇宙的发展奠定了技术基础。在初级层面，电子游戏已成为探索元宇宙的新工具。Roblox 于 2006 年发布的游戏 Roblox，以及 2009 年瑞典 Mojang Studios 开发的 Minecraft 极大地激发了关于元宇宙的第一波讨论。<br>元宇宙的发展还处于起步阶段，商业模式还不成熟。由于不同世界的交互问题、算力压力、伦理约束、隐私风险和成瘾风险等开放性问题，以及元宇宙发展仍受当前技术限制的事实，元宇宙的研究兴趣2013年之后进入低潮阶段。<br>2021年3月10日，沙盒游戏平台Roblox首次将“元宇宙”的概念纳入招股书，并成功登陆纽交所。该公司上市首日市值超过400亿美元。这一现象让科技界和资本界一片哗然，并重新点燃了关于元宇宙的讨论。今年可以称为元宇宙元年。在发展阶段，元宇宙融合了5G、云计算、计算机视觉、区块链、人工智能等处于快速发展阶段的前沿科技。元宇宙已经应用于医疗、电子游戏、艺术、商业等多个领域，完成了从游戏到游戏之外的转型。元宇宙有着前所未有的爆发力。为了通过本节中 Web of Science 数据库中发布的与元宇宙相关的出版物数量来验证元宇宙开发阶段的分类，我们还检查了在 SCOPUS 数据库中发布的与元宇宙相关的出版物的数量，结果下图所示：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%85%83%E5%AE%87%E5%AE%99%E7%9A%84%E6%9C%80%E6%96%B0%E6%8A%80%E6%9C%AF%E3%80%81%E5%BA%94%E7%94%A8%E5%92%8C%E6%8C%91%E6%88%98/3.png"></p><p>SCOPUS 数据库中共发布了 191 篇有关元宇宙的出版物。这个数据库中调查得到的数据再次印证了我们的想法。根据元宇宙的发表数量，元宇宙的发展可分为四个阶段，分别是1992年-2007年的萌芽阶段、2008年-2013年的初级阶段、2014年-2019年的衰退阶段、2020至今的发展阶段。</p><h1 id="3-元宇宙的特点"><a href="#3-元宇宙的特点" class="headerlink" title="3 元宇宙的特点"></a>3 元宇宙的特点</h1><p>元宇宙作为一种新兴的互联网应用：</p><ul><li>其融合了多种新技术，具有多技术的特点。</li><li>其作为一种新的社会形态，具有社会性特征。</li><li>其作为与现实世界平行且密切相关的虚拟世界，具有超时空性的特点。</li></ul><h2 id="3-1-多技术"><a href="#3-1-多技术" class="headerlink" title="3.1 多技术"></a>3.1 多技术</h2><p>元宇宙融合了多种新技术。它提供基于增强现实技术的沉浸式体验，基于数字孪生技术生成现实世界的镜像，构建基于区块链技术的经济体系。</p><h2 id="3-2-社会性"><a href="#3-2-社会性" class="headerlink" title="3.2 社会性"></a>3.2 社会性</h2><p>正如定义所说，元宇宙是一种新型的社会形态。元宇宙包括经济体系、文化体系和法律体系，它们与现实密切相关，但又各有特点。</p><h2 id="3-3-超时空性"><a href="#3-3-超时空性" class="headerlink" title="3.3 超时空性"></a>3.3 超时空性</h2><p>超时空指的是元宇宙，一个与现实世界平行的虚拟世界。它打破了时间和空间的界限，为用户提供了开放、自由、沉浸式的体验。</p><h1 id="4-元宇宙的多种新技术和框架"><a href="#4-元宇宙的多种新技术和框架" class="headerlink" title="4 元宇宙的多种新技术和框架"></a>4 元宇宙的多种新技术和框架</h1><p>元宇宙是现实世界与虚拟世界的紧密融合、互动、交织，需要多种新技术的融合，创造出新颖的互联网应用和社交形态。在本节中，我们概述了元宇宙所涉及的技术，如下图所示。元宇宙涉及的技术分为五个方面，分别是网络基础设施、管理技术、基础共性技术、虚拟现实对象连接、虚拟现实融合。 </p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%85%83%E5%AE%87%E5%AE%99%E7%9A%84%E6%9C%80%E6%96%B0%E6%8A%80%E6%9C%AF%E3%80%81%E5%BA%94%E7%94%A8%E5%92%8C%E6%8C%91%E6%88%98/4.png"></p><h2 id="4-1-通信和计算机基础设施"><a href="#4-1-通信和计算机基础设施" class="headerlink" title="4.1 通信和计算机基础设施"></a>4.1 通信和计算机基础设施</h2><p>无论是远程执行大规模计算任务、访问大型数据库，还是提供用户之间的共享体验，它们都与网络和通信密不可分。5G和6G是元宇宙的通信基础。5G具有高速、低延迟、网络泛在、低功耗、万物互联的优势，使得元宇宙的实现成为可能。6G将打破时间和虚拟现实的局限，将服务对象从物理世界的人、机、物扩展到虚拟世界的“环境”，实现人-机-物-环境的互联互通。物理世界和虚拟世界，为元宇宙提供网络基础。<br>在5G和6G网络环境下，量子通信保证了元宇宙的通信安全。M. Z. Chowdhury 等人基于量子不可克隆定理和不确定性原理，提出量子通信通过应用量子密钥提供高安全性。此外，由于量子位的叠加特性，量子通信提高了整体安全性。<br>此外，物联网（IoT）在元宇宙的网络基础设施中扮演着至关重要的角色。物联网传感为用户提供连接元宇宙与现实世界的完全真实、持久、流畅的交互体验。但是，仍然存在瓶颈。例如，数据爆炸和有限的传感资源之间的不平衡。F. Shi 等人提出了选择性感知的解决方案。另一个瓶颈是传感器/执行器性能不佳。为了解决这个问题，H. Ning 等人提出纳米技术有能力提高传感器/执行器的性能（例如，更高的灵敏度和选择性、更短的响应时间和更长的使用寿命）。因此，纳米材料（如石墨烯、纳米线等）的应用将为元宇宙传感和通信领域提供选择。<br>构建元宇宙需要强大的计算系统。目前的计算能力架构还不能满足元宇宙的低门槛和体验密集型需求。然而，云计算、边缘计算等计算范式在一定程度上能够促进计算能力的发展，成为元宇宙的主要基础设施。</p><h2 id="4-2-管理技术"><a href="#4-2-管理技术" class="headerlink" title="4.2 管理技术"></a>4.2 管理技术</h2><p>元宇宙的基础管理技术提供了现实世界和虚拟世界的连接和融合所需的环境，主要包括能源管理、资源管理和会话管理。<br>能源管理技术首先考虑的是元宇宙架构和设施对电能的消耗。许多学者提出了能量监测的方法。例如，R. Krishnamoorthy 等人提出了一种基于物联网的方法来监控负载消耗并以一种有效的方式节省能源。G. Bedi 等人开发了 Elman 循环神经网络模型和指数功率预测模型，以减少功率损耗并节省成本。元宇宙的中长期发展需要寻找更稳定、更可持续的能源。能源可持续性不仅是元宇宙的核心约束，也是一个投资机会。<br>如何有效地发现和分配资源是元宇宙资源管理技术背景下亟待解决的问题。研究人员也在不断探索资源管理策略，为元宇宙的实施提供基础。L.N.Nunes等提出了一种基于淘汰选择的资源搜索与发现算法来解决异构环境下的资源搜索与发现问题。R. S. Moorthy 等人提出了一种基于正弦-余弦优化算法的新的云资源发现机制。Y. Han 等人提出了一个动态资源分配框架来同步元宇宙与物联网服务和数据。<br>会话管理是对异构网络中泛在资源与资源用户交互的管理。在元宇宙环境中，管理具有动态特征的持久交互非常重要，尤其是对于具有多个资源用户的会话。此外，会话的实时性可用于增加用户的沉浸式体验。Park K. Y. 等人讨论了如何在5G无线网络环境下实现用户的高性能会话管理。此外，元宇宙还应防止会话被攻击。Nadar V. M. 等研究了一种防御破坏性身份验证和会话管理攻击的方法。M. Marlinspike 等开发了芝麻算法来加密异步消息并提高会话期间的安全系数。</p><h2 id="4-3-基础共性技术"><a href="#4-3-基础共性技术" class="headerlink" title="4.3 基础共性技术"></a>4.3 基础共性技术</h2><p>元宇宙的基础共性技术包括人工智能、时空一致性、安全与隐私等。<br>AI算法（即机器学习、深度学习、强化学习等）是连接虚拟世界和现实世界的“钥匙”。人工智能的三大要素，即数据、算法和算力，在元宇宙的建立和发展中起着至关重要的作用。通过使用人工智能技术，元宇宙可以安全、自由地参与超出现实世界边界的社会和经济活动。利用计算机视觉、智能语音、自然语言处理等技术，让用户拥有与现实世界相同的视觉和听觉感受。<br>时空一致性是元宇宙最基本的特征。元宇宙的最终形态是真实人类社会的平行数字时空连续体，因此一致的时空数据对于现实世界与元宇宙之间的映射至关重要。G. Atluri 等人探索了时空数据挖掘的方法。此外，还需要研究时间同步、目标定位、时间配准、空间配准等时空一致性方法。<br>用户数据的安全和隐私是现实世界中最大的问题之一。随着元宇宙的出现，收集到的个人数据的数量和丰富程度是前所未有的。未来很可能会有多个公司/机构共同建设一个或多个元宇宙，那么如何与公司/机构协调数据，以及不同元宇宙之间如何交互数据，以保证元宇宙的隐私和安全。Z. Zhang 等人对用户访问认证、网络态势感知、危险行为监控、异常流量识别等方面的文献进行了调研，为优化元宇宙的安全和隐私提供参考。B. Falchuk 等人也提出了元宇宙中的隐私问题。</p><h2 id="4-4-虚拟现实对象连接技术"><a href="#4-4-虚拟现实对象连接技术" class="headerlink" title="4.4 虚拟现实对象连接技术"></a>4.4 虚拟现实对象连接技术</h2><p>元宇宙将作为物理世界和数字世界之间的桥梁，与支持身份建模、去中心化技术和社会计算密不可分。<br>元宇宙可以简单地理解为与现实世界平行的网络世界。因此，与现实世界一样，个人进入元宇宙需要身份凭证，无论是否与真实身份相关，采用哪种身份建模技术满足其需求。身份建模和身份寻址是连接现实世界和元宇宙的桥梁，将成为元宇宙时代一个非常重要的研究领域。<br>生活在元宇宙的用户离不开社交计算。元宇宙的出现不会以虚拟的社交关系取代真实的社交关系，而是会带来一种线上线下融合的新型社交关系。社会计算通过研究人类行为和社会关系来预测元宇宙的运行规律和未来发展趋势。此外，更容易在元宇宙收集用户的位置、年龄、喜好等信息并进行详细评估，以更好地支持元宇宙的社会。<br>元宇宙的每一部分都信奉去中心化的理念，需要借助去中心化的底层技术来保障元宇宙的安全和运行。去中心化技术包括区块链、分布式存储、分布式计算等，元宇宙应用最典型的去中心化技术是区块链技术。B. Ryskeldiev 等人针对混合现实应用的虚拟空间提出了一种基于分布式区块链的点对点分发模型。</p><h2 id="4-5-虚拟现实空间融合技术"><a href="#4-5-虚拟现实空间融合技术" class="headerlink" title="4.5 虚拟现实空间融合技术"></a>4.5 虚拟现实空间融合技术</h2><p>元宇宙将通过整合虚拟现实深刻改变现有社会的组织和运作。要实现虚拟世界与现实世界的空间融合，增强现实、脑机接口、视频游戏技术必不可少。<br>AR/VR/MR技术是元宇宙建设的技术支柱之一。增强现实（AR）通过设备识别和评估（二维、三维、GPS、体感、面部等检测到的物体），将基于检测到的物体的虚拟信息叠加在一个位置上，并显示在设备的屏幕上，允许虚拟信息进行实时交互。虚拟现实 (VR) 为用户提供完全身临其境的体验，让他们感觉自己身处现实世界。它是一个先进的、理想化的虚拟现实系统。混合现实 (MR) 是一种新的可视化环境，它结合了现实世界和虚拟世界。在新的可视化环境中，物理和数字对象实时共存和交互。未来VR/AR/MR之间的界限将变得模糊，成为融合产品。目前，元宇宙主要采用的交互技术是为用户打造一个高度交互的虚拟世界。<br>全息图像是一种记录和再现技术，它通过光学手段呈现物体真实的三维图像。它是计算机技术和电子成像技术相结合的结果。它利用相干光干涉记录光波的幅度信息和相位信息，获得物体的所有信息，包括形状、尺寸等。全息图像是真实的三维图像。用户无需佩戴便携设备即可在不同角度用肉眼查看图像。随着技术的发展，物理世界和虚拟世界的界限可以变得模糊，这将为元宇宙的真正实现奠定坚实的基础。<br>脑机接口（BCI）通过准确识别大脑信号，对大脑活动过程中的大脑信号进行编码和解码，供用户进行游戏、打字等操作。外部物理世界通过将个体大脑信号解码为计算设备识别的命令，可以实现虚拟世界和现实世界的空间融合。R. Abiri 等回顾了基于 EEG 的 BCI 方法。目前也有基于AI技术的BCI研究，以加速BCI的发展，为元宇宙的空间融合奠定基础。<br>电子游戏技术是呈现元宇宙最直观的方式。它不仅可以为元宇宙提供一个创意平台，还可以实现互动内容和社交场景的聚合。游戏引擎是视频游戏技术的核心，是指一些已编译的可编辑计算机游戏系统或一些实时交互图像应用程序的核心组件。游戏引擎的出现降低了游戏设计者和开发者的难度，让他们无需从最基本的代码开始。游戏引擎开发驱动元宇宙中的图像开发，为用户提供更接近现实世界的体验。目前比较成熟的游戏引擎见下表。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%85%83%E5%AE%87%E5%AE%99%E7%9A%84%E6%9C%80%E6%96%B0%E6%8A%80%E6%9C%AF%E3%80%81%E5%BA%94%E7%94%A8%E5%92%8C%E6%8C%91%E6%88%98/5.png"></p><h1 id="5-元宇宙的新社会形态"><a href="#5-元宇宙的新社会形态" class="headerlink" title="5 元宇宙的新社会形态"></a>5 元宇宙的新社会形态</h1><p>元宇宙的出现将把传统的社交网络转变为交互式和沉浸式的 3D 虚拟社交世界。</p><h2 id="5-1-虚拟社交世界"><a href="#5-1-虚拟社交世界" class="headerlink" title="5.1 虚拟社交世界"></a>5.1 虚拟社交世界</h2><p>社交网络和虚拟现实的融合使虚拟社交世界的创建成为可能。这些是 3D 沉浸式环境，将传统的面向内容的社交网络扩展为完全交互式的社交模拟。在社交虚拟世界中，用户由在虚拟世界中导航并与其他用户进行社交互动的化身表示。用户可以通过不同的虚拟社交世界进行传送，参与活动，甚至交易真钱。虚拟社会世界是复杂的社会系统，通过网络物理社会系统（CPSS）的无处不在的设计将真实的社会空间与虚拟的社会环境相结合。下图显示了有助于开发社交元宇宙应用程序的使能技术。物理社交空间与虚拟社交空间的融合需要对虚拟社交世界中的社交互动和社交事件进行持续映射。虚拟社交世界必须满足四个设计要求：</p><ul><li>真实感：要求用户感受沉浸在虚拟社交世界中的情感。</li><li>无处不在：要求虚拟社交元宇宙可以从各种设备和位置无处不在，并且用户的虚拟身份或网络角色在虚拟社交世界中的转换过程中保持连接。</li><li>互操作性：虚拟社交世界采用标准的能力，允许用户在元宇宙中的不同虚拟位置之间无缝传送/移动，而不会断开和中断他们的沉浸式体验。</li><li>可扩展性：虚拟社交世界以这样一种方式管理计算能力的能力，即大量用户可以在元宇宙中进行社交互动，而不会在他们的沉浸式体验中遇到断开和中断的情况。</li></ul><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%85%83%E5%AE%87%E5%AE%99%E7%9A%84%E6%9C%80%E6%96%B0%E6%8A%80%E6%9C%AF%E3%80%81%E5%BA%94%E7%94%A8%E5%92%8C%E6%8C%91%E6%88%98/6.png"></p><h2 id="5-2-元宇宙中的社交隐私"><a href="#5-2-元宇宙中的社交隐私" class="headerlink" title="5.2 元宇宙中的社交隐私"></a>5.2 元宇宙中的社交隐私</h2><p>可以通过跟踪社交元宇宙中的数字足迹，发现用户的真实身份和其他敏感信息，例如位置、购物偏好甚至财务细节。隐私的重要性在塑造社交元宇宙方面起着至关重要的作用。在传统社交网络中应用隐私保护方案要容易得多，因为用户可以决定与谁分享他们的社交媒体内容。另一方面，这种隐私控制在社交元宇宙中是不可能的，因为用户不能改变构建的虚拟世界的虚拟属性，这使得用户隐私保护具有挑战性。比如：如果你在社交元宇宙中的一个商场中导航，并且一个头像跟随你的头像并记录你购买的所有东西和你的旅行历史，这些信息可用于执行可能侵犯你隐私的社交工程攻击现实世界。另一方面，我们不能像在传统社交媒体中那样，在元宇宙中关闭谁可以关注我们的头像。元宇宙中的另一个隐私示例：您希望在家中拥有与现实世界中一样多的隐私。然而，当前的虚拟社交网络允许其他化身在地图上自由导航，包括你的房子，你不能报警，就像有人入侵你的房子一样。<br>解决社交元宇宙中隐私问题的建议解决方案之一是社交克隆。这涉及在元宇宙中为每个用户创建多个克隆，以混淆试图在元宇宙中跟踪个人的攻击者。这样的隐私保护方案或许可以解决一些问题，但它通过允许用户在元宇宙中具有多种表示而产生了更大的问题，更不用说数百万个克隆在元宇宙中漫游，这将不仅仅是攻击者混淆。其他隐私保护方案包括通过定期更改头像的外观来伪装用户，使攻击者更难针对特定个人，并使头像在被跟踪时暂时不可见。社交元宇宙的隐私框架可以结合多个隐私方案，用户可以选择为每种情况启用特定的隐私选项。Falchuk 等人提出了一种结合了虚拟克隆、私人复制、人体模型、头像锁定、头像伪装、传送和隐身等各种隐私技术的隐私方案，如下表所示。而其他研究人员则认为，用户所在国家/地区的隐私管辖权也应适用于元宇宙，尤其是在元宇宙中的社会关系方面。Lo 等人主张加拿大的个人信息保护和电子文件法 (PIPEDA) 应该成为像第二人生这样的社交虚拟网络中的州长隐私法。</p><table><thead><tr><th align="center">方案</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">化身克隆</td><td align="center">创建多个看起来相同的虚拟形象克隆以迷惑隐私入侵者。</td></tr><tr><td align="center">伪装</td><td align="center">用户切换多个伪装头像的能力。</td></tr><tr><td align="center">人体模型</td><td align="center">用模仿用户行为的机器人代替头像，并在怀疑跟踪的情况下将用户传送到另一个位置。</td></tr><tr><td align="center">隐形</td><td align="center">允许头像暂时不可见，以防止其被隐私入侵者或机器人跟踪。</td></tr><tr><td align="center">传送</td><td align="center">化身立即传送到元宇宙中其他位置的能力。</td></tr><tr><td align="center">私人世界</td><td align="center">允许元宇宙的某些位置仅被某些用户占用为私人位置。</td></tr><tr><td align="center">锁定</td><td align="center">元宇宙的某些部分被临时锁定以供某些头像私人使用。</td></tr></tbody></table><h1 id="6-元宇宙的超时空观"><a href="#6-元宇宙的超时空观" class="headerlink" title="6 元宇宙的超时空观"></a>6 元宇宙的超时空观</h1><p>超时空的概念在中国古代和国外经常被提及。在中国，超时空最早以古代神话故事的形式出现。道家将超时空提升到了理论水平，经典的道家老庄文学是对传统时空观的异端。</p><ul><li>老子：老子的“道”包含了精炼的时空思想。</li><li>庄子：庄子的“道”以相对论的方式打破了传统的时空束缚。</li><li>列子：列子的“道”与“道”过程中时空的脱离有关。 破碎的时空被直觉地重组为想象世界的形式，直接到达“道”。</li></ul><p>在西方，无论是柏拉图的“三重世界”、亚里士多德的“神学”、黑格尔的“绝对理念”等等，这些古老的西方经典理论也都体现了超时空性。</p><ul><li>柏拉图：柏拉图将世界分为三个部分：理性世界（不可见的永恒真理原型世界）、现实世界（模仿理性世界的可见的、易腐烂的真实物质世界）和艺术世界（模仿理性世界和 现实世界）。</li><li>亚里士多德：亚里士多德的“神学”假定理性是永恒的，没有起源和灭绝。 它是万物运动的原因，具有超时空的特性。</li><li>黑格尔：黑格尔的“绝对理念”假定自然界是“绝对理念”的外化。 “绝对理念”决定了时间和空间的关系。 它是发展到一定阶段的时空形式。 “绝对理念”先于时空或超时空。</li><li>弗洛伊德：弗洛伊德在潜意识理论中提到的梦时空，是一种偏离现实的时空。</li></ul><p>在现实世界中，人类行为发生在物理时间和空间中。时空保证了人类行为的正常进程，但也限制了人类的行为，使其不能偏离时空的真实特征。元宇宙打破了现实世界中时空的限制。元宇宙的超时空可以从两个时空层面来讨论：</p><ul><li>超越时间的限制，回到过去，到达未来。</li><li>在一定时间内超越物理空间，穿越空间，穿越时空。</li></ul><p>元宇宙的超时空性质反映在这样一个事实中，即元宇宙是一个与现实世界不同的时空。它并不仅仅停留在静态数字空间的构建上，而是一个与真实动态世界并行演进的虚拟空间。它为人类开辟了新的栖息地，为用户带来不一样的体验。目前，在互联网、5G、VR等技术的加持下，元宇宙处于稳健发展阶段。元宇宙给了人类创造与传统现实世界平行的全息数字世界的机会。未来将广泛应用于教育、工业等领域，具体应用见下表：</p><table><thead><tr><th align="center">领域</th><th align="left">说明</th></tr></thead><tbody><tr><td align="center">教育</td><td align="left">为学生提供身临其境的教育体验。比如在学习行星的时候，展示宇宙星系，可以放大和缩小，这样可以清楚地看到宇宙的纹理和特征。在学习古建筑的时候，你可以回到那个时代，亲身体验建筑的建造过程和细节。</td></tr><tr><td align="center">工业</td><td align="left">实现虚拟验证设计，规划和优化产品全生命周期的制造过程，解决产品试制周期长、制造过程不稳定的问题，使用高度仿真的虚拟产品进行市场和实际现场测试。</td></tr><tr><td align="center">艺术</td><td align="left">越来越多的展品以数字化的形式呈现，让博物馆的展览可以延伸到更多的地区。同时，通过虚实结合的展品展示无法近距离接触的珍贵藏品，实现人与藏品的多种互动方式。</td></tr><tr><td align="center">医疗</td><td align="left">广泛应用于远程医疗、虚拟医疗、远程监护、数据驱动医疗等领域。利用有限的设备资源，为患者诊断、急救、护理等提供高度移动化、数字化、实时化、远程化的医疗服务，提高医疗效率，实现医疗行业信息化。</td></tr><tr><td align="center">社会</td><td align="left">创造一个独立于用户真实社交关系的平行社交世界，增加用户的自由度，让他们摆脱现实世界的束缚，扩大社交圈子。最后，现实世界中存在着约定俗成的时空秩序。中国古代的“道”境界和西方古代超现实主义，彻底消除了理想和虚幻的时空属性。元宇宙介于两者之间。尽管具有超时空特性，但技术人员始终保持用户交互的时空一致性。所以完全不用担心元宇宙造成的时空混乱。</td></tr></tbody></table><h1 id="7-元宇宙的应用落地"><a href="#7-元宇宙的应用落地" class="headerlink" title="7 元宇宙的应用落地"></a>7 元宇宙的应用落地</h1><p>元宇宙首先实现应用落地的比较可能的场景有以下几个。</p><h2 id="7-1-智慧城市"><a href="#7-1-智慧城市" class="headerlink" title="7.1 智慧城市"></a>7.1 智慧城市</h2><p>作为与现实平行的虚拟世界，元宇宙采用了数字孪生技术，这也是构建智慧城市的重要手段。数字孪生技术可以对物理世界进行数字化映射，全面捕捉人、车、物、空间等城市数据，形成可视、可控、可管理的数字孪生城市。可以提高资源利用效率，优化城市管理和服务，提高市民生活质量。</p><h2 id="7-2-游戏"><a href="#7-2-游戏" class="headerlink" title="7.2 游戏"></a>7.2 游戏</h2><p>交互技术的发展极大地提升了游戏玩法的沉浸感，可以有效提升用户体验、可玩性和享受性。</p><h2 id="7-3-远程办公和虚拟会议"><a href="#7-3-远程办公和虚拟会议" class="headerlink" title="7.3 远程办公和虚拟会议"></a>7.3 远程办公和虚拟会议</h2><p>在新冠肺炎疫情的影响下，远程办公的重要性已经显现。元宇宙可以弥补原有远程办公模式的局限性，进一步完善远程办公的功能，为远程办公创造更多机会。</p><h2 id="7-4-数字观光"><a href="#7-4-数字观光" class="headerlink" title="7.4 数字观光"></a>7.4 数字观光</h2><p>元宇宙的建设可以更好地实现数字旅游和数字展览。数字孪生技术和交互技术的发展，让用户突破时间、空间等因素的限制，自由游览世界各地的景点，获得身临其境的体验。</p><h2 id="7-5-心理治疗"><a href="#7-5-心理治疗" class="headerlink" title="7.5 心理治疗"></a>7.5 心理治疗</h2><p>元宇宙可以帮助进行心理治疗。<br>元宇宙可以提供以下帮助：</p><ul><li>构建一个虚拟和放松的环境。</li><li>与虚拟角色交流和互动。</li></ul><h2 id="7-6-教育"><a href="#7-6-教育" class="headerlink" title="7.6 教育"></a>7.6 教育</h2><p>元宇宙的建设有助于促进儿童教育、严肃游戏和学前教育。<br>元宇宙可以为教育做出以下贡献：</p><ul><li>沉浸式、模拟真实场景，促进对学习内容的理解。</li><li>避免现实实验的危害。</li></ul><h2 id="7-7-经济"><a href="#7-7-经济" class="headerlink" title="7.7 经济"></a>7.7 经济</h2><p>区块链技术，去中心化，以及元宇宙内新兴产业的发展和崛起，可以有效带动经济发展。</p><h2 id="7-8-文化和娱乐"><a href="#7-8-文化和娱乐" class="headerlink" title="7.8 文化和娱乐"></a>7.8 文化和娱乐</h2><p>元宇宙作为一种新的社会形态，将催生出新的文化形态和文化创造方式。交互技术的发展和沉浸感的进一步提升，可以有效推动虚拟偶像和虚拟演唱会的发展。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%85%83%E5%AE%87%E5%AE%99%E7%9A%84%E6%9C%80%E6%96%B0%E6%8A%80%E6%9C%AF%E3%80%81%E5%BA%94%E7%94%A8%E5%92%8C%E6%8C%91%E6%88%98/7.jpg"></p><h2 id="7-9-社交互动"><a href="#7-9-社交互动" class="headerlink" title="7.9 社交互动"></a>7.9 社交互动</h2><p>基于场景的社交网络、在线聚会和交友。元宇宙打破了时空的界限，拉近了人与人之间的距离。元宇宙中的人们可以随时随地进行交流。元宇宙可以提供多种形式的社交互动。</p><h1 id="8-元宇宙需要解决的几个问题"><a href="#8-元宇宙需要解决的几个问题" class="headerlink" title="8 元宇宙需要解决的几个问题"></a>8 元宇宙需要解决的几个问题</h1><h2 id="8-1-交互问题"><a href="#8-1-交互问题" class="headerlink" title="8.1 交互问题"></a>8.1 交互问题</h2><p>作为虚拟世界与现实世界之间的媒介，元宇宙的交互技术需要满足以下条件：</p><ul><li>交互设备轻巧、使用方便、可穿戴、便携。</li><li>交互媒体的透明性让用户可以忽略技术的痕迹，更好地沉浸在虚拟世界中。</li></ul><p>现有的常见交互技术包括：体感技术、XR（VR、AR、MR）技术、脑机接口等。XR技术是指由计算机技术和可穿戴设备产生的真实与虚拟相结合的人机交互环境。XR作为融合虚拟和现实世界的沉浸式技术的总称，包括虚拟现实（VR）、增强现实（AR）、混合现实（MR）以及其他可能因技术进步而出现的新型沉浸式技术。体感技术是指人们不使用任何复杂的控制设备，直接用自己的身体动作与周围的设备或环境进行交互，让人们沉浸式地与内容进行交互。<br>目前，这两种技术都存在交互设备不够轻便透明、成本高的问题，难以普及。<br>脑机接口技术可分为侵入性、半侵入性和非侵入性三种。侵入性是指通过外科手术将电极植入大脑皮层。半侵入性是指将电极植入颅腔内，但在大脑皮层外。非侵入性是指通过连接到头皮的可穿戴设备来解读 EEG 信号。侵入性脑电图采集最为准确，但存在手术风险高、排斥人体组织等风险。无创方式避免了复杂手术的安全风险，但信号采集相对较弱。同时，脑机接口也存在难以传播的问题。</p><h2 id="8-2-计算问题"><a href="#8-2-计算问题" class="headerlink" title="8.2 计算问题"></a>8.2 计算问题</h2><p>计算能力是指处理数据的能力，由三个指标决定：数据的计算、存储和传输。算力是数字经济时代的重要生产力，其设施是技术创新的重要支撑。<br>元宇宙意味着更多的用户、更丰富的网络资源和计算资源，算力是元宇宙的重要支撑。新业态的规划和基于云计算技术的元宇宙平台，增加了对算力资源的需求，也为算力的发展提供了空间。元宇宙使用的云存储、云计算、云渲染等技术对客户端设备性能和服务器弹性提出了很高的要求。元宇宙需要不断提高处理速度、复杂度和功耗。</p><h2 id="8-3-道德伦理问题"><a href="#8-3-道德伦理问题" class="headerlink" title="8.3 道德伦理问题"></a>8.3 道德伦理问题</h2><p>元宇宙赋予了人们新的身份，为生活和活动创造了一个新的、非常自由的空间。它包含更复杂的社会关系。元宇宙作为下一代网络，必须控制和约束用户的行为，建立明确的伦理道德规范，维护元宇宙良好有序的生态环境。<br>元宇宙伦理道德问题是指元宇宙因相应道德规范的缺失和混乱而产生的与现实社会的伦理规范相冲突的现象。<br>元宇宙需要解决的伦理道德问题：</p><ul><li>诚信问题——发布和传播虚假信息、欺诈。</li><li>气氛不利的问题。</li><li>侵犯知识产权。</li></ul><p>随着元宇宙交互技术的发展，当大脑的意识可以像计算机信息一样被编辑、存储和复制时，科幻电影中的场景可能不再具有想象力。在这一点上，伦理的作用变得非常重要。原有的道德规范受到影响，新道德规范的制定滞后，跟不上元宇宙的发展。因此，应加强对元宇宙的监管，及时制定和更新相关法律法规。</p><h2 id="8-4-隐私问题"><a href="#8-4-隐私问题" class="headerlink" title="8.4 隐私问题"></a>8.4 隐私问题</h2><p>元宇宙与现实世界紧密相连，对应真实身份。元宇宙作为新一代网络的建设，与以往的网络环境一样，必须充分考虑数据隐私保护问题。</p><h2 id="8-5-网络综合症"><a href="#8-5-网络综合症" class="headerlink" title="8.5 网络综合症"></a>8.5 网络综合症</h2><p>网络综合症是一种由过度使用互联网引起的身体、社会和精神障碍。随着交互方式的不断发展，电子设备变得更小、更便携。设备的精简使人们在互联网上花费的时间越来越多。同时，元宇宙与现实世界紧密相连。虚实融合，以及元宇宙高度的沉浸感，让网络综合症的问题更加严重。</p><h2 id="8-6-标准和兼容性问题"><a href="#8-6-标准和兼容性问题" class="headerlink" title="8.6 标准和兼容性问题"></a>8.6 标准和兼容性问题</h2><p>作为一个与现实紧密相连、具有多维性的虚拟世界，元宇宙需要建立标准。元宇宙的兼容性和标准化问题可以分为两个方面：</p><ul><li>不同公司创建的元宇宙之间的兼容性问题。</li><li>元宇宙与现实世界的兼容性（包括货币兼容性和流通问题，以及法律纠纷的处理）。</li></ul><h1 id="9-总结"><a href="#9-总结" class="headerlink" title="9 总结"></a>9 总结</h1><p>元宇宙具有广阔的发展和应用前景。本文总结了不同国家和企业的工作，收集了与元宇宙相关的论文，介绍了元宇宙的多技术性、社会性和超时空性三个特点，预测了元宇宙的第一个应用领域，并讨论了它的问题和挑战。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 元宇宙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>翻译、编译、解释、汇编</title>
      <link href="/2021/08/17/ji-suan-ji-ke-xue-ji-chu/fan-yi-bian-yi-jie-shi-hui-bian/"/>
      <url>/2021/08/17/ji-suan-ji-ke-xue-ji-chu/fan-yi-bian-yi-jie-shi-hui-bian/</url>
      
        <content type="html"><![CDATA[<h1 id="翻译程序"><a href="#翻译程序" class="headerlink" title="翻译程序"></a>翻译程序</h1><p>翻译程序是指把高级语言源程序翻译成机器语言程序（目标代码）的软件。</p><p>翻译程序包括编译程序和解释程序。</p><h1 id="编译程序"><a href="#编译程序" class="headerlink" title="编译程序"></a>编译程序</h1><p>编译程序将高级语言源程序一次全部翻译成目标程序，每次执行程序时，只需执行目标程序，因此只要源程序不变，就无须重新编译。</p><p>虽然高级语言号称跨平台、可移植，但是同一种高级语言在不同计算机体系结构下，编译生成的目标程序是不同的。目标程序与体系结构相关，可惜仍不是计算机硬件能够直接执行的程序。</p><h1 id="汇编程序"><a href="#汇编程序" class="headerlink" title="汇编程序"></a>汇编程序</h1><p>汇编程序也是一种语言翻译程序，它把汇编语言源程序翻译成机器语言程序。</p><p>汇编语言是一种面向机器的低级语言，是机器语言的符号表示，与机器语言一一对应。</p><p>需要注意的是，编译后生成的目标文件不是汇编语言源程序，比如Java编译后生成的.class。</p><p>参考代码：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">section .datamsg db <span class="token string">'Hello, Assembly!'</span>, 0x0a <span class="token punctuation">;</span> 创建字符串变量lenequ$ - msg                 <span class="token punctuation">;</span> 获取字符串的长度 section .textglobal _start                   <span class="token punctuation">;</span> 使用gcc_start:                         <span class="token punctuation">;</span> 汇编程序执行的入口    movedx, len                <span class="token punctuation">;</span> 加载字符串长度    mov ecx, msg                <span class="token punctuation">;</span> 加载.data部分中创建的变量的内存地址    mov ebx, <span class="token number">1</span>                  <span class="token punctuation">;</span> 向stdout中写入字符串    mov eax, <span class="token number">4</span>                  <span class="token punctuation">;</span> 系统调用sys_write    int 0x80                    <span class="token punctuation">;</span> restart_syscall，<span class="token variable"><span class="token variable">`</span>int 80h<span class="token variable">`</span></span>也行    moveax, <span class="token number">1</span>                  <span class="token punctuation">;</span> 系统调用sys_exitint0x80                    <span class="token punctuation">;</span> restart_syscall<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>学习资料：</p><ul><li><a href="https://www.tutorialspoint.com/compile_assembly_online.php">汇编语言在线调试环境</a></li><li><a href="https://asmtutor.com/">汇编语言在线教程</a></li><li><a href="https://chromium.googlesource.com/chromiumos/docs/+/HEAD/constants/syscalls.md">Linux系统调用表</a></li></ul><h1 id="解释程序"><a href="#解释程序" class="headerlink" title="解释程序"></a>解释程序</h1><p>解释程序将源程序的一条语句翻译成对应的机器目标代码，并立即执行，然后翻译下一条源程序语句并执行，直至所有源程序语句全部被执行完，不会生成目标程序。</p><h1 id="编译型语言和解释型语言"><a href="#编译型语言和解释型语言" class="headerlink" title="编译型语言和解释型语言"></a>编译型语言和解释型语言</h1><p>编译型语言的程序执行之前，需要一个编译的过程，把程序编译成为机器语言的文件，例如exe文件，运行时不用重新翻译。由于翻译只进行一次，运行时不需要翻译，所以编译型语言的程序执行效率较高。C、C++、Rust等都是典型的编译型语言。</p><p>解释型语言是相对于编译型语言存在的，其源代码不是直接翻译成机器语言，而是先翻译成中间代码，再由解释器对中间代码进行解释运行。Python、JavaScript、Perl、Shell等脚本语言都是解释型语言。</p><p>解释型语言的程序不需要编译，程序在运行时才翻译成机器语言，每执行一次都要翻译一次。因此效率比较低。</p><p>编译型语言与解释型语言，两者各有利弊。<br>前者由于程序执行速度快，同等条件下对系统要求较低，因此开发操作系统、大型应用程序、数据库系统等时会采用它们。<br>后者由于对速度要求不高、对不同系统平台间的兼容性有一定要求，因此编写网页脚本、服务器脚本及辅助开发接口时会采用它们。</p><p>编译型语言不如解释型语言跨平台性好。<br>编译型语言开发程序后，需要通过编译器把程序编译成机器语言。解释型语言程序进行移植后，要重新编译。<br>Java虽然需要编译，但本质是解释型语言，需要通过编译器编译成class文件，在什么平台运行需要对应平台的解释器。跨平台的前提是平台上必须要有相匹配的JVM。</p><h2 id="C程序编译"><a href="#C程序编译" class="headerlink" title="C程序编译"></a>C程序编译</h2><p>C程序可以在许多不同的机器上运行。这种可移植性是C语言的另一个优点。程序首先在目标机器上使用C编译器编译。存在略有不同的C编译器版本，包括cc（C编译器），或者gcc（GNU C编译器）。</p><p>这里我们用gcc编译并运行一个C程序，该编译器可以免费下载。它可以直接运行在Linux机器上，也可以在Windows机器上通过Cygwin环境访问。它可以用于许多嵌入式系统，如Microchip PIC32微控制器。</p><p>下面描述的C文件创建、编译和执行的一般过程对于任何C程序都是相同的。</p><ol><li>创建文本文件（Windows可用经典的记事本，但是不要用Word这种有格式化的，和Java要求一样）。我们这里取名为hello.c。</li><li>在终端窗口中，切换到hello.c文件的目录，在命令提示符处输入<code>gcc hello.c</code>。</li><li>编译器创建一个可执行文件。默认情况下，可执行文件名为a.out（Windows机器上是a.exe）。</li><li>在命令提示符处，键入 <code>./a.out</code>（Windows为 <code>./a.exe</code>），然后按回车。</li><li>终端窗口显示输出。</li></ol><p>gcc也可以编译一组多个C源文件。这样的一组C文件中只能包含一个main()函数，通常在main.c中，切记切记。<br>编译命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gcc main.c file2.c file3.c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>命令行中输入<code>gcc --help</code>可以查看编译器选项：</p><table><thead><tr><th>编译器选项</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td>-ooutfile</td><td>指定输出文件名</td><td>gcc -o hello hello.c</td></tr><tr><td>-S</td><td>创建汇编语言输出文件（不可执行）</td><td>gcc -S hello.c this produces hello.s</td></tr><tr><td>-v</td><td>详细模式——在完成编译时输出编译结果和过程</td><td>gcc -v hello.c</td></tr><tr><td>-Olevel</td><td>指定优化水平（通常为0~3），生成更快和更小的代码，但是代价是编译时间长</td><td>gcc -O2 hello.c</td></tr><tr><td>–version</td><td>列出编译器版本</td><td>gcc -version</td></tr><tr><td>–help</td><td>列出所有命令行选项</td><td>gcc - -help</td></tr><tr><td>–Wall</td><td>输出所有警告</td><td>gcc -Wall hello.c</td></tr></tbody></table><p>argc表示命令行上参数的个数。argv表示参数向量，为命令行上发现的字符串数组。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>argc<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"argv[%d]=%s\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> argv<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">gcc <span class="token operator">-</span>o testargs<span class="token punctuation">.</span>c <span class="token punctuation">.</span><span class="token operator">/</span>testargs arg1 <span class="token number">25</span> lastarg<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>控制台输出：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">.</span><span class="token operator">/</span>testargsargv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>arg1argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">25</span>argv<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span>lastarg<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>需要数字参数的程序可以使用stdlib.h中的函数将字符串参数转换为数字。</p><p>编译过程中编译器的整体操作：</p><ol><li>通过包含引用库和扩大宏定义来预处理文件。</li><li>忽略所有的不必要信息，如注释。</li><li>将高级代码转换为用二进制表示的本地处理器的简单指令，即机器语言。</li><li>将所有的指令转换成一个可由计算机读取和执行的简单二进制可执行文件。</li></ol><p>每种机器语言特定于一种给定的机器，因此程序必须专门为其将要运行的系统进行编译。</p><h2 id="Java程序编译和解释"><a href="#Java程序编译和解释" class="headerlink" title="Java程序编译和解释"></a>Java程序编译和解释</h2><p>以Java为例，<code>Hello.java</code>编译成.class字节码：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">javac Hello.java<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解释执行<code>Hello.class</code>：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">java Hello<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Java编译的补充知识：</p><ul><li><a href="https://blankspace.blog.csdn.net/article/details/104552096">命令行下的Java包结构编译与执行</a></li><li><a href="https://blankspace.blog.csdn.net/article/details/104555618">命令行下的Java模块化建构、编译与执行</a></li></ul><h2 id="Python程序解释"><a href="#Python程序解释" class="headerlink" title="Python程序解释"></a>Python程序解释</h2><p>以Python为例，执行<code>hello.py</code>脚本：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python hello.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机科学基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>透明性</title>
      <link href="/2021/08/16/ji-suan-ji-ke-xue-ji-chu/tou-ming-xing/"/>
      <url>/2021/08/16/ji-suan-ji-ke-xue-ji-chu/tou-ming-xing/</url>
      
        <content type="html"><![CDATA[<h1 id="透明性"><a href="#透明性" class="headerlink" title="透明性"></a>透明性</h1><p>自然科学里，透明性是物体透过可见光并散射较少的性质。<br>生活里，我们通常强调“公开透明”，所谓看得见摸得着。</p><p>这种认识会对计算机初学者带来不小的困扰，“XX对XXX是透明的”这种论调经常出现却不能被理解。</p><p>其实，在计算机领域，在某一类人眼中，如果<strong>感受不到</strong>某个事物或属性的存在，则对该类人而言，该事物是<strong>透明</strong>的。</p><p>计算机科学中存在着大量的抽象，特别是对于分层的体系结构，下层对上层屏蔽复杂性并向上层提供服务接口，下层用户知道的某些实现细节对上层隐藏，故上层用户不必知晓某些下层的实现细节，这就是一种下层对上层用户来说的透明性。</p><p>对于高级语言程序员来说，计算机体系结构的复杂内容不是他们关注的内容，他们要基于他们的“跨平台”编程语言完成应用程序的开发，即便不知道底层的复杂性，此时，体系结构对于这些程序员来说就是透明的。</p><p>当然，现实情况是，封装好的东西，应用者不了解其背后的实现原理，也很难达到深刻的理解和掌握。<a href="https://blankspace.blog.csdn.net/article/details/115191951">抽象泄漏</a>自然很难被避免，因为不懂底层，我们也很难走得很远，虽然不是必须懂。</p><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><h2 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h2><p>协议是控制两个对等实体进行通信的规则的集合，是“水平的”，是控制对等实体之间通信的规则。</p><p>在协议的控制下，两个对等实体间的通信使得本层能够向上一层提供服务。要实现本层协议，还需要使用下层所提供的服务。<br>本层的服务用户只能看见服务而无法看见下层的协议。下层的协议对上层的服务用户是透明的。</p><p>数据链路层支持<strong>透明传输</strong>：不管所传输数据是什么样的比特组合，都能在链路上传输（哪怕数据中恰好出现了与帧定界符相同的比特组合）。</p><h2 id="计算机体系结构"><a href="#计算机体系结构" class="headerlink" title="计算机体系结构"></a>计算机体系结构</h2><p><a href="https://blankspace.blog.csdn.net/article/details/113634653">电子计算机的分层抽象</a>，可以将计算机分为九层：应用程序层、操作系统层、体系结构层、微结构层、逻辑层、数字电路层、模拟电路层、器件层、物理层。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E9%80%8F%E6%98%8E%E6%80%A7/1.png" alt="电子计算机的分层抽象"></p><p><strong>自底向上</strong>各层情况是：</p><ul><li>物理层关注的是电子运动，由麦克斯韦方程组、量子力学等支持。 </li><li>器件层关注的是晶体管、真空管等电子元器件，这些器件都有明确的外部连接点terminal，建立起了每个terminal上电压与电流之间的关系模型。 </li><li>模拟电路层关注的是器件组合在一起构成的放大器等组件，输入输出都是连续的电压值。 </li><li>数字电路层关注的是逻辑门，电压被控制为离散的值表示为0和1。 </li><li>逻辑层关注的是由数字电路层的逻辑门构成的逻辑组件，如加法器等。 </li><li>微结构层将逻辑组件组合在一起以实现体系结构中定义的指令。 </li><li>体系结构描述的是程序员观点的计算机抽象。 </li><li>操作系统是和硬件最为密切的程序，既是资源分配器，又控制各着种I/O设备和用户程序的需求。 </li><li>应用软件基于操作系统实现多种多样的应用功能。</li></ul><p>例如：</p><ul><li>对于器件层，物理层的电子运动是透明的，不可见。 </li><li>对于操作系统层，体系结构的内容是透明的，不可见。</li><li>……</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机科学基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XaaS</title>
      <link href="/2021/08/11/ji-suan-ji-ke-xue-ji-chu/xaas/"/>
      <url>/2021/08/11/ji-suan-ji-ke-xue-ji-chu/xaas/</url>
      
        <content type="html"><![CDATA[<h1 id="云计算"><a href="#云计算" class="headerlink" title="云计算"></a>云计算</h1><p>云计算是一种按使用量付费的模式，这种模式提供可用的、便捷的、按需的网络访问，进入可配置的计算资源共享池（资源包括网络、服务器、存储、应用软件、服务），这些资源能够被快速提供，只需投入很少的管理工作，或与服务提供商进行很少的交互。</p><h1 id="XaaS"><a href="#XaaS" class="headerlink" title="XaaS"></a>XaaS</h1><p>与云计算相匹配的是<strong>XaaS</strong>，X指代各种计算资源，XaaS意为anything as a Service 或者everything as a Service，一切皆服务。<br>XaaS强调的是下游对上游按照契约提供服务，隐藏实现的细节，并且通常是通过网络的形式来提供服务。</p><h1 id="典型XaaS"><a href="#典型XaaS" class="headerlink" title="典型XaaS"></a>典型XaaS</h1><h2 id="SaaS"><a href="#SaaS" class="headerlink" title="SaaS"></a>SaaS</h2><p>SaaS，Software as a Service，软件即服务，软件分发方式中心化，供用户订阅。</p><p>软件安装在中央服务器上，通过网络远程访问，即可使用软件的功能。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/XaaS/1.png"></p><h2 id="PaaS"><a href="#PaaS" class="headerlink" title="PaaS"></a>PaaS</h2><p>PaaS，Platform as a Service，平台即服务，服务提供商提供开发的整体环境。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/XaaS/2.png"></p><h2 id="IaaS"><a href="#IaaS" class="headerlink" title="IaaS"></a>IaaS</h2><p>IaaS，Infrastructure as a Service，基础设施即服务，虚拟化，用户需要配置和部署中间件和应用服务。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/XaaS/3.png"></p><h2 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h2><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/XaaS/4.png"></p><h1 id="其他XaaS"><a href="#其他XaaS" class="headerlink" title="其他XaaS"></a>其他XaaS</h1><ul><li>存储即服务：(storage as a service)</li><li>安全即服务：SECaaS(security as a service)</li><li>数据库即服务：DaaS(database as a service)</li><li>监控/管理即服务：MaaS(monitoring/management as a service)</li><li>通信、内容和计算即服务：CaaS(communications, content and computing as a service)</li><li>身份即服务：IDaaS(identity as a service)</li><li>备份即服务：BaaS(backup as a service)</li><li>桌面即服务：DaaS(desktop as a service)</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云计算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机系统</title>
      <link href="/2021/03/30/ji-suan-ji-ke-xue-ji-chu/ji-suan-ji-xi-tong/"/>
      <url>/2021/03/30/ji-suan-ji-ke-xue-ji-chu/ji-suan-ji-xi-tong/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机系统的组成"><a href="#计算机系统的组成" class="headerlink" title="计算机系统的组成"></a>计算机系统的组成</h1><p>计算机由计算机硬件和计算机软件组成。</p><ol><li>硬件：计算机的实体、如主机、外设等</li><li>软件：<ul><li>系统软件：管理整个计算机系统的软件<ul><li>语言处理程序，如编译器</li><li><a href="https://blog.csdn.net/weixin_43896318/category_9500428.html">操作系统</a></li><li><a href="https://blog.csdn.net/weixin_43896318/category_9673746.html">数据库管理系统</a>，注意不是数据库</li><li><a href="https://blog.csdn.net/weixin_43896318/category_9673744.html">网络软件</a></li></ul></li><li>应用软件： 按任务需要编制成的各种程序</li></ul></li></ol><h1 id="计算机发展历程"><a href="#计算机发展历程" class="headerlink" title="计算机发展历程"></a>计算机发展历程</h1><ol><li>计算机硬件的发展<ul><li>电子管时代(1946~1958)：操作指令是为特定任务而编制的，每种机器有各自不同的机器语言，功能受到限制，速度也慢。另一个明显特征是使用真空电子管和磁鼓储存数据。</li><li>晶体管时代(1956-1963)：晶体管代替了体积庞大电子管，使用磁芯存储器。体积小、速度快、功耗低、性能更稳定。还有现代计算机的一些部件，如打印机、磁带、磁盘、内存、操作系统等。在这一时期出现了更高级的COBOL和FORTRAN等编程语言，使计算机编程更容易。新的职业(程序员、分析员和计算机系统专家)和整个软件产业由此诞生。</li><li>中小规模集成电路(1964-1971)：以中小规模集成电路，来构成计算机的主要功能部件。主存储器采用半导体存储器。运算速度可达每秒几十万次至几百万次基本运算。在软件方面，操作系统日趋完善。</li><li>超大规模集成电路(1971-至今)：从1970年以后采用大规模集成电路(LSI)和超大规模集成电路(VLSI)为主要电子器件制成的计算机，重要分支是以大规模、超大规模集成电路为基础发展起来的微处理器和微型计算机。</li></ul></li><li>计算机编程语言<ul><li>机器语言：二进制代码</li><li>汇编语言：助记符</li><li>高级语言：<a href="https://blog.csdn.net/weixin_43896318/category_9400008.html">C/C++</a>、<a href="https://blog.csdn.net/weixin_43896318/category_9379712.html">Java</a>、……</li><li><a href="https://blankspace.blog.csdn.net/article/details/102681129">编程语言的抽象层次比较</a></li><li>高级语言转化为汇编语言的过程称为编译，汇编语言到机器语言的过程称为汇编，高级语言直接转化为机器语言称为解释</li></ul></li><li>计算机的分类和发展方向<ul><li>分类<ul><li>电子模拟计算机</li><li>电子数字计算机<ul><li>专用机</li><li>通用机</li></ul></li><li>指令流和数据流分类</li></ul></li><li>发展方向(两极分化)</li></ul></li></ol><h1 id="计算机摩尔定律和洛克定律"><a href="#计算机摩尔定律和洛克定律" class="headerlink" title="计算机摩尔定律和洛克定律"></a>计算机摩尔定律和洛克定律</h1><p>超大规模集成电路时代，芯片微型化不断推进，尽头在何处？晶体管能做到多小？芯片可以被包装到多密？没有人可以肯定地回答。</p><p>每年，科学家们都会继续阻挠预言家定义集成极限的尝试。事实上，当1965年英特尔创始人戈登·摩尔声明“<strong>集成电路中晶体管的密度每年都会翻一番</strong>”时，不止一位怀疑者表示怀疑。这一预测的当前版本通常被表述为“<strong>硅芯片的密度每18个月翻一番</strong>”。这一论断被称为<strong>摩尔定律</strong>。根据摩尔的预计，他的论断只能持续10年。然而，芯片制造工艺的进步使这一论断一直持续至今。</p><p>与其说摩尔定律是自然法则，不如说摩尔定律是对创新的期待和芯片设计的重要推动力。摩尔定律自1965年被提出以来一直成立，但为了做到这一点，芯片制造商已经从一种技术跳到另一种技术。</p><p>遗憾的是，根据目前的技术，摩尔定律不可能永远成立。按照现在的微型化速度，要将整个太阳系集成到一块芯片上，大约需要500年的时间。因此，成本可能是最终的制约因素。由英特尔早期资本家亚瑟.洛克提出的<strong>洛克定律</strong>是摩尔定律的必然结果：“<strong>制造半导体的资本设备成本将每四年翻一番</strong>。”洛克定律源于一位金融家的观察，他看到新芯片设施的价格标签从1968年的约12000美元上升到1990年代中期的1200万美元。2005 年，建造新芯片厂的成本接近30亿美元。按照这个速度，到2035年，不仅一个存储单元的大小将小于一个原子，而且还需要全世界的全部财富来构建一个芯片。因此，即使我们继续让芯片变得更小、更快，最终的问题可能还是我们是否有能力制造它们。此外，著名物理学家斯蒂芬霍金称，芯片制造商在寻求“执行”摩尔定律时受到两个基本限制的限制：光速和物质的原子性质。这意味着无论技术如何发展，摩尔定律最终都会失效。</p><p>当然，如果摩尔定律成立，洛克定律就必然失效。若想如此，计算机必须转向一种完全不同的技术。近些年，计算机科学家对新计算范式的研究一直在认真进行。围绕有机计算、超导、分子物理学和量子计算打造的实验室原型已经得到展示。利用量子力学的变幻莫测来解决计算问题的量子计算机尤其令人兴奋。量子系统的计算速度不仅会比以前使用的任何方法快得多，而且还会彻底改变我们定义计算问题的方式。如今被认为是荒谬的、不可行的问题也可能在不久的将来被计算机科学家解决。</p><h1 id="计算机硬件的基本组成"><a href="#计算机硬件的基本组成" class="headerlink" title="计算机硬件的基本组成"></a>计算机硬件的基本组成</h1><ul><li><a href="https://blankspace.blog.csdn.net/article/details/115320818">存储程序原理</a></li><li><a href="https://blankspace.blog.csdn.net/article/details/115312141">冯诺依曼体系结构</a></li><li>CPU=控制器+运算器</li><li>主机=CPU+主存储器</li><li>外设=输入设备+输出设备+辅助存储器</li><li>计算机功能部件<ul><li>存储器<ul><li>主存储器<ul><li>存储字：存储单元存储的一串二进制代码称为存储字</li><li>存储字长：存储字的位数，与MDR的位数相同</li><li>存储单元：存储单元数量=$2^{MAR}$的位数</li><li>存储容量$=$存储单元个数$\times$存储字长</li><li>基本组成<ul><li>存储体：存放二进制信息，由若干存储单元构成</li><li>地址寄存器MAR：存放访存地址</li><li>数据寄存器MDR：暂存要从存储器中读或写的信息</li><li>时序控制逻辑：产生存储器操作所需的各种时序信号</li></ul></li><li>注意：MAR和MDR逻辑上在主存中，实际上在CPU中</li></ul></li><li>辅助存储器</li></ul></li><li>运算器<ul><li>功能<ul><li>算术运算</li><li>逻辑运算</li></ul></li><li>基本组成<ul><li>算术逻辑单元ALU</li><li>乘商寄存器MQ</li><li>操作数寄存器X</li><li>程序状态寄存器PSW</li></ul></li></ul></li><li>控制器<ul><li>功能：指挥各部件自动协调地进行工作</li><li>基本组成<ul><li>控制单元CU：分析指令，给出控制信号</li><li>指令寄存器IR：存放当前的指令，内容来自MDR</li><li>程序计数器PC：用来存放当前欲执行指令的地址，可以自动加1</li></ul></li></ul></li><li>输入设备</li><li>输出设备</li></ul></li></ul><h1 id="计算机工作过程"><a href="#计算机工作过程" class="headerlink" title="计算机工作过程"></a>计算机工作过程</h1><ol><li>把程序和数据装入主存储器</li><li>把源程序转换成可执行文件</li><li>从可执行文件的首地址开始逐条执行指令</li></ol><h1 id="计算机国际标准组织"><a href="#计算机国际标准组织" class="headerlink" title="计算机国际标准组织"></a>计算机国际标准组织</h1><p>一些标准组织拥有正式的章程，并在国际上被公认为电子和计算机某些领域的权威机构。</p><p>电气和电子工程师协会 (IEEE) 是一个致力于促进电子和计算机工程专业发展的组织。 IEEE 通过出版一系列技术文献积极促进全球工程界的利益。 IEEE 还为各种计算机组件、信号协议和数据表示制定了标准，仅举其参与的几个领域。 IEEE 为创建新标准制定了一个民主但复杂的程序。它的最终文件备受尊重，通常在需要修改之前会保留数年。</p><p>国际电信联盟 (ITU) 位于瑞士日内瓦。 ITU 的前身是 ComitéConsultatif InternationalTélégraphiqueetTéléphonique，即国际电话和电报咨询委员会。顾名思义，ITU 关注电信系统的互操作性，包括电话、电报和数据通信系统。 ITU 的电信部门 ITU-T 制定了许多标准，您将在文献中看到这些标准。您会看到这些标准以 ITU-T 或该组织以前的缩写 CCITT 为前缀。</p><p>许多国家，包括欧洲共同体，都委托伞式组织在各种国际团体中代表他们的利益。代表美国的团体是美国国家标准协会 (ANSI)。除了在欧洲标准化委员会 CEN（欧洲标准化委员会）中拥有发言权外，英国还拥有英国标准协会 (BSI)。</p><p>国际标准化组织 (ISO) 是协调全球标准制定的实体，包括 ANSI 与 BSI 等的活动。 ISO 不是首字母缩略词，而是源自希腊语 isos，意思是“平等”。 ISO 由 2800 多个技术委员会组成，每个委员会都负责一些全球标准化问题。它的兴趣范围从摄影胶片的行为到螺纹的螺距，再到计算机工程的复杂世界。国际标准化组织促进了全球贸易的激增。如今，ISO 几乎触及我们生活的方方面面。</p><h1 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h1><ul><li>CPU区分指令和数据的依据：指令周期的不同阶段。</li><li><a href="https://blankspace.blog.csdn.net/article/details/114603270">计算机性能指标</a></li><li>总容量=存储单元个数$\times$存储字长(bit)=存储单元个数$\times$存储字长/8(Byte)=$2^{MAR}$的位数$\times$MDR的位数(bit)</li><li>机器字长：计算机进行一次整数运算所能处理的二进制数据的位数。</li><li>存储字长：一个存储单元存储的二进制代码的长度。</li><li>指令字长：一个指令字中包含的二进制代码的位数。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机组成原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VonNeumann体系结构和存储程序原理</title>
      <link href="/2021/03/30/ji-suan-ji-ke-xue-ji-chu/vonneumann-ti-xi-jie-gou-he-cun-chu-cheng-xu-yuan-li/"/>
      <url>/2021/03/30/ji-suan-ji-ke-xue-ji-chu/vonneumann-ti-xi-jie-gou-he-cun-chu-cheng-xu-yuan-li/</url>
      
        <content type="html"><![CDATA[<h1 id="VonNeumann体系结构"><a href="#VonNeumann体系结构" class="headerlink" title="VonNeumann体系结构"></a>VonNeumann体系结构</h1><p>直到现在，几乎所有的通用计算机都遵循冯诺依曼的设计，即一个具有CPU、存储器和I/O设备组成的架构，把指令和数据放在一个存储器中，取指令和传送数据使用一个总线。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VonNeumann%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%92%8C%E5%AD%98%E5%82%A8%E7%A8%8B%E5%BA%8F%E5%8E%9F%E7%90%86/1.png"></p><p><strong>冯诺依曼体系结构</strong>的特点：</p><ul><li>由三部分硬件组成：一个带有控制单元、算术逻辑单元ALU、寄存器和程序计数器的CPU，一个主存储器系统，一个I/O系统。</li><li>执行顺序指令处理的能力。</li><li>在主存储器系统和CPU的控制单元之间包含一条单一路径，既可以是物理上的也可以是逻辑上的，强制交替指令周期和执行周期。这一单一路径被称为冯诺依曼瓶颈。</li></ul><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VonNeumann%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%92%8C%E5%AD%98%E5%82%A8%E7%A8%8B%E5%BA%8F%E5%8E%9F%E7%90%86/2.png"></p><p>下图为现代通用计算机组成所包含的组件：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VonNeumann%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%92%8C%E5%AD%98%E5%82%A8%E7%A8%8B%E5%BA%8F%E5%8E%9F%E7%90%86/3.png"></p><p>冯诺依曼执行周期：</p><ol><li>控制单元从存储器中取下一条程序指令，使用程序计数器确定指令所在的位置。</li><li>指令解码为ALU能理解的语言。</li><li>从存储器取出执行这条指令所需要的任何操作数，并且放到CPU的寄存器中。</li><li>ALU执行这条指令并且把结果放到寄存器或存储器中。</li></ol><p>即<kbd>取址→译码→执行</kbd>：</p><ul><li>取指  <pre class="line-numbers language-none"><code class="language-none">(PC)-&gt;MAR;M(MAR)-&gt;MDR;(MDR)-&gt;IR;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>分析指令  <pre class="line-numbers language-none"><code class="language-none">OP(IR)-&gt;CU;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>执行指令  <pre class="line-numbers language-none"><code class="language-none">Ad(IR)-&gt;MAR;M(MAR)-&gt;MDR;(MDR)-&gt;ACC;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><p>可以将存储在访问速度慢的存储介质中的程序和数据复制到访问速度快、易失性的存储介质执行。据此，冯诺依曼体系结构可以简化为<strong>系统总线模型</strong>。</p><p>系统总线可以响应计算机内部的所有数据传送。</p><ul><li>数据总线：把数据在主存储器和CPU寄存器之间移动。</li><li>地址总线：保存数据总线正在访问数据的地址。</li><li>控制总线：传送信息传输时必要的控制信号。</li></ul><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VonNeumann%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%92%8C%E5%AD%98%E5%82%A8%E7%A8%8B%E5%BA%8F%E5%8E%9F%E7%90%86/4.png"></p><p>冯诺依曼体系结构的其他增强方法包括使用索引寄存器寻址、增加浮点数据、使用中断和异步I/O、增加虚拟存储器以及增加通用寄存器等。</p><p>早期冯诺依曼体系结构要点：</p><ol><li>计算机硬件系统由运算器、存储器、控制器、输入设备、输出设备组成。</li><li>指令和数据以同等地位存于存储器内，并可按地址寻址。</li><li>指令和数据均用二进制代码表示。</li><li>指令由操作码和地址码组成。<ul><li>操作码表示操作的性质。</li><li>地址码表示操作数在存储器中的位置。</li></ul></li><li>指令在存储器内按顺序存放。</li><li>早期的冯诺伊曼以运算器为中心，输入/输出设备通过运算器与存储器传送数据。</li></ol><p>现代计算机的组织结构：以存储器为中心。</p><p>补充：</p><ul><li>冯诺依曼体系结构的基本工作方式是<strong>控制流驱动方式</strong>。</li><li>冯诺依曼体系结构中，CPU区分指令和数据的依据是<strong>指令周期的不同阶段</strong>。</li></ul><h1 id="存储程序原理"><a href="#存储程序原理" class="headerlink" title="存储程序原理"></a>存储程序原理</h1><p>存储程序原理是冯·诺依曼于1946年提出的将程序像数据一样存储到计算机内部存储器中的一种设计原理。</p><p>存储程序原理：将为解决特定问题而编写的程序存放在计算机存储器中，然后按存储器存储程序的首地址执行程序的第一条指令。以后就按照该程序的规定顺序执行其他指令，直至程序结束执行。</p><p>存储程序思想：多种类型的指令和数据均以数字形式存在于存储器中，存储器中既可以存放编辑器程序的源代码，也可以存放相应的编译后的机器码、编译后的程序需要使用的文本，甚至生成机器码的编译器。</p><p>只需将程序和数据加载到存储器中并告诉计算机从给定的存储器地址开始执行即可。将指令和数据以相同的方式处理，极大地简化了计算机系统的存储器硬件和软件。</p><p>该思想导致了存储程序型计算机的诞生。</p><p>计算机采取事先编制程序、存储程序、自动连续运行程序的工作方式，称为存储程序方式。</p><h1 id="突破VonNeumann体系结构"><a href="#突破VonNeumann体系结构" class="headerlink" title="突破VonNeumann体系结构"></a>突破VonNeumann体系结构</h1><p>毫无疑问，冯诺依曼体系结构的提出对计算机科学的发展是跨时代的。时至今日，几乎所有的通用计算机都遵循冯诺依曼体系结构，它们由CPU、存储器和I/O设备组成，它们具有用于指令和数据的单一存储，以及用于获取指令和传输数据的单一总线。遵循冯诺依曼体系结构的计算机顺序执行指令，因此非常适合顺序处理。</p><p>然而，冯诺依曼瓶颈继续困扰着工程师寻找方法来构建快速系统，这些系统既便宜又与大量商用软件兼容。当工程师不必须考虑兼容冯诺依曼体系结构时，他们可以自由使用许多不同的计算模型来完成预期目标。<strong>非冯诺依曼体系结构</strong>是指计算模型与冯诺依曼体系结构所列特征不同的架构。例如，不在内存中存储程序和数据，不按顺序处理程序，具有多条总线。</p><p><strong>哈佛体系结构</strong>是经典的非冯诺依曼体系结构。此类计算机有两条总线，一条用于数据，一条单独用于指令，因此允许数据和指令同时传输。此外，它们的数据和指令也单独存储。许多现代通用计算机使用哈佛体系结构的修改版本，它们具有单独的数据和指令路径但没有单独的存储。纯哈佛体系结构通常用于微控制器(芯片上的完整计算机系统)，例如嵌入式系统、电器、玩具和汽车中的微控制器。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VonNeumann%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%92%8C%E5%AD%98%E5%82%A8%E7%A8%8B%E5%BA%8F%E5%8E%9F%E7%90%86/5.png"></p><p>许多非冯诺依曼体系结构的计算机都是为特殊目的而设计的。第一个公认的非冯诺依曼体系结构处理芯片专为图像处理而设计。规约机也是不遵循冯诺依曼体系结构的代表，它是一种面向函数式语言的非冯诺依曼体系结构的计算机。数字信号处理器DSP和媒体处理器也不遵循冯诺依曼体系结构，它们可以对一组(多个)数据执行单个指令，而不是对单个数据执行单个指令。</p><p>许多不同的子领域属于非冯诺依曼类别，包括在硅中实现的神经网络、元胞自动机、认知计算机(通过经验而不是通过编程学习的机器、量子计算机、数据流计算机、并行计算机。它们的共同特点是：计算分布在并行运行的不同处理单元中。它们的不同之处在于：各个组件之间的连接强弱程度并不相同。其中，并行计算机目前最为流行。</p><h1 id="对VonNeumann体系结构的认识"><a href="#对VonNeumann体系结构的认识" class="headerlink" title="对VonNeumann体系结构的认识"></a>对VonNeumann体系结构的认识</h1><p>计算机出现早期，计算机只是辅助计算的机器。随着计算机变得越来越复杂，计算机变成了通用机器，这就需要将每个系统视为一个层次结构，而不是一个巨大的机器。这样层次结构中，每一层都有特定的用途，所有级别都有助于最大限度地减少高级编程语言或应用程序与构成物理硬件的门和线之间的语义差距。作为程序员，对我们影响最为深远的还是冯诺依曼体系结构下的存储程序原理。尽管还有许多其他的体系结构模型，但冯诺依曼体系结构在当今的通用计算机中仍然稳居主导地位。因此，理解冯诺依曼体系结构和冯诺依曼提出的存储程序原理，是入门计算机的必修课。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机组成原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算理论基础</title>
      <link href="/2021/03/21/ji-suan-ji-ke-xue-ji-chu/ji-suan-li-lun-ji-chu/"/>
      <url>/2021/03/21/ji-suan-ji-ke-xue-ji-chu/ji-suan-li-lun-ji-chu/</url>
      
        <content type="html"><![CDATA[<p>计算理论是研究计算模型的一门学科，是研究理论计算机的科学。</p><p>理论计算机是研究计算机的理论模型，研究计算机的本质，也就是把计算机看成一个数学系统。这是因为，计算机科学的基本思想和模型在本质上是数学(离散)的。</p><p>计算机的基本能力和限制是什么?</p><ul><li>究竟哪些问题, 可通过计算解决？ $→$ 可计算性理论</li><li>解决可计算的问题，究竟需要多少资源？ $→$ 计算复杂性理论</li><li>为了研究计算, 要使用哪些计算模型？ $→$ 形式语言与自动机理论</li></ul><p>计算理论是学习编译原理的基础。</p><p>核心内容：</p><ul><li>正则语言<ul><li>有穷自动机</li><li>正则表达式</li><li>正则语言的性质</li></ul></li><li>上下文无关语言<ul><li>上下文无关文法</li><li>下推自动机</li><li>上下文无关语言的性质</li></ul></li><li>计算导论<ul><li>图灵机及其扩展</li><li>不可判定性</li></ul></li></ul><p>自动机理论：研究抽象机器及其所能解决问题的理论。</p><p>形式语言：经数学定义的语言。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/1.png"></p><p>字母表：符号(字符)的非空有穷集。<br>$\Sigma_{1}={0,1}$<br>$\Sigma_{2}={a,b,c,d,…,z}$<br>$\Sigma_{3}={x|x是一个汉字}$</p><p>字符串：由某字母表中符号组成的有穷序列。<br>若$\Sigma_{1}={0,1}$，那么$0,1,00,111001$为$\Sigma_{1}$上的字符串。<br>若$\Sigma_{2}={a,b,c,d,…,z}$，那么$ab,cdef$为$\Sigma_{2}$上的字符串。</p><p>空串：记为$\varepsilon$，有$0$个字符的串。<br>字母表$\Sigma$可以是任意的，但都有$\varepsilon\notin\Sigma$。</p><p>符号使用的一般约定：</p><ul><li>字母表：$\Sigma,\Gamma,…$</li><li>字符：$a,b,c,…$</li><li>字符串：$…,w,x,y,z$</li><li>集合：$A,B,C,…$</li></ul><p>文法：一个文法$G$是个有序四元组，记作$G=(V_{N},V_{T},P,S)$。</p><ul><li>$V_{N}$：非终极符(变元)集合，用大写英文字母表示。</li><li>$V_{T}$：终极符集合，这里$V_{N}\cap{V_{T}}=\Phi$，有时记作$V_{N}\cup{V_{T}}=V$。</li><li>$P$：生成式(产生式)的集合。</li><li>$S$：开始变元，$S\in{V_{N}}$。</li></ul><p>文法中使用的符号通常作如下约定：</p><ul><li>用大写英文字母表示变元。S通常表示开始变元。</li><li>用小写的$a,b,c,…$表示终极符。</li><li>用$x,y,z,…$表示终极符串，即$x,y,z,…∈V_{T}^{*}$。</li><li>用$α,β,γ,…$希腊字母表示既含有终极符，也含有非终极符的符号串，即$α,β,γ,…\in(V_{N}\cup{V_{T}})^{*}$。</li></ul><p>设文法$G=(V_{N},V_{T},P,S)$，则：</p><ul><li>$S$是个句型。</li><li>若$αβγ$是个句型，且$β→δ$是$P$中的一个产生式，则$αδγ$也是一个句型。</li></ul><p>按此定义，对于文法$G_{2}$来说，$P={S→0S1|01}$。<br>$S$，$0S1$，$00S11$，$000111$都是句型。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/2.png"></p><table><thead><tr><th align="center">文法</th><th align="center">产生的语言</th><th align="center">自动机</th></tr></thead><tbody><tr><td align="center">0型语言</td><td align="center">递归可枚举集(r.e)<br>(recursively enumerable set)</td><td align="center">图灵机</td></tr><tr><td align="center">1型语言</td><td align="center">上下文有关语言(CSL)<br>(Context Sensitive Language)</td><td align="center">线性界限自动机</td></tr><tr><td align="center">2型语言</td><td align="center">上下文无关语言(CFL)<br>(Context Free Language)</td><td align="center">下推自动机</td></tr><tr><td align="center">3型语言</td><td align="center">正规集(regular set)</td><td align="center">有限自动机</td></tr></tbody></table><p>可以看出，各类文法之间有向上兼容性，即：3型语言 $\subseteq$ 2型语言 $\subseteq$ 1型语言 $\subseteq$ 0型语言</p><p>算术公理的相容性：</p><ul><li>完备性：所有能从该形式化系统推导出来的命题，都可以从这个形式化系统推导出来。</li><li>一致性：一个命题不可能同时为真或为假。</li><li>可判定性：算法可以在有限步内判定命题的真伪。</li></ul><p>哥德尔不完全性定理：任何表达力足够强（递归可枚举）的系统都不可能同时具有一致性和完备性。</p><p>判定性问题是无法解决的，即有些数学问题是不可求解的，也就是说<a href="https://blankspace.blog.csdn.net/article/details/113730669">图灵机</a>是不可停机的。</p><table><thead><tr><th>计算载体</th><th>提出学者</th><th>计算角度</th></tr></thead><tbody><tr><td>原始递归函数</td><td>Godel</td><td>数学的</td></tr><tr><td>$\lambda-$演算</td><td>Church</td><td>数理逻辑的</td></tr><tr><td>图灵机</td><td>Turing</td><td>机械的</td></tr></tbody></table><p>图灵论题：凡是可计算的函数都可以用图灵机。</p><p>丘奇论题：任何计算，如果存在一个有效的过程，它就能被图灵机实现。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算理论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图灵机</title>
      <link href="/2021/03/21/ji-suan-ji-ke-xue-ji-chu/tu-ling-ji/"/>
      <url>/2021/03/21/ji-suan-ji-ke-xue-ji-chu/tu-ling-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="图灵机的组成"><a href="#图灵机的组成" class="headerlink" title="图灵机的组成"></a>图灵机的组成</h1><ul><li>一条存储带<ul><li>双向无限延长上有一个个小方格</li><li>每个小方格可存储一个数字/字母</li></ul></li><li>一个控制器<ul><li>包含一个读写头，可以读、写、更改存储带上每一格的数字/字母</li><li>可以接受设定好的程序语句</li><li>可以存储当前自身的状态</li><li>可以根据读到的字母/数字变换自身的状态</li><li>可以沿着存储带一格一格地左移/右移</li></ul></li></ul><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%9B%BE%E7%81%B5%E6%9C%BA/1.png"></p><h1 id="图灵机的工作步骤"><a href="#图灵机的工作步骤" class="headerlink" title="图灵机的工作步骤"></a>图灵机的工作步骤</h1><ul><li>准备<ul><li>存储带上符号初始化</li><li>控制器设置好自身当前状态（初始化状态）</li><li>读写头置于起始位置</li><li>准备好工作程序;</li></ul></li><li>反复执行以下工作直到停机<ul><li>读写头读出存储带上当前方格中的字母/数字</li><li>根据自身当前状态和所读到的字符，找到相应的程序语句</li><li>根据相应程序语句，做三个动作<ul><li>在当前存储带方格上写入一个相应的字母/数字</li><li>变更自身状态至新状态</li><li>读写头向左或向右移一步</li></ul></li></ul></li></ul><h1 id="图灵机的运行机理示例"><a href="#图灵机的运行机理示例" class="headerlink" title="图灵机的运行机理示例"></a>图灵机的运行机理示例</h1><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%9B%BE%E7%81%B5%E6%9C%BA/2.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%9B%BE%E7%81%B5%E6%9C%BA/3.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%9B%BE%E7%81%B5%E6%9C%BA/4.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%9B%BE%E7%81%B5%E6%9C%BA/5.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%9B%BE%E7%81%B5%E6%9C%BA/6.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%9B%BE%E7%81%B5%E6%9C%BA/7.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%9B%BE%E7%81%B5%E6%9C%BA/8.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%9B%BE%E7%81%B5%E6%9C%BA/9.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%9B%BE%E7%81%B5%E6%9C%BA/10.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%9B%BE%E7%81%B5%E6%9C%BA/11.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%9B%BE%E7%81%B5%E6%9C%BA/12.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%9B%BE%E7%81%B5%E6%9C%BA/13.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%9B%BE%E7%81%B5%E6%9C%BA/14.png"></p><p>至此，成功停机。</p><p>整个过程，完成了一个4+3=7的过程。</p><h1 id="图灵机的停机"><a href="#图灵机的停机" class="headerlink" title="图灵机的停机"></a>图灵机的停机</h1><p>图灵机的停机问题：判断任意一个程序是否会在有限的步骤之内结束运行的程序是否存在?</p><p>图灵机的停机意味着：</p><ul><li>给定符号序列$A$，如果能找到一个图灵机，得出对应的符号序列$B$，那么从$A$到$B$就是可计算的。</li><li>也就是说：<ul><li>对于一个问题的输入$A$，问：$A$能否推证出$B$？</li><li>如果能找到一个图灵机，得出对应的符号序列$B$，那么从$A$到$B$就是可计算的。</li><li>否则，该问题不可计算。</li></ul></li></ul><p>图灵认为：不存在这样的程序。</p><p>证明：采用<strong>反证法</strong><br>假设存在这样的程序，即，存在程序$H(P,I)$可以给出程序$P$在输入$I$时是否停机的判断：若$P$在输入$I$时可停机，$H$输出“停机”，反之输出“不停机（死循环）”（注：停机与死循环是对立的），即可导出下面的矛盾：<br>根据假设，可以设计一个调用程序$H$的主程序$K$如下：<br>首先，它调用$H(P,P)$，如果$H(P,P)$，输出“死循环”，则$K(P)$停机，反之$K(P)$死循环。即$K(P)$做与$H(P,P)$的输出相反的动作。<br>$K(P)$的程序如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">H</span><span class="token punctuation">(</span>P<span class="token punctuation">,</span>I<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 这里的H函数有两种返回值：死循环或停机</span><span class="token keyword">int</span> <span class="token function">K</span><span class="token punctuation">(</span>P<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">H</span><span class="token punctuation">(</span>P<span class="token punctuation">,</span>P<span class="token punctuation">)</span> <span class="token operator">==</span> 死循环<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 程序本身可以被视作数据</span>        <span class="token keyword">return</span> 停机<span class="token punctuation">;</span>  <span class="token comment">// 主程序K停机</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// H(P,P) == 停机</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// 这里K会死循环</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>视$K$程序为参数$P$，观察$K(K)$的运行：若$H(K , K)$输出死循环，实际观察到$K(K)$停机，但由$H$的定义知二者矛盾。反之，$H(K, K)$输出停机，$K(K)$实际死循环，两者仍然矛盾。<br>因此，假设程序$H$存在引发不可避免的矛盾，表明开始的假设不成立。<br>结论是：不存在这样的程序。<br>证明结束。<br>又称：“$H$是不可计算函数”、“停机问题不可解”。</p><p>以停机问题为基础，发现了大量不可计算问题，如“铺砖问题”等。</p><h1 id="图灵机的优势"><a href="#图灵机的优势" class="headerlink" title="图灵机的优势"></a>图灵机的优势</h1><ul><li>强大</li><li>简单</li><li>可实现</li></ul><h1 id="图灵机的理论意义"><a href="#图灵机的理论意义" class="headerlink" title="图灵机的理论意义"></a>图灵机的理论意义</h1><ul><li>给出了一个可实现的通用计算模型</li><li>引入了通过“读写符号”和“状态改变”进行运算的思想</li><li>证实了基于简单字母表完成复杂运算的能力</li><li>引入了存储区、程序、控制器等概念的原型</li></ul><h1 id="图灵机模拟器"><a href="#图灵机模拟器" class="headerlink" title="图灵机模拟器"></a>图灵机模拟器</h1><p><a href="http://morphett.info/turing/turing.html">图灵机模拟器网址</a></p>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图灵机 </tag>
            
            <tag> 计算理论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云服务案例分析Quiz</title>
      <link href="/2021/03/19/ji-suan-ji-ke-xue-ji-chu/yun-fu-wu-an-li-fen-xi-quiz/"/>
      <url>/2021/03/19/ji-suan-ji-ke-xue-ji-chu/yun-fu-wu-an-li-fen-xi-quiz/</url>
      
        <content type="html"><![CDATA[<h1 id="Quiz1"><a href="#Quiz1" class="headerlink" title="Quiz1"></a>Quiz1</h1><p>1.In IT service management, what is NOT the benefit in use of processes?<br>a. measurable<br>b. simplifiable<br>c. auditable<br>d. contract compliant</p><p>2.Why we have to study services?<br>a. Service regulates professional activities<br>b. Service is simple<br>c. Service resolves technical problems<br>d. Service equals profits</p><p>3.In comparing with Computer Science, Software Engineering is concerning with _<br>a. building data structures<br>b. establishing computing theory<br>c. delivering useful software<br>d. applying efficient algorithms</p><p>4.In comparing with IT Management, IT SERVICE management is focusing on _.<br>a. Centralized behaviors<br>b. Process orientation<br>c. Once a time missions<br>d. Isolated procedures</p><p>5.In Service Sciences, Management, and Engineering (SSME), service innovation does NOT include:<br>a. Technology Innovation<br>b. Business Innovation<br>c. Manufacture Innovation<br>d. Demand Innovation</p><p>6.What is NOT the criterion for effective Services Management?<br>a. Scalability requirements of the world’s most demanding service infrastructures<br>b. Flexibility and modularity to adapt for business, organizational and technology convergence<br>c. Security to ensure information transformation correctly<br>d. Automation of processes and workflows fundamental to service delivery</p><p>7.From the customer perspective, Software as a Service means _.<br>a. Software is commercially available with minor configuration options<br>b. Internet accessed services available (near) real-time access of resources after purchase<br>c. The centralized hosting obviates the need for downloadable patches and upgrades and enables continuous improvements<br>d. The hosting provider assumes responsibility for the solution</p><p>8.To increase corporate profits，the service path is _.<br>a. Focusing on team building<br>b. Extending worker’s working hours<br>c. Meeting customer requirement<br>d. Doubling worker’s salary</p><p>9.Which one of the following statements may NOT be true?<br>a. Service Engineering is a multi-disciplinary field<br>b. In manufactures model the product design comes after process design<br>c. IT Service Architecture can be viewed from various perspectives.<br>d. Sometimes the services engineering model works but has limitations due to human judgment is required</p><p>10.Which one of the following statements may NOT be true?<br>a. Science is a way to create knowledge.<br>b. In interpretive model the improvements come from changes to design or process.<br>c. Engineering is a way to apply knowledge and create new value.<br>d. Management improves the process of creating and capturing value.</p><p>答案：</p><table><thead><tr><th align="center">1</th><th align="center">2</th><th align="center">3</th><th align="center">4</th><th align="center">5</th><th align="center">6</th><th align="center">7</th><th align="center">8</th><th align="center">9</th><th align="center">10</th></tr></thead><tbody><tr><td align="center">B</td><td align="center">B</td><td align="center">C</td><td align="center">B</td><td align="center">A</td><td align="center">C</td><td align="center">B</td><td align="center">C</td><td align="center">B</td><td align="center">B</td></tr></tbody></table><h1 id="Quiz2"><a href="#Quiz2" class="headerlink" title="Quiz2"></a>Quiz2</h1><p>1.The graphical user interface (GUI) is managed by ( )<br>a. computer hardware<br>b. computer operating systems<br>c. computer application software<br>d. computer input/output devices</p><p>2.The computer application software ( ).<br>a. provides tools for writing computer programs using different programming languages<br>b. provides tools for writing computer programs using different programming languages<br>c. manages the computer hardware and the computer system<br>d. facilitates the input and output devices in a computer system</p><p>3.The main functions of Internet may NOT include__.<br>a. Announcement<br>b. Encryption<br>c. News<br>d. Emails</p><p>4.In comparing with Hard Disks, the Solid State Disks (SSD) can ( ).<br>a. Offer lower cost per megabyte of storage<br>b. Provide faster access time<br>c. Depend on a read/write interface synchronizing with a data sector<br>d. Increase the number of servers needed</p><p>5.Which one is NOT characterized as the type of data storage?<br>a. Volatility of Information<br>b. Stability of media over time<br>c. Security of information<br>d. Ability to change information</p><p>6.Data deduplication is an important new technology to control data ( ). The average disk volume contains thousands or even millions of duplicate data objects. As data is created, distributed, backed up, and archived, duplicate data objects are stored unabated across all storage tiers. The end result is inefficient utilization of data storage resources. By eliminating ( ) data objects and referencing just the original object, an immediate benefit is obtained through storage space ( ).<br>a. storage/useless/reduction<br>b. proliferation/redundant/efficiencies<br>c. space/extra/optimization<br>d. flow/more/saving</p><p>7.The common computer platforms do NOT include ( )<br>a. computer’s architecture<br>b. operating system<br>c. programming languages<br>d. relational database</p><p>8.What is the Data Storage Virtualization?<br>a. A method of combining the available storage resources in a network by splitting up the available bandwidth into channels, each of which can be assigned (or reassigned) to a particular server or device in real time.<br>b. The masking of server resources (including the number and identity of individual physical servers, processors, and operating systems) from server and storage users.<br>c. A technique for hiding the physical characteristics of computing resources from the way in which other storage systems, applications, or end users interact with those resources.<br>d. The pooling of physical storage from multiple network storage devices into what appears to be a single storage device that is managed from a central console.</p><p>9.Which one of the following statements is NOT correct?<br>a. A local area network (L AN) is a network of computers close together.<br>b. Router computers act as receive-and -forward devices; they do not retain information about the packets that they handle.<br>c. Independent networks should require internal changes to be connected to the network.<br>d. The Web is more a way of thinking about and organizing information storage and retrieval than it is a specific technology.</p><p>10.Microservices may NOT have some characteristics，such as<br>a. Services in a microservice architecture (MSA) are often processes that communicate over a network to fulfil a goal using technology-agnostic protocols such as HTTP.<br>b. Services are organized around business capabilities.<br>c. Services cannot be implemented using different programming languages, databases, hardware and software environment, depending on what fits best.<br>d. Services are small in size, messaging-enabled, bounded by contexts, autonomously developed, independently deployable, decentralized and built and released with automated processes.</p><p>答案：</p><table><thead><tr><th align="center">1</th><th align="center">2</th><th align="center">3</th><th align="center">4</th><th align="center">5</th><th align="center">6</th><th align="center">7</th><th align="center">8</th><th align="center">9</th><th align="center">10</th></tr></thead><tbody><tr><td align="center">B</td><td align="center">B</td><td align="center">B</td><td align="center">B</td><td align="center">C</td><td align="center">B</td><td align="center">D</td><td align="center">D</td><td align="center">C</td><td align="center">C</td></tr></tbody></table><h1 id="Quiz3"><a href="#Quiz3" class="headerlink" title="Quiz3"></a>Quiz3</h1><p>1.An IT Architect is ( ).<br>a. a result seeker<br>b. a project manager<br>c. a product expert<br>d. a lone scientist</p><p>2.Which of the followings may NOT be correct?<br>a. Regulations and governance are means to assuring some acceptable level of quality-of-service<br>b. Information systems allow separation of production and consumption of services<br>c. The world is becoming networked, dependent on information and information technology<br>d. Non Function Requirement is less useful to cloud system design</p><p>3.Which one of the following activities is in the lower end of profit chain for IT industry?<br>a. manufacture a complicate device<br>b. build up a team to implement a technical consultation assignment<br>c. broadcast a product news to media<br>d. send emails to customers for an important product announcement</p><p>4.To create a component model by applying patterns for e-Business, which one of the following statements could be incorrect ?<br>a. Model represents the application object that implements the application data and business logic. b. Back-end system is responsible for the business processes beyond the commerce processes<br>c. Controller is responsible for formatting the application results and dynamic page construction<br>d. Database stores information about the commerce application</p><p>5.Which one of the following statements may NOT be true?<br>a. e-Business Solutions present unique challenges such as adapt to rapidly changing technologies and dramatically smaller product cycles.<br>b. Patterns for e-Business are proven and repeatable architectural constructs that occur across many engagements.<br>c. Patterns for e-business apply in the later stages of the lifecycle, when business processes are being analyzed and architectural level decisions are being made.<br>d. Fitting a pre-cut suit is much cheaper than creating one from scratch.</p><p>6.Which one of the following statements may NOT be true?<br>a. Architecting deals almost entirely with measurables using analytic tools derived from mathematics and the hard sciences.<br>b. The IT Architect may be involved during the construction of a solution as an advocate for the client.<br>c. A Pattern is a prescriptive technology specification that describes the development, deployment, and operations environment of a class of computer applications.<br>d. The Operational Model is a representation of a network of computer systems.</p><p>7.What may not be the objects of Business Pattern in Patterns for e-business?<br>a. Identify generalized aspects of business process interactions<br>b. Provide a non-technical view for not just the IT organization<br>c. Describe Interactions between the primary Business Actors<br>d. Describe a specific business process</p><p>8.In Patterns for e-business, the Composite pattern means ( ).<br>a. When a group of Business and Integration patterns have been combined to address a specific set of business process requirements.<br>b. When the applications need to be accessible via multiple device types, including rich clients, browsers, voice response units, mobile devices, and PDAs.<br>c. When there is a need to describe the consideration on Performance, Capacity, Scalability, and Availability.<br>d. When a particular group of Business and Integration patterns become a frequent occurrence.</p><p>9.Which one of the following statements may NOT be true?<br>a. Reuse of architectural knowledge and work products is not an important aspect of design approach.<br>b. This Systems Management discipline is particularly important in the Web environment as the potential impact of poor performance is that much greater.<br>c. Architectural Decisions depend on what is being architected, and in what context.<br>d. Great architects go beyond the role of intermediary to make a visionary combination of technology and purpose that exceeds the expectation of the builder or client.</p><p>10.What is not the benefit for Ford to use e-Business Patterns?<br>a. Save money as multiple development environments cost more money<br>b. Rapid mapping from business requirements to application and infrastructure designs<br>c. Standard reusable building blocks selected and aggregated in Patterns grouped by layers<br>d. IBM won hardware standard for all platforms</p><p>答案：</p><table><thead><tr><th align="center">1</th><th align="center">2</th><th align="center">3</th><th align="center">4</th><th align="center">5</th><th align="center">6</th><th align="center">7</th><th align="center">8</th><th align="center">9</th><th align="center">10</th></tr></thead><tbody><tr><td align="center">A</td><td align="center">D</td><td align="center">A</td><td align="center">C</td><td align="center">C</td><td align="center">A</td><td align="center">D</td><td align="center">D</td><td align="center">A</td><td align="center">D</td></tr></tbody></table><h1 id="Quiz4"><a href="#Quiz4" class="headerlink" title="Quiz4"></a>Quiz4</h1><p>1.For the dimensions of big data growth, Veracity means ( ).<br>a. Streaming data, milliseconds to seconds to respond<br>b. Uncertainty from inconsistency ambiguities<br>c. Terabytes to exabytes of existing data to process<br>d. Structured, unstructured, text, multimedia</p><p>2.The common types of RFID working model do NOT include ( ).<br>a. idle<br>b. active<br>c. semipassive<br>d. passive</p><p>3.Which one of the following statements is NOT correct?<br>a. Big Data means unstructured Data.<br>b. Big Data is a new basis of competitive advantage for enterprises.<br>c. Data generated from IoT will grow exponentially as the number of connected nodes increases.<br>d. Big Data is similar to small data, but bigger in size.</p><p>4.What may NOT be the Big Data growth drivers?<br>a. Both mega-IT-vendors and pure-play Big Data vendors took steps to better articulate their product &amp; services roadmaps and larger visions for Big Data in the enterprise, creating greater confidence from enterprise buyers.<br>b. Continued “Big Data Washing” by legacy IT vendors leading to confusion among enterprise buyers and practitioners, as well as “political” factors that make it difficult for enterprise buyers to engage new vendors.<br>c. Big Data technologies took important steps towards greater enterprise-grade capabilities, critical for mass enterprise adoption. These steps included better privacy, security and governance capabilities, as well as improved backup &amp; recovery and high-availability for Hadoop specifically.<br>d. Partnerships played an important role in maturing the Big Data landscape. Of particular importance are a number of reseller agreements and technical partnerships between Big Data vendors and non-Big Data vendors, the results of which that make it easier for practitioners to adopt and integrate Big Data technologies.</p><p>5.Which one of the following statements may NOT be correct?<br>a. Big data is just a technology—it is not a business strategy for capitalizing on information resources<br>b. Organizations are using big data to target customer-centric outcomes, tap into internal data and build a better information ecosystem<br>c. Fast forward to the present and technologies like Hadoop give you the scale and flexibility to store data before you know how you are going to process it<br>d. Technologies such as MapReduce, Hive and Impala enable you to run queries without changing the data structures underneath</p><p>6.Which may NOT be the direct impact on IT industry by Big Data?<br>a. Data storage has grown significantly, shifting market from analog to digital<br>b. Computation Capability is demanding to process huge amount of data with various formats<br>c. New business insights are generated from combining and analyzing data types in new ways<br>d. The foundation is built for future requirements by expanding into big data platform</p><p>7.What could be the main benefit of using Big Data on Security/Intelligence Extension?<br>a. Increase customer loyalty and satisfaction by understanding what meaningful actions are needed<br>a. Increase customer loyalty and satisfaction by understanding what meaningful actions are needed<br>b. Track persons of interest (drug/sex traffickers, terrorists, illegal refugees/immigrants) and civil/border activity<br>c. Find, Visualize &amp; Understand all big data to improve business knowledge<br>d. Log analytics, energy bill forecasting, energy consumption optimization, anomalous energy usage detection, presence-aware energy management</p><p>8.What is NOT the feature of Hadoop?<br>a. Hadoop is an open source software project.<br>b. Hadoop is relying on high-end hardware.<br>c. Hadoop is designed to scale up from a single server to thousands of machines, with very high degree of fault tolerance.<br>d. Hadoop enables distributed processing of large data sets across clusters.</p><p>9.Which one of the following statements may NOT be corret?<br>a. Hadoop is designed to work best with a modest number of extremely large files.<br>b. Every data block stored in HDFS has its own metadata and needs to be tracked by a central server.<br>c. Because of data locality principle, using a storage area network in a Hadoop environment is recommended.<br>d. All hadoop commands are invoked by the bin/hadoop script.</p><p>10.Which one of the following statements may NOT be correct?<br>a. Spark is an implementation of Resilient Distributed Dataset (RDD) in Scala<br>b. In spark, MapReduce data flow can be expressed using RDD transformations<br>c. Spark Streaming extends the core API to allow high-throughput, fault-tolerant stream processing of live data streams<br>d. Spark cannot persist or cache a dataset in memory across operations</p><p>答案：</p><table><thead><tr><th align="center">1</th><th align="center">2</th><th align="center">3</th><th align="center">4</th><th align="center">5</th><th align="center">6</th><th align="center">7</th><th align="center">8</th><th align="center">9</th><th align="center">10</th></tr></thead><tbody><tr><td align="center">B</td><td align="center">A</td><td align="center">A</td><td align="center">B</td><td align="center">A</td><td align="center">C</td><td align="center">B</td><td align="center">B</td><td align="center">C</td><td align="center">D</td></tr></tbody></table><h1 id="Quiz5"><a href="#Quiz5" class="headerlink" title="Quiz5"></a>Quiz5</h1><p>1.What’s the significant problem with traditional business networks?<br>a. Every participant has a separate copy of the ledger and updates it for their transactions<br>b. There are several contracts involved<br>c. The participants in a network can never be known<br>d. No one person can oversee the entire network</p><p>2.In the Bitcoin network, everyone knows who is participating.<br>a. Possible<br>b. True<br>c. False<br>d. Nonsense</p><p>3.What is the core requirement for a business blockchain?<br>a. Technical services, business services and solution<br>b. Shared ledger, smart contract, privacy and trust<br>c. A new cryptocurrency<br>d. Optimized cryptographic mining</p><p>4.How can a blockchain business network help the diamond wholesale and retail industry?<br>a. Can use cognitive tools to analyze customer preferences<br>b. Can prevent the injection of illicit diamonds in the supply chain<br>c. Can cut diamonds for studying more thoroughly<br>d. Can trace diamond history</p><p>5.Which of the following statements is false?<br>a. Blockchain provides a smart contract feature that can be used to model assets of any description<br>b. Blockchain adds a cognitive analytics capability to the asset supply chain<br>c. Blockchain captures a record of every committed transaction in chronological order<br>d. Blockchain can help provide provenance for an asset</p><p>6.What is the appropriate use of business blockchain?<br>a. A more efficient transaction processing system across a business network<br>b. To make low value, high volume micro payment systems more efficient<br>c. Modern, cognitive and transformational fabric for the 21st century and beyond<br>d. None of these</p><p>7.Which one is NOT a key concept of Blockchain?<br>a. Distributed shared ledger<br>b. Smart contracts<br>c. Error sensitiveness<br>d. Cryptography</p><p>8.The components of a VR (Virtual Reality) System do not include ( ).<br>a. Simulation Processor<br>b. Accelerating Processor<br>c. Rendering Processor<br>d. World Database</p><p>9.Augmented reality (AR) is a technology that layers computer-generated enhancements atop an existing reality in order to make it more meaningful through the ability to interact with it.<br>a. True<br>b. Possible<br>c. False<br>d. Nonsense</p><p>10.Comparing real and virtual world, light entering the eyes is the result of natural reflection from all angles.<br>a. True<br>b. Possible<br>c. False<br>d. Nonsense</p><p>答案：</p><table><thead><tr><th align="center">1</th><th align="center">2</th><th align="center">3</th><th align="center">4</th><th align="center">5</th><th align="center">6</th><th align="center">7</th><th align="center">8</th><th align="center">9</th><th align="center">10</th></tr></thead><tbody><tr><td align="center">A</td><td align="center">C</td><td align="center">B</td><td align="center">D</td><td align="center">B</td><td align="center">A</td><td align="center">C</td><td align="center">B</td><td align="center">A</td><td align="center">C</td></tr></tbody></table><h1 id="Quiz6"><a href="#Quiz6" class="headerlink" title="Quiz6"></a>Quiz6</h1><p>1.Which of the following statements may NOT be right?<br>a. Machine learning refers to a system capable of the autonomous acquisition and integration of knowledge<br>b. Learning is constructing or modifying representations of what is being experienced<br>c. Machine learning is primarily concerned with the accuracy and effectiveness of the computer system.<br>d. In Deep Learning approach, each neuron implements a relatively complicated mathematical function.</p><p>2.Which one of the following statements is NOT correct?<br>a. Neural Network needs long time for training.<br>b. Neural Network has a high tolerance to noisy and incomplete data<br>c. Neural Network cannot work with data in the range of (0,1) or (-1,1)<br>d. Neural Network is biologically motivated approach to machine learning</p><p>3.Which one of the following statements is NOT correct?<br>a. In Neural Network Learning, the algorithms iteratively adjust weights to reduce error (difference between network output and target output)<br>b. In Neural Networks, the destructive algorithms take a maximal network and prunes unnecessary layers nodes and connections during training.<br>c. In Neural Networks, the results get better with more data + bigger models + more computation<br>d. In Neural Networks, a neuron performs a generally linear operation on the result</p><p>4.IBM Watson is a massively parallel probabilistic evidence-based architecture, using a high-end system of ( ).<br>a. Intel x86 platform<br>b. IBM Power7 platform<br>c. DEC Alpha cluster running under OpenVMS<br>d. IBM Mainframe platform</p><p>5.In cognitive system, the decision making as learning from an expert, excludes<br>a. Asks natural language question, understands the question<br>b. Finds documents containing keywords, delivers the documents based on popularity<br>c. Produces possible answers based on evidence<br>d. Analyzes evidence, computes confidence, delivers response, evidence and confidence</p><p>6.Which one of the following statements is NOT correct?<br>a. Cognitive computing involves self-learning systems that use data mining, pattern recognition and natural language processing to mimic the way the human brain works<br>b. A confidence score is the quantitative value produced by a cognitive system representing the merit of a decision after evaluating multiple options<br>c. Predictive analytics is a business process and a set of related technologies that are not concerned with the prediction of future possibilities and trends<br>d. Cognitive systems play the role of an assistant – albeit one who is tireless, can consume vast amounts of structured and unstructured information, can reconcile ambiguous and even self-contradictory data, and can learn</p><p>7.Which one of the following statements is NOT correct?<br>a. Watson can consume insights from Big Data for advanced analysis<br>b. Natural Language is explicit, little contextual, and often precise<br>c. Watson uses the Apache Hadoop open framework to distribute the workload for loading information into memory<br>d. Watson’s APIs are the cognitive building blocks that harness data</p><p>8.What may NOT be the capability of cognitive computing systems?<br>a. Provide expert assistance by developing deep domain insights and bringing this information to people in a timely, natural and usable way<br>b. Provide decision-making functionality that is evidence-based and continually evolve based on new information, outcomes and actions<br>c. Provide professional judgement and services as the replacement of human experts such as medical doctors in hospitals<br>d. Provide insights that perhaps could not be discovered by even the most brilliant human beings, through vast amounts of information available around the world</p><p>9.In comparing with programmable systems, the cognitive system is NOT ( ).<br>a. Data-Centric<br>b. Statistical Analysis<br>c. Scale up / out<br>d. Automated Systems / workload management</p><p>10.What is the third era of computing in IBM’s vision?<br>a. single-purpose calculation<br>b. cloud computing<br>c. cognitive computing<br>d. programmable systems</p><p>答案：</p><table><thead><tr><th align="center">1</th><th align="center">2</th><th align="center">3</th><th align="center">4</th><th align="center">5</th><th align="center">6</th><th align="center">7</th><th align="center">8</th><th align="center">9</th><th align="center">10</th></tr></thead><tbody><tr><td align="center">D</td><td align="center">C</td><td align="center">D</td><td align="center">B</td><td align="center">B</td><td align="center">C</td><td align="center">B</td><td align="center">C</td><td align="center">C</td><td align="center">C</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云计算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>迭代和增量的开发周期</title>
      <link href="/2021/03/11/ruan-jian-gong-cheng/die-dai-he-zeng-liang-de-kai-fa-zhou-qi/"/>
      <url>/2021/03/11/ruan-jian-gong-cheng/die-dai-he-zeng-liang-de-kai-fa-zhou-qi/</url>
      
        <content type="html"><![CDATA[<h1 id="迭代增量"><a href="#迭代增量" class="headerlink" title="迭代增量"></a>迭代增量</h1><p><strong>迭代</strong>和<strong>增量</strong>都是软件工程的<strong>固有特性</strong>。</p><p>迭代和增量式的开发会以连续系列的发布版本来开发系统的功能，完成度不断增加。</p><p>发布版本可以是外部的（提供给客户），也可以是内部的（不提供给客户）。<br>最后的发布版本是一个外部发布版本，代表了最终产品系统。<br>要确定一个发布版本是内部的还是外部的，取决于整体生命周期的阶段。<br>在开发过程的早期，发布版本一般是内部的，主要的、可执行的发布版本由开发团队提供给质量保证团队进行测试，然后收集此版本的完整性、正确性、健壮性等信息。这种早期的信息收集有助于确定一些质量问题，这些质量问题将在后续的发布版本的开发中较早地得到解决。<br>在开发过程的后期，外部的发布版本可能更多一些，可执行的发布版将以受控的方式提供给特定的最终用户，进行$\alpha$测试、$\beta$测试等。所谓“受控”，指的是开发团队将小心地为每个发布版本设定期望值，并确定希望评估哪些方面。<br>一般来说，开发过程中，开发团队将有更多的内部发布版本，只有少数可执行的发布版本会被提交给外部人员。内部发布版本代表了系统的一种持续集成，并且在某些关键系统部分存在强制的约束。<br>值得注意的是，每次创建一个发布版本的动作，其实其成本是较高的。</p><p>在<strong>迭代增量</strong>的宏观过程中，一些科目是重复执行的。但是，迭代增量式开发不仅仅是一些列的迭代，它必须有一个整体的框架，此框架下，迭代的执行反映了项目的战略计划，驱动着每次迭代的目标。这样的框架可以由一系列定义良好的<strong>里程碑</strong>来提供，通过执行一次或多次迭代来实现每个里程碑的目标。每个里程碑处进行一次评估，以确定目标是否实现，如果评估满意，即可进入下一个阶段，去实现下一个里程碑。<br>里程碑确保了迭代取得进展，最终会收敛成一个<strong>解决方案</strong>，而不仅仅是不确定的迭代。它们不应该仅仅被看作是项目进度表上的一个日期，而应该被看成是质量或成熟度的关口，实现了这些里程碑就意味着项目已经达到了某个成熟度，对演进的计划、规格说明和完成的解决方案有了进一步的理解。<br>如果最初为某个里程碑设置的日期到了，但项目没有达到<strong>预期的成熟度或者理解程度</strong>，那么这个里程碑日期就延迟了。日期可以延迟，而里程碑实现与否不能以日期截止为判据。</p><p>在一次迭代过程中选择实现哪些功能，取决于对项目<strong>风险</strong>的缓解，最重要的风险优先处理。<br>作为一次迭代的结果，得到的<strong>经验和产物</strong>将应用于下一次迭代。<br>通过每次迭代，可以逐渐优化<strong>战略和战术决策</strong>，最后得到一个满足用户真实需求的解决方案，这个解决方案是简单、可靠、能适应变化的。<br>每次迭代都可以看作是一个较小但完整的瀑布模型。</p><p>迭代和增量的方式是大多数现代软件开发方法的核心，如<a href="https://blankspace.blog.csdn.net/article/details/123452979">极限编程XP</a>、<a href="https://blankspace.blog.csdn.net/article/details/123287693">Scrum</a>。<br>迭代和增量的方法非常适合面向对象的软件工程方法，在风险管理方面提供了一些优点。</p><h1 id="迭代增量开发的好处"><a href="#迭代增量开发的好处" class="headerlink" title="迭代增量开发的好处"></a>迭代增量开发的好处</h1><p>迭代增量开发的好处：</p><ul><li>迭代增量开发允许需求变更，每次迭代一组具体的需求。</li><li>迭代增量开发没有在项目结束时的“大爆炸式”集成工作，每次迭代都包含了这个版本中元素的集成，集成是渐进的、持续的。</li><li>风险会被尽早地关注到。</li><li>可以在早期针对竞争对手的动作实现对产品的战术改变。</li><li>架构的关键组件及早被建立起来，更容易确定可复用的组件和利用已有组件。</li><li>可以更早地发现缺陷并纠正。每次迭代都执行充分的测试，这样缺陷就可以及早被发现，并在下一次迭代过程中得到修正，而不是等到后期才发现。</li><li>鼓励团队成员在迭代中承担不同的角色，可以让项目人员的工作更有效。</li><li>每次迭代都让团队成员有机会从过去的经验中学习，一次迭代中的问题可以在后面的迭代中解决。</li><li>每次迭代都会对软件过程和组织方式等里面有效和无效的部分进行评估和反思，开发过程可以得到优化和改进。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息系统</title>
      <link href="/2021/03/09/ruan-jian-gong-cheng/xin-xi-xi-tong/"/>
      <url>/2021/03/09/ruan-jian-gong-cheng/xin-xi-xi-tong/</url>
      
        <content type="html"><![CDATA[<h1 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h1><p>与系统规划有关的是，要认识到一个组织具有三级管理：</p><ul><li>策略级</li><li>战术级</li><li>操作级</li></ul><h2 id="策略级"><a href="#策略级" class="headerlink" title="策略级"></a>策略级</h2><ul><li>行政和高层管理级，制定系统产品长期计划，更强调预测性，从已知得到未知，如市场预测。</li><li>关键概念：知识（对信息的理解和有效使用）。</li><li>运用工具：知识处理系统。</li><li>关联技术：数据挖掘。<ul><li>关联（路径分析）：在数据中发现一个事件导致另一个相关事件发生的模式。</li><li>分类：发现某事实是否落入预定、感兴趣的类别中。</li><li>聚类：与分类相似，但种类未知，它们由聚类方法发现。</li></ul></li><li>用于数据挖掘的数据主要来源于数据仓库，而不是操作型数据库。</li></ul><h2 id="战术级"><a href="#战术级" class="headerlink" title="战术级"></a>战术级</h2><ul><li>做短期目标，进行信息资源分配，对已处理数据分析归纳，如预算分析、工资预测、调度、客服。</li><li>关键概念：信息（有用的数据，增值的事实）。</li><li>运用工具：分析处理系统，联机分析处理，OLAP 系统。<ul><li>关联技术：数据仓库技术。<ul><li>创建方式通常是在一个或多个事务数据库中提取的数据增量拷贝。</li><li>总是增加新数据，不移除历史数据。</li><li>独特特征：对数据的汇总和封装，目的是给源系统提供的数据增加价值。</li></ul></li><li>数据集市：主要保存被汇总的历史数据。</li></ul></li></ul><h2 id="操作级"><a href="#操作级" class="headerlink" title="操作级"></a>操作级</h2><ul><li>由底层操作员，做一些日常工作，如发工资、收银。</li><li>关键概念：数据（原始事实）。</li><li>运用工具：事务处理系统，联机事务处理，OLTP 系统。<ul><li>事务：工作的一个逻辑单元，完成某一特定的业务任务，并在任务完成后保证数据库的完整性。</li><li>关联技术：数据库技术。</li><li>OLTP中事务管理的两大主要功能：<ul><li>并发控制。</li><li>从软硬件故障中恢复。</li></ul></li></ul></li></ul><h1 id="系统约束"><a href="#系统约束" class="headerlink" title="系统约束"></a>系统约束</h1><p>系统服务定义了系统必须完成什么，而<strong>系统约束描述了系统在完成服务时怎样被约束</strong>。</p><p>设置系统约束是由于：</p><ul><li>界面需求</li><li>性能需求</li><li>安全性需求</li><li>操作性需求</li><li>政策和法律需求</li><li>……</li></ul><p>界面需求定义产品如何与用户进行交互。在需求文档中，定义GUI的外观和感觉即可，GUI的初步设计将在需求规格说明书以及后面的系统设计期间进行。</p><p>性能需求指定了完成各种任务的速度，即系统响应时间。广义上，性能需求包含与系统的可靠性、有效性、吞吐量相关的其他约束。</p><p>安全型需求描述了用户在系统控制下对信息的存取权限，可以赋予用户对数据的受限访问和/或对数据执行确定操作的受限权利。</p><p>操作性需求决定系统运行的软硬件环境，对用户培训和系统维护等方面有影响。</p><p>政策和法律需求常常是假定的，而不是在需求文档中明确表述的。这可能是代价非常高的错误，因为产品可能会由于政治或法律的原因很难或不可能部署。</p><p>可能还会有其他约束，比如可用性、可维护性等。</p><p>需要说明的是，<strong>不要夸大严格定义系统约束的重要性</strong>，由于忽略或错误解释系统约束而导致项目失败的例子并不少见。</p><h1 id="系统规划"><a href="#系统规划" class="headerlink" title="系统规划"></a>系统规划</h1><h2 id="SWOT"><a href="#SWOT" class="headerlink" title="SWOT"></a>SWOT</h2><p>推荐阅读：<a href="https://blankspace.blog.csdn.net/article/details/105108011">用于信息规划的SWOT方法</a></p><ul><li>内涵：通过调整组织优势、劣势、机会和威胁的方式来进行IS开发项目的识别、分类、排序和选择。这是一个从确定组织使命开始的、自顶向下的方法。</li><li>使命陈述捕获一个组织的独特性质，并详细说明它未来的愿景，良好的使命陈述重点在于客户的需要。</li><li>对内部的企业优势和劣势的识别是成功业务规划的必要非充分条件。</li><li>对可利用的外部机会和可避免的外部威胁的认识是决定组织目的和目标的基础。</li><li>实质是看清自己，内因：优势劣势， 外因：机遇挑战。</li><li>得到SWOT矩阵，基于每一个问题细化目标，得到策略。</li></ul><h2 id="VCM"><a href="#VCM" class="headerlink" title="VCM"></a>VCM</h2><ul><li>内涵：分析组织中完整的活动链来评估竞争优势。</li><li>目的：理解哪种价值链配置将产生最大竞争优势。</li><li>组织的职能：<ul><li>基本活动，对最终产品追加价值。</li><li>支持活动，不对最终产品直接产生价值，至少不直接增加价值，它们仍然基础却不丰富产品。</li><li>基于不同业务场景来区分主要次要活动。</li></ul></li></ul><h2 id="BPR"><a href="#BPR" class="headerlink" title="BPR"></a>BPR</h2><ul><li>前提：当今组织必须彻底改造自己，并丢弃现在使用的功能分解、分层结构和操作原则。</li><li>主要目的：在组织中从根本上重新设计业务过程。必须对业务过程进行识别、流程化和改进。在工作流图中对过程文档化，并经历工作流分析。</li><li>主要障碍：需要向传统的总想管理结构中嵌入一个横向过程。</li></ul><h2 id="ISA"><a href="#ISA" class="headerlink" title="ISA"></a>ISA</h2><ul><li>自底向上的方法，它为能够适应各种业务策略的IS解决方案提供一种中立的系统结构框架。</li><li>ISA框架：<ul><li>5行：代表五种人，规划者、所有者、设计者、建造者、承包者。</li><li>6列：表现每个参与者所从事的6种不同的描述或体系结构模型。</li><li>规定软件过程中每一个阶段的成果由谁来完成的。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件项目中的用户</title>
      <link href="/2021/02/25/ruan-jian-gong-cheng/ruan-jian-xiang-mu-zhong-de-yong-hu/"/>
      <url>/2021/02/25/ruan-jian-gong-cheng/ruan-jian-xiang-mu-zhong-de-yong-hu/</url>
      
        <content type="html"><![CDATA[<h1 id="终端用户"><a href="#终端用户" class="headerlink" title="终端用户"></a>终端用户</h1><p>终端用户既指软件的最终操作者，也是软件工程内的一个概念，指终端用户的抽象集合，用于区分单纯使用软件的用户和进行软件开发的开发者。这种抽象主要在设计用户界面时有用，用于代表普通用户的共同特性。在以用户为中心的设计中通常会创建多个用户画像以代表典型的最终用户，每个用户画像都可能包括对不同界面的接受程度，以及在某一专业领域的知识。</p><p>虽然终端用户类别没有限制，在软件设计时通常会假设终端用户拥有极少的技术知识和训练，特别是在为普通大众设计程序时。在这个环境下，为了增加易用性，通常倾向于实现易于学习的图形用户界面（可能有触摸屏），而非复杂的命令行界面。</p><p>终端用户开发的概念模糊了通常的用户和开发者之间的界限，给予非专业人士在不了解编程语言的情况下创造复杂对象的能力。</p><h1 id="用户在软件项目中承担的工作"><a href="#用户在软件项目中承担的工作" class="headerlink" title="用户在软件项目中承担的工作"></a>用户在软件项目中承担的工作</h1><p>用户在软件项目中可以承担的工作有很多：</p><ul><li>作为设计组、专题讨论会的成员，参与设计用户界面。</li><li>作为知识来源，提供任务、商业过程的当前执行情况。</li><li>参与需求讨论会，提出构想、确定问题。</li><li>作为测试用户，在验收时测试系统，检查它能否正常工作。</li><li>作为审查者评估用户界面。</li><li>进行可用性测试，尝试用新的用户界面执行任务。</li><li>作为项目管理委员会的成员。</li></ul><h1 id="用户体验"><a href="#用户体验" class="headerlink" title="用户体验"></a>用户体验</h1><p>用户体验(UE/UX)，即用户在使用一个产品或系统之前、使用期间和使用之后的全部感受，包括情感、信仰、喜好、认知印象、生理和心理反应、行为和成就等各个方面。</p><p>三个影响用户体验的因素：系统、用户、使用环境。</p><p>用户体验是用户在使用产品过程中建立起来的一种纯主观感受。但是对于一个界定明确的用户群体来讲，其用户体验的共性是能够经由良好设计实验来认识到。</p><h1 id="用户友好"><a href="#用户友好" class="headerlink" title="用户友好"></a>用户友好</h1><p>需求分析阶段，客户和产品的未来用户与用户界面的快速原型交互是很重要的。鼓励用户试验使用人机界面大大降低完成的产品将不得不改变的风险。特别是，这项试验有助于获得用户界面的友好性，这是所有软件产品的一个至关重要的目标。</p><p><strong>用户友好</strong>一词指人类与软件产品沟通的容易性。如果用户对学习如何使用一个软件产品感到困难，或者发现屏幕令人困惑或不高兴，那么他们将不使用该产品，或者不正确地使用它。为了解决这个问题，可以引入菜单驱动的软件产品，让用户从一系列可能的响应中选择即可。</p><p>基础的菜单是基于命令行的，后来更多的是基于图形用户界面。窗口、图标、下拉式菜单是GUI的要素。后来，Web应用显然比GUI应用更广泛，也支持菜单。</p><h1 id="以用户为中心的设计"><a href="#以用户为中心的设计" class="headerlink" title="以用户为中心的设计"></a>以用户为中心的设计</h1><p>当程序完全按照用户的想法行事时，用户界面设计得很好，这就体现了以用户为中心的设计。</p><p>用户界面是重要的。用户界面强烈影响软件的感知，可用的软件销售更好，不可用的软件则会被抛弃。</p><p>用户界面设计不当要付出不菲的的代价，因为用户的时间不会变得廉价。如果当前设计不当，之后将付出代价。</p><p>用户界面设计是困难的。UI关乎与用户的交流。因为设计者不能站在用户视角，而大多数软件工程师只与其他程序员沟通。</p><p>通常，用户的需求总是正确的，一贯的问题是系统错误。遗憾的是，用户并不总是正确的，他们不是设计师，需要引导。因此，用户界面构建是困难的。</p><p>UI需要大量软件开发工作，消耗至少50%的设计时间、实现时间、维护时间、代码量。</p><h1 id="利益相关的用户"><a href="#利益相关的用户" class="headerlink" title="利益相关的用户"></a>利益相关的用户</h1><p>用户是软件项目的利益相关者。</p><p>利益相关者是在软件项目中存在利害关系的人，任何受到系统影响或对系统开发产生影响的人，都是利益相关者。</p><p>一般存在两组主要的利益相关者：</p><ul><li>用户（用户或系统所有者）</li><li>开发者（分析员、设计员、程序员）</li></ul><p>用户是为开发付款并负责决策的人。<br>即使用户并不总是正确的，开发者也不能随意改变或拒绝用户的需求，任何冲突的、不可行的或非法的需求都必须与用户再次协商。</p><p>用户导致项目失败的可能是：</p><ul><li>用户的需求被误解了，或者没有被完全捕获。</li><li>用户的需求变更的过于频繁。</li><li>用户没有准备为项目提供足够的资源。</li><li>用户不想与开发者合作。</li><li>用户怀有不切实际的期望。</li><li>系统对用户不再有利。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件生命周期</title>
      <link href="/2021/02/19/ruan-jian-gong-cheng/ruan-jian-sheng-ming-zhou-qi/"/>
      <url>/2021/02/19/ruan-jian-gong-cheng/ruan-jian-sheng-ming-zhou-qi/</url>
      
        <content type="html"><![CDATA[<h1 id="生命周期的主要阶段"><a href="#生命周期的主要阶段" class="headerlink" title="生命周期的主要阶段"></a>生命周期的主要阶段</h1><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>此阶段专注于系统需求，确定和详细说明建模需求，开发和集成系统的功能和数据模型，并捕获非功能性需求的功能和数据模型，并捕获非功能性需求和其他系统约束。</p><p>需求分析员确定了需求，而系统分析员对需求进行了详细规格说明。</p><p>需求是系统服务或约束的陈述。<br>服务陈述描述了关于单个用户或整个用户群体，系统应该如何运行。它实际上定义了一个必须一直要服从的业务规则，也可以是系统必须执行的一些计算。<br>约束陈述表达了在系统行为或开发上的限制。</p><p>需求确定阶段的任务是同客户一起确定、分析和协商需求，涉及从客户那里获得信息的各种技术。</p><p>需求分析包括开发者与客户之间的协商，对于消除矛盾的需求和重叠的需求，以及遵照项目预算和期限来说，是必要的。</p><p>需求阶段的输出是需求文档，它大多是一种叙述性的、带有一些非正式图表的文本文档，不包含正式模型，或许包含一些易于流行的、能使客户轻松理解并促进开发者与客户之间沟通的符号。</p><p>理想的情况下，规格说明模型应该独立于部署系统的软硬件平台。理由是：</p><ul><li>软硬件考虑因素加强了对建模语言的词汇约束。</li><li>这些词汇可能造成客户理解上的困难，抑制了开发者和客户之间的互动。</li></ul><p>当然，如果约束陈述中存在了软硬件平台的考虑因素，那另当别论。</p><h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><p>按照体系结构和技术解决方案，对涉及客户端的用户界面和服务器端的数据库对象的程序设计进行解释，提出系统的可理解性、可维护性和可扩展性的各种设计问题，并对其文档化。</p><h3 id="体系结构设计"><a href="#体系结构设计" class="headerlink" title="体系结构设计"></a>体系结构设计</h3><p>根据其模块（组件）而进行的系统描述称为体系结构设计。<br>体系结构设计包括对客户端和服务器方面的解决方案策略的决定，它也关注对解决方案策略的选择和系统的模块化。<br>解决方案策略既需要解决客户端（用户界面）和服务器（数据库）问题，也需要将客户端和服务器过程黏合在一起的任何中间件。相对地独立于解决方案策略，但是组件的详细设计必须符合所选择的C/S解决方案。</p><p>C/S模型经常会被扩展，提供三层体系结构，即表示层、逻辑层、数据访问层。</p><p>体系结构设计的质量对系统的可适应性（可理解+可维护+可扩展）是重要的。如果没有这些特性，软件解决方案所固有的复杂性就会失去控制。</p><p>体系结构设计交付的是一个可适应的系统结构，编程期间应该坚持该结构，并在系统交付后精心地进行维护，这是至关重要的。</p><p>尽管设计从分析进行延伸，但是体系结构设计可以看做一个相对自治性的活动，旨在使用良好的并且已证实能够获得优秀体系结构的设计实践。</p><h3 id="详细设计"><a href="#详细设计" class="headerlink" title="详细设计"></a>详细设计</h3><p>每个软件组件内部运行的描述称为详细设计，它为每个组件开发了详细的算法和数据结构。<br>这些组件最终被部署在基础实现平台的客户端、服务器或中间件过程上。<br>算法和数据结构是对基础实现平台的约束而定制的。</p><p>详细设计是直接从分析模型中产生的。</p><p>客户端的设计需要符合特定的GUI接口文档，浏览器端的设计需要符合Web浏览器支持的GUI设计规范。<br>面向对象GUI设计的一个主要原则是用户控制而不是程序控制。</p><p>服务器的详细设计定义了数据库服务器上的对象，其中有些对象是数据容器（表和视图等），其他对象则是过程（如存储过程和触发器等）。</p><p>中间件的详细设计与应用逻辑和业务逻辑有关，这里提供了解决方案中的用户界面与数据库之间的分隔和映射。</p><h2 id="系统实现"><a href="#系统实现" class="headerlink" title="系统实现"></a>系统实现</h2><p>此阶段由客户端应用程序和服务器数据库的编码活动组成，强调了<strong>增量和迭代</strong>的实现过程。在设计模型与客户端应用程序和服务器数据库的实现之间的双向工程对成功的产品交付来说是必要的。</p><p>除了编码以外，实现过程涉及测试的加载和数据库的加载、测试、用户培训、硬件事务等。</p><p>用户界面的详细设计容易引起实现的变化，服务器数据库的实现可能会强制改变设计文档。</p><h2 id="系统集成和部署"><a href="#系统集成和部署" class="headerlink" title="系统集成和部署"></a>系统集成和部署</h2><p>现代软件以较小的模块（组件）进行开发，在为客户用于生产而部署之前，这些组件需要与已经操作的模块组装且集成在一起。</p><p>增量开发意味着软件模块的增量集成和部署。对于大型系统来说，模块集成会比任何早期的生命周期阶段花费更多的时间和精力。须知：整体大于部分之和！</p><p>必须从软件生命周期的开始就仔细地规划模块集成，在系统分析的初期阶段就识别单独实现的软件单元，并且要在体系结构设计过程期间详细地再次处理，实现的次序必须使增量集成尽可能地平稳进行。</p><p>增量集成的主要困难在于模块之间交错循环的相互依赖。设计良好的系统应该是尽可能降耦甚至消除耦合的，线性耦合是获得系统期望功能的一种方式。</p><p>为了能在其他模块完成之前就交付一个模块，正确的方法是用特殊代码来填补其他模块提供的功能，这部分模拟所缺模块活动的程序被称为stub。stub是重要的概念，在集成测试那里还会用到，跟集成息息相关。</p><p>OO的系统必须为集成和部署而设计。每个模块尽可能独立，在分析和设计阶段识别耦合并将其降低到最低。</p><h2 id="系统运行和维护"><a href="#系统运行和维护" class="headerlink" title="系统运行和维护"></a>系统运行和维护</h2><p>当原先存在的业务解决方案或系统被逐步淘汰，并且新系统接管了日常操作时，运维阶段开始。运行阶段也标志着系统维护的开始，包括任何对软件的修正和扩展。时代与业务环境的经常变化要求软件有规律的变更。</p><p>运维针具了软件生命周期的大部分（有一说是75%）。</p><p>运行标志着现有业务解决方案到新方案的转换，而无论这种转换是否在软件中，转换通常是渐进的过程。如果可能的话，新老系统应该并行地运行一段时间，如果新系统不能支撑起业务，则撤回老系统。</p><p>维护分为三个阶段：</p><ul><li>内务处理：涉及执行必要的日常维护任务，以保护用户对系统的可访问性和可操作性。</li><li>适应性维护：设计对系统的监控和审核，对系统功能的调整以满足变化的环境和非功能性的要求。</li><li>完善性维护：对系统的重新设计和修改，以适应新的或有实质性变化的需求。</li></ul><h1 id="跨越生命周期的活动"><a href="#跨越生命周期的活动" class="headerlink" title="跨越生命周期的活动"></a>跨越生命周期的活动</h1><h2 id="项目规划"><a href="#项目规划" class="headerlink" title="项目规划"></a>项目规划</h2><ul><li>最终软件产品交付什么、花费、时间、风险、里程碑、资源分配，也包括开发方法、过程、工具、标准和团队组织的选择。</li><li>典型的约束是时间和费用，每个项目都有清晰的期限和紧张的预算。</li></ul><h2 id="项目度量"><a href="#项目度量" class="headerlink" title="项目度量"></a>项目度量</h2><ul><li>测量开发时间、工作量等，常常在软件质量和复杂性的范围内讨论度量。</li><li>用于测量正确性、有效性、完整性、可用性、可维护性、灵活性、可测试性等测量因素。</li><li>度量还可以在生命周期的不同阶段测量开发模型，评估过程的效果并改善工作质量。</li></ul><h2 id="软件测试"><a href="#软件测试" class="headerlink" title="软件测试"></a>软件测试</h2><ul><li>跨越整个软件生命周期的一项活动，系统涉及变化就需要测试。</li><li>黑盒测试、白盒测试。</li><li>单元测试、集成测试、系统测试、确认测试、验收测试、回归测试。</li></ul><h1 id="特别说明"><a href="#特别说明" class="headerlink" title="特别说明"></a>特别说明</h1><ol><li>如果存在大量明显看不懂的内容，说明你的软件工程基础较差。</li><li>除了那些贯穿整个生命周期的内容以外，我们必须清楚，软件开发是迭代增量的，理解这点十分关键。如果不理解迭代增量，那就会想当然的认为软件开发是一个线性的过程，这样就陷入了瀑布模型等线性模型的困局。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 软件工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件开发</title>
      <link href="/2021/02/19/ruan-jian-gong-cheng/ruan-jian-kai-fa/"/>
      <url>/2021/02/19/ruan-jian-gong-cheng/ruan-jian-kai-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="软件开发的本质"><a href="#软件开发的本质" class="headerlink" title="软件开发的本质"></a>软件开发的本质</h1><p>软件开发的本质体现在<strong>其本身固有的困难中</strong>，软件的本质问题是由软件固有的复杂性、一致性、可变性和不可见性所导致的。</p><ul><li>软件本身就是复杂的，复杂性是<strong>软件规模</strong>（以代码行表示）的函数，以及组成软件产品组件之间相互依存关系的函数。软件复杂性随着软件应用领域的性质不同而不同，计算密集型$&lt;$数据密集型。</li><li>一致性、可变性、不可见性加重了软件本身固有的困难。</li><li>一致性说的是软件必须与其基于的特定软硬件平台相一致，也必须与现有的信息系统相符合，并集成在一起。</li><li>可变性说的是业务过程和需求是不断变化的。</li><li>不可见性说的是负责输出的代码往往隐藏在不可见的程序语句、二进制代码库以及周边的系统软件中。</li></ul><p>软件的本质困难定义了软件开发的不变事实，即软件是一种创造性开发行为的产品，不是制造业重复性行为的结果。<strong>软件是开发出来的，不是批量制造出来的。</strong></p><p>一个组织不可能找到一个软件框架来实现它的核心业务活动，支持核心业务活动的软件很少有机会依赖软件组件或框架。此外，支持其他业务活动的软件必须包含有针对性的或独特的解决方案，来为组织提供竞争优势。</p><p>各种情况下，开发过程都应该使用<strong>组件技术</strong>。<br>组件是软件的一个<strong>可执行单元</strong>，具有明确定义的功能（服务）及与其他组件之间的通信协议（接口）。可以对组件进行配置以满足应用需求。<br>面向服务的体系结构（SOA）提倡由服务，也就是运行的软件实例（而不是组件）来构建系统。<br>组件不同于运行的软件实例，组件需要经历加载、安装、组合、部署、初始化并运行起来才算是运行的软件实例。</p><p><strong>软件包、组件、服务以及类似的技术并没有改变软件生产的本质问题，尤其是需求分析与系统设计的原则和任务保持不变。</strong></p><h1 id="软件开发方法"><a href="#软件开发方法" class="headerlink" title="软件开发方法"></a>软件开发方法</h1><p>过程式逻辑是僵化的，并且无法对突发事件做出恰当的响应。一旦开始，程序便以或多或少的确定性方式来执行，直至完成。偶尔，程序会要求用户输入信息，然后将沿着不同的路径执行。一般来说，与用户的交互是受限制的，不同执行路径的数目也是预先确定了的，此时，起控制作用的是程序而不是用户。</p><p>GUI则是事件驱动的，基于鼠标、键盘或其他输入设备而引发的，以随机且不可预知的方法来执行事件。<br>GUI环境中，用户很大程度上控制着程序的执行。每个事件的背后都有一个软件对象，知道如何在程序执行的当前状态下为该事件服务。一旦完成了服务，控制权就返回给用户。</p><h2 id="结构化方法"><a href="#结构化方法" class="headerlink" title="结构化方法"></a>结构化方法</h2><p>传统软件开发方法是结构化方法，以过程为中心。<br>结构化方法开发的系统在功能分解活动中被分解为可管理的单元，并将系统有层次的划分为由数据流连接的业务过程。</p><p>UML不是系统开发的结构化方法的建模技术。结构化方法的建模工具：</p><ul><li>数据流图DFD，过程建模，结构化方法的开发驱动力。</li><li>实体关系模型ERD，数据建模。</li></ul><p>结构化方法不适于现代软件开发原因：</p><ul><li>结构化方法是顺序，转换的方法，而不是迭代增量的方式，现代软件要求迭代增量。</li><li>写好的软件不可变无弹性，即很难对业务功能集进行扩展和沿伸，重用性差。</li><li>基本上所有的软件从零开始写，不支持已存在组件的复用。</li></ul><h2 id="面向对象方法"><a href="#面向对象方法" class="headerlink" title="面向对象方法"></a>面向对象方法</h2><p>现代软件开发方法是面向对象方法，面向对象方法基本特点是交互性。</p><p>面向对象方法基于事件驱动，由用户控制着程序的执行。软件执行的顺序不能事先预知，而软件服务的响应也是不可预测的。</p><p>面向对象方法以数据为中心，在分析阶段不需要定义类的操作，只需要定义类的属性，遵循迭代增量的过程。</p><p>面向对象的优点：</p><ul><li>封装的优点：<ul><li>提高了安全性，防止一些误操作。</li><li>提高了复用性，封装之后便于调用。</li><li>信息隐藏，隐藏了实现细节。</li></ul></li><li>继承的优点：<ul><li>继承可提高代码的复用性。</li><li>继承可提高代码的稳定性。</li><li>继承让类与类之间产生关系，是多态的前提。</li></ul></li><li>多态性优点：<ul><li>提高了代码的维护性（继承保证）。</li><li>提高了代码的扩展性（由多态保证）。</li></ul></li></ul><p>面向对象方法存在问题：</p><ul><li>理解较困难，结构较复杂，分析阶段在一个相当高的抽象层面进行。</li><li>数据库大多数是关系型数据库，怎么把对象存在数据库里。</li><li>项目管理更加困难。</li></ul><h1 id="软件集成开发"><a href="#软件集成开发" class="headerlink" title="软件集成开发"></a>软件集成开发</h1><p>如今，只是用手动过程自动化来开发新软件几乎是不存在的。大部分项目取代或扩展了现存的软件解决方案，或将它们集成为更大的、提供新的自动化水平的解决方案。</p><p>集成开发与从零开始的软件开发相比，具有共同的迭代生命周期方法，生产相同的软件产品模型，但是所强调的集成技术和使能技术不同。</p><p>集成方法可分为三种基本类型：</p><ul><li>面向信息的集成或面向门户的集成<ul><li>面向信息的集成：关注源应用程序和目标应用程序之间信息的实时交换，这是在数据库应用程序接口API层次的集成，这种集成使信息具体化以供其他应用程序使用。</li><li>面向门户的集成：是一种特殊的面向信息的集成，将来自多个软件系统的信息具体化到一个共同的用户界面。需要来自后台系统的具体信息进行人为干预。</li></ul></li><li>面向接口的集成：将应用接口（通过接口抽象定义的服务）连接在一起。接口显示了一个应用系统向其他应用系统所提供的有益服务。</li><li>面向过程的集成：将应用系统连接在一起，方法是在现有应用系统的已有过程集和数据集的顶部定义一个新的过程层。这是最终的集成方案，具有战略高度，旨在提升现有的业务过程并带来竞争优势。</li></ul><h1 id="CASE"><a href="#CASE" class="headerlink" title="CASE"></a>CASE</h1><p>开发者还需要工具，为软件开发过程提供的先进的、基于计算机的环境。这样的工具和环境称为计算机辅助软件工程(CASE)。</p><p>CASE使得在中央存储库中实现模型的存储和检索成为可能，并在计算机屏幕上进行模型的图形和文字操作。</p><p>通过引入CASE，计算机可以帮助完成与软件开发有关的大部分繁重工作，包括创建并组织所有诸如计划、合同、规格说明、设计、源代码和管理信息这样的人工制品。</p><p>在理想的情况下，存储库应当能够为共享的多个用户（多个开发者）提供对模型的访问。</p><p>CASE存储库的典型功能有：</p><ul><li>协调对模型的访问</li><li>促进开发者之间的合作</li><li>存储模型的多个版本</li><li>识别版本间的区别</li><li>允许在不同的模型中共享相同的概念</li><li>检查模型的一致性和完整性</li><li>生成项目报告和文档</li><li>生成数据结构和程序代码(正向工程)</li><li>从已有的实现中生成模型(逆向工程)</li></ul><p>CASE包含计算机支持软件工程的方方面面。</p><p>CASE生成的程序只是一个代码骨架，具体算法还需要编程人员编码实现。</p><p>CASE工作平台是一些工具的集合，共同支持一个或两个活动。<br>活动是相关任务的集合。活动与生命周期模型的工作流不能等同，活动的任务甚至可以跨越工作流。</p><p>将CASE技术从工具到工作平台再发展下去，就是CASE环境，支持软件开发过程的大部分甚至整个软件开发过程。</p>]]></content>
      
      
      <categories>
          
          <category> 软件工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件项目的利益相关者与系统相关人员</title>
      <link href="/2021/02/18/ruan-jian-gong-cheng/ruan-jian-xiang-mu-de-li-yi-xiang-guan-zhe-yu-xi-tong-xiang-guan-ren-yuan/"/>
      <url>/2021/02/18/ruan-jian-gong-cheng/ruan-jian-xiang-mu-de-li-yi-xiang-guan-zhe-yu-xi-tong-xiang-guan-ren-yuan/</url>
      
        <content type="html"><![CDATA[<h1 id="利益相关者"><a href="#利益相关者" class="headerlink" title="利益相关者"></a>利益相关者</h1><p>利益相关者是在软件项目中存在利害关系的人，任何受到系统影响或对系统开发产生影响的人，都是利益相关者。</p><p>一般存在两组主要的利益相关者：</p><ul><li>客户（用户或系统所有者）</li><li>开发者（分析员、设计员、程序员）</li></ul><p>客户是为开发付款并负责决策的人。<br>即使客户并不总是正确的，开发者也不能随意改变或拒绝客户的需求，任何冲突的、不可行的或非法的需求都必须与客户再次协商。</p><p>客户导致项目失败的可能是：</p><ul><li>客户的需求被误解了，或者没有被完全捕获</li><li>客户的需求变更的过于频繁</li><li>客户没有准备为项目提供足够的资源</li><li>客户不想与开发者合作</li><li>客户怀有不切实际的期望</li><li>系统对客户不再有利</li></ul><p>随着软件复杂性的增加，人们越来越认识到，开发者的技能和知识是至关重要的。良好的开发者能够交付一个可接受的解决方案；卓越的开发者能够交付一个更优秀的解决方案。</p><p>为了确保开发者的杰出和投入，应该做到：</p><ul><li>雇佣最好的开发者</li><li>为现有的开发者提供持续的培训和教育</li><li>鼓励开发者之间进行信息交流和互动，使他们互相促进</li><li>通过排除阻力以及将他们的精力引导到生产性工作中，来激励开发人员</li><li>提供一个令人振奋的工作环境</li><li>将个人目标同组织策略和目标统一起来</li><li>强调团队工作</li></ul><h1 id="系统相关人员"><a href="#系统相关人员" class="headerlink" title="系统相关人员"></a>系统相关人员</h1><p>说明：<strong>利益相关者≠系统相关人员</strong>！</p><p>相关人员是指那些直接或间接从开发的系统中受益的人。</p><p>进行相关人员分析有助于发现所有可能的需求源。</p><p>识别系统相关人员的方法：</p><ul><li>发掘系统潜在的最终用户</li><li>发掘系统打算支持的业务过程描述以及与这些过程相关的人</li><li>与管理部门讨论，询问谁会受到系统引入的影响</li><li>考虑使用系统的组织的客户</li><li>开发人员和运维人员原则上不是系统相关人员，不应写进系统相关人员列表中</li><li>考虑可能希望给系统添加需求的监管机构和认证机构</li></ul><p>请看下面的一个实例：</p><blockquote><p>项目背景：<br>在高校教育阶段，为提高政府教育管理的针对性与有效性，需要从学生和教师获知其对学校、 专业、教学情况、教学资源配套、学校管理水平等多方面评价的信息收集。互联网是效率最高、短 时间内涉及人员广的渠道之一，所以依托互联网的调查问卷需求应运而生，通过信息的反馈，进行信息的初步帅选与分析，能够及时反应当前高校情况，为管理手段和政策方针提供依据。<br>项目简介：<br>1、项目发布功能，根据调查内容和性质的不同可定义成不同的项目，在每个项目下可定义问卷。<br>2、设计问卷，调查问卷可进行问卷题目编辑，题型包含单选题和填空题两种类型。<br>3、待问卷人员导入，包括学生和教师两种角色，通过excel模板导入待问卷人员信息，学生包括 学号、姓名、所属学校、专业、班级、性别、手机号、电子邮箱。教师包括教师号、姓名、所 属院校、性别、手机号码、电子邮箱。<br>4、发布问卷，通过系统将问卷发布到待问卷人员，可通过短信和邮件两种方式获得问卷链接地址。<br>5、问卷被提交后，结果被记录。<br>6、系统对问卷结果进行统计并进行分析，可查看总体参与人数，答题选项比例、不同学生、不同 学校、不同年级、不同专业、不同院校级别、不同性别的答题报表或图表分析。</p></blockquote><p>对于此实例的系统相关人员分析有这样一个版本：</p><table><thead><tr><th align="center">角色名</th><th align="center">角色说明</th></tr></thead><tbody><tr><td align="center">一级管理员（政府）</td><td align="center">政府相关部门通过系统发布相关问卷格式，可以针对同一问卷同时发布不止一个模板并下发给每个需要参与问卷调查的学校，再以短信或者邮箱的形式发送给学校管理员。政府通过老师和学生填写调查问卷的形式获取想要的相关信息，以实现教学管理的高效性、针对性。在此系统中政府不但需要能够发布问卷，还需要能从系统中总结出相关统计结果，要求系统能给出不同的数据可视化形式（条形图、折线图、饼状图等）和简单的结果分析。</td></tr><tr><td align="center">二级管理员（学校管理员）</td><td align="center">学校在政府发布问卷模板之后，收到短信提示或者邮箱通知，在政府发布的问卷模板中有针对性的选择适合自己学校的调查问卷并发布给老师和学生，发布属于自己学校的问卷同样通过该系统发布。不同的学校管理员登陆系统只能看到自己学校的问卷填写结果，无权查看其他学校的情况。系统可以生成专属于某个学校的统计结果。学校管理员根据政府的要求选择上传统计结果给政府或是整理问卷提交给政府，上级管理员有权查看这些数据。</td></tr><tr><td align="center">问卷系统使用者（老师和学生）</td><td align="center">学校发放问卷给老师和学生，学生和老师通过自己专属的账号密码登录系统，系统会记录某个人在系统上填写过的问卷以及需要填写但还未填写的问卷，在系统进行填写并提交。</td></tr><tr><td align="center">开发人员</td><td align="center">系统开发人员根据客户（政府）提出的需求来开发该系统，由需求获取人员通过各种需求获取方式获取详细需求并生成需求规格文件；交给架构师确认和评估最终生成一份可行的需求规格说明书。开发人员根据需求规格说明书进行后续的软件架构、详细设计和编程实现。</td></tr></tbody></table><p>这合理吗？</p><p>当然是不合理的，因为开发人员原则上不算系统相关人员。</p><p>利益相关者≠系统相关人员！</p><p>修改后的表格如下：</p><table><thead><tr><th align="center">参与者</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">一级管理员（政府教育部门管理员）</td><td align="center">政府教育部门的一级管理员通过系统发布相关问卷格式，可以针对同一次调查同时发布至少一个模板并下发给每个需要参与问卷调查的学校，再以短信或者邮箱的形式发送给二级管理员。政府通过在校师生填写的调查问卷获取想要的相关信息，以实现教学管理的高效性、针对性。<br>在此系统中的一级管理员不但需要能够发布问卷模板，还需要能从系统中分析出相关统计结果（在系统的支持下），系统能给出不同的数据可视化形式（条形图、折线图、饼状图等）和简单的结果分析。具体的详细分析还要靠一级管理员。<br>所以说，这里的“一级管理员”包含了数据分析的能力。</td></tr><tr><td align="center">二级管理员（学校管理员）</td><td align="center">二级管理员在一级管理员发布问卷模板之后，收到短信提示或者邮箱通知，在政府发布的问卷模板中有针对性的选择适合自己学校的调查问卷模板并完善之。设计完成的问卷由二级管理员通过系统发放待填写问卷的本校师生。<br>不同学校的二级管理员登陆系统只能看到自己学校的问卷填写结果，无权查看其他学校的情况。<br>系统可以帮助二级管理员生成专属于本学校的统计结果。二级管理员根据上级的要求选择上传统计结果给一级管理员或是整理问卷提交给政府，一级管理员有权查看这些数据。<br>所以说，这里的“二级管理员”也包含了数据分析的能力，只是要求可能比“一级管理员”略低。</td></tr><tr><td align="center">问卷填写者（教师和学生）</td><td align="center">二级管理员把问卷发放给需要填写问卷的本校师生，填写者通过自己专属的账号密码登录系统并验证个人信息。<br>填写者打开问卷并在截止日期之前进行填写，填写完毕符合提交要求可以提交，他们的信息会被保护，但无权查看其他人的结果。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 软件工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据的特点</title>
      <link href="/2021/02/16/ji-suan-ji-ke-xue-ji-chu/da-shu-ju-de-te-dian/"/>
      <url>/2021/02/16/ji-suan-ji-ke-xue-ji-chu/da-shu-ju-de-te-dian/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据的特点"><a href="#大数据的特点" class="headerlink" title="大数据的特点"></a>大数据的特点</h1><h2 id="数据量大"><a href="#数据量大" class="headerlink" title="数据量大"></a>数据量大</h2><p>根据IDC作出的估测，数据一直都在以每年50%的速度增长，也就是说每两年就增长一倍（大数据摩尔定律）。</p><p>人类在最近两年产生的数据量相当于之前产生的全部数据量。</p><p>数据量的量级：<strong>bit</strong>、<strong>Byte</strong>、<strong>KB</strong>、<strong>MB</strong>、<strong>GB</strong>、<strong>TB</strong>、<strong>PB</strong>、<strong>EB</strong>、<strong>ZB</strong>、<strong>YB</strong>、<strong>BB</strong>、<strong>NB</strong>、<strong>DB</strong>。<br>除了<strong>1Byte=8bit</strong>以外，全是$2^{10}=1024$进制。</p><h2 id="数据类型繁多"><a href="#数据类型繁多" class="headerlink" title="数据类型繁多"></a>数据类型繁多</h2><p>大数据是由结构化数据、半结构化数据和非结构化数据组成的。</p><ul><li>非结构化数据是数据结构不规则或不完整，没有预定义的数据模型，不方便用数据库二维逻辑表来表现的数据。包括所有格式的办公文档、文本、图片、XML, HTML、各类报表、图像和音频/视频信息等等。<a href="https://baike.baidu.com/item/%E9%9D%9E%E7%BB%93%E6%9E%84%E5%8C%96%E6%95%B0%E6%8D%AE/309808">[1]</a></li><li>和普通纯文本相比，半结构化数据具有一定的结构性，OEM(Object exchange Model)是一种典型的半结构化数据模型。<a href="https://baike.baidu.com/item/%E5%8D%8A%E7%BB%93%E6%9E%84%E5%8C%96%E6%95%B0%E6%8D%AE">[2]</a></li><li>结构化数据，简单来说就是数据库。结合到典型场景中更容易理解，比如企业ERP、财务系统；医疗HIS数据库；教育一卡通；政府行政审批；其他核心数据库等。<a href="https://baike.baidu.com/item/%E7%BB%93%E6%9E%84%E5%8C%96%E6%95%B0%E6%8D%AE">[3]</a></li></ul><p>20%的结构化数据，存储在数据库中；剩余80%都是以文件形式存在的非结构化和半结构化数据，日志文件、机器数据等又占据非结构化数据的90%。</p><h2 id="处理速度快"><a href="#处理速度快" class="headerlink" title="处理速度快"></a>处理速度快</h2><p>从数据的生成到消耗，时间窗口非常小，可用于生成决策的时间非常少。</p><p>1秒定律是互联网进入DT时代对数据处理速度的要求。当然并非严格的1秒，只是秒级的时间内给出结果，这也是大数据技术有别于传统数据技术的重要一点, 时间太长，就失去意义了。这一点也是和传统的数据挖掘技术有着本质的不同。<a href="https://zhuanlan.zhihu.com/p/27064882">[4]</a></p><h2 id="价值密度低，商业价值高"><a href="#价值密度低，商业价值高" class="headerlink" title="价值密度低，商业价值高"></a>价值密度低，商业价值高</h2><p>以视频为例，连续不间断监控过程中，可能有用的数据仅仅有一两秒，但是具有很高的商业价值。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人工智能基础</title>
      <link href="/2021/02/13/ji-suan-ji-ke-xue-ji-chu/ren-gong-zhi-neng-ji-chu/"/>
      <url>/2021/02/13/ji-suan-ji-ke-xue-ji-chu/ren-gong-zhi-neng-ji-chu/</url>
      
        <content type="html"><![CDATA[<h1 id="智能Agent"><a href="#智能Agent" class="headerlink" title="智能Agent"></a>智能Agent</h1><p><strong>Agent</strong>是可以感知环境并在环境中行动的事物，它通过传感器感知环境并对所处环境产生影响。</p><p><strong>感知</strong>表示任何给定时刻Agent的感知输入，感知序列表示该Agent所收到的所有输入数据的完整历史。<br>一般地，Agent在任何给定时刻的行动选择依赖于到那个时刻为止该Agent的整个感知序列，而不是那些它感知不到的东西。</p><p><strong>Agent函数</strong>指定了Agent响应任何感知序列所采取的行动，它将任意给定感知序列映射为行动。</p><p><strong>人造Agent</strong>的Agent函数通过<strong>Agent程序</strong>实现。</p><p>Agent函数是抽象的数学表述；而Agent程序则是具体的实现，它运行在一些物理系统的内部。</p><p><strong>理性Agent</strong>是能把事情做对的Agent。对理性的判断基于以下四方面：</p><ul><li>定义成功标准的性能度量。</li><li>Agent对环境的先验知识。</li><li>Agent可以完成的行动。</li><li>Agent截止到此时的感知序列。</li></ul><p><strong>性能度量</strong>评价Agent在环境中的行为表现。给定Agent的感知序列，理性Agent行动值追求性能度量的预期值最大化。</p><p>理性Agent不仅应该<strong>收集信息</strong>，还要从它所感知的信息中尽可能多地<strong>学习</strong>。<br>所有的Agent都可以通过学习来改进它们的性能。</p><p>如果Agent依赖于设计人员的先验知识而不是它自身感知的知识，则Agent是缺乏<strong>自主性</strong>的。</p><p><strong>全知Agent</strong>明确地知道它的行动产生的实际结果并做出相应的动作，这在现实生活中是不可能存在的。</p><p><strong>任务环境</strong>的规范包括性能度量、外部环境、执行器和传感器。<br>设计Agent时，第一步总要把任务空间定义的尽可能完全。<br>任务环境从不同的维度看有很多变化，它们可能是完全或部分可观察的，单人Agent或多Agent的，确定性的或随机的，片段式的或延续式的，静态的或动态的，离散的或连续的，已知的或未知的。</p><p>$$Agent=体系结构+程序$$</p><p>四种基本的Agent程序是：</p><ul><li><strong>简单反射Agent</strong>直接对感知信息做出反应。</li><li><strong>基于模型的反射Agent</strong>保持内部状态，追踪记录记录当前感知信息中反映不出来的世界各方面。</li><li><strong>基于目标的反射Agent</strong>的行动是为了达到目标。</li><li><strong>基于效用的Agent</strong>试图最大化它期望的性能。</li></ul><p>这些Agent都应该被转换为<strong>学习Agent</strong>，以提高性能以便更好地行动。</p><p><strong>基于知识的Agent</strong>不依靠反射机制而是对知识的内部表示进行操作的推理，它的核心部件是其<strong>知识库</strong>(KB)。知识库是一个语句集合，这些语句使用知识表达语言表达，表示了对世界的某些断言。当某些语句是直接给定的而不是推导得到的时候，我们称其为<strong>公理</strong>。</p><h1 id="命题逻辑"><a href="#命题逻辑" class="headerlink" title="命题逻辑"></a>命题逻辑</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><ol><li>用二叉树方法给出$(P\wedge(Q→R))→(S\vee{\sim{R}})$的所有指派。</li><li>将$(P\wedge(Q→R))→S$化成合取范式。</li><li>设$\alpha$有四个原子命题$P_{1}$、$P_{2}$、$P_{3}$、$P_{4}$，其所有成假指派为$xtxt$、$ftfx$、$txtf$，写出命题公式$\alpha$。</li><li>将$(∀xA(x)→∃xB(x))\vee(Q→R)$化为子句形式。</li></ol><h2 id="参考答案"><a href="#参考答案" class="headerlink" title="参考答案"></a>参考答案</h2><p>1.将$P$用$t$代入作为左分支，$f$代入作为右分支，依次代入$Q$、$R$、$S$得：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E7%A1%80/1.png"></p><ul><li>成真指派：$fxxx$、$txfx$、$txtt$</li><li>成假指派：$txfx$</li></ul><p><strong>说明：这个图我画的不是很好，分完$P$再分最多的$R$会更好一些。</strong></p><p>2.化简过程如下：<br>$$(P\wedge(Q→R))→S\⇔(P\wedge(¬Q\vee{R}))→S\⇔¬(P\wedge(¬Q\vee{R}))\vee{S}\⇔(¬P\vee¬(¬Q\vee{R}))\vee{S}\⇔(¬P\vee(Q\wedge{¬R}))\vee{S}\⇔((¬P\vee{Q})\wedge(¬P\vee{¬R}))\vee{S}\⇔(¬P\vee{Q}\vee{S})\wedge(¬P\vee{¬R}\vee{S})$$</p><p>3.可以直接写出命题公式如下：<br>$$¬((P_{2}\wedge{P_{4}})\vee(¬P_{1}\wedge{P_{2}}\wedge{¬P_{3}})\vee(P_{1}\wedge{P_{3}}\wedge{¬P_{4}}))$$</p><p>化简过程如下：<br>$$¬((P_{2}\wedge{P_{4}})\vee(¬P_{1}\wedge{P_{2}}\wedge{¬P_{3}})\vee(P_{1}\wedge{P_{3}}\wedge{¬P_{4}}))\⇔¬(P_{2}\wedge{P_{4}})\wedge¬(¬P_{1}\wedge{P_{2}}\wedge{¬P_{3}})\wedge¬(P_{1}\wedge{P_{3}}\wedge{¬P_{4}})\⇔(¬P_{2}\vee{¬P_{4}})\wedge(P_{1}\vee{¬P_{2}}\vee{P_{3}})\wedge(¬P_{1}\vee{¬P_{3}}\vee{P_{4}})$$</p><p>4.子句形式需要化简出前束合取范式，化简过程如下：<br>$$(∀xA(x)→∃xB(x))\vee(Q→R)\⇔(∀xA(x)→∃yB(y))\vee(Q→R)\⇔(¬∀xA(x)\vee{∃yB(y)})\vee(¬Q\vee{R})\⇔(∃xA(x)\vee{∃yB(y)})\vee(¬Q\vee{R})\⇔(∃x∃y(A(x)\vee{B(y))})\vee(¬Q\vee{R})\⇔∃x∃y(A(x)\vee{B(y)\vee¬Q\vee{R}})$$</p><p>所以子句形式为：$A(a)\vee{B(b)\vee¬Q\vee{R}}$</p><h1 id="基于线性神经网络迭代求解线性方程组"><a href="#基于线性神经网络迭代求解线性方程组" class="headerlink" title="基于线性神经网络迭代求解线性方程组"></a>基于线性神经网络迭代求解线性方程组</h1><h2 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h2><p>已知如下的线性方程组：</p><p>$\begin{bmatrix} 1 &amp; 0 &amp; -1 &amp; 0 \ -1 &amp; 0 &amp; 0 &amp; 1 \ 0 &amp; -1 &amp; 1 &amp; -1 \ -1 &amp; -1 &amp; -1 &amp; 0 \end{bmatrix} \begin{bmatrix} W_{1} \ W_{2} \ W_{3} \ W_{4} \end{bmatrix}=\begin{bmatrix} 1 \ 2 \ 3 \ 4 \end{bmatrix}$</p><p>要求基于简单的线性神经网络模型求解，并将训练得到的$(W1,W2,W3,W4)$与求解方程组得到的$(W1,W2,W3,W4)$进行对比，分析差别。</p><h2 id="实现要点"><a href="#实现要点" class="headerlink" title="实现要点"></a>实现要点</h2><p>实现要点：</p><ul><li>网络学习规则采用$Delt$规则：$\Delta{w_{ij}} =\eta(t_{i}-a_{i})\cdot{a_{j}}$</li><li>随机置初始权重：$W_{1}=W_{2}=W_{3}=W_{4}=0$</li><li>置一个较小的学习率：$η=0.5$</li><li>判断网络学习的准确程度，利用目标值与实际输出误差指标函数：$E=\sqrt{(\sum(t_{ie}-a_{ie})^2)}$</li><li>迭代到偏差小于$1\times{10^{-10}}$或者迭代$500$轮即停止迭代</li></ul><h2 id="Python编程实现"><a href="#Python编程实现" class="headerlink" title="Python编程实现"></a>Python编程实现</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> math <span class="token keyword">import</span> sqrt<span class="token keyword">def</span> <span class="token function">get_output</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> weights<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> weights<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> weights<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> weights<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> weights<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">get_lr</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token builtin">max</span> <span class="token operator">=</span> <span class="token number">0.0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        row <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span>        len2 <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> row<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> row<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> len2 <span class="token operator">&gt;</span> <span class="token builtin">max</span><span class="token punctuation">:</span>            <span class="token builtin">max</span> <span class="token operator">=</span> len2    <span class="token keyword">return</span> <span class="token number">2.0</span> <span class="token operator">/</span> <span class="token builtin">max</span><span class="token keyword">def</span> <span class="token function">optimizer</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> weights<span class="token punctuation">,</span> loss<span class="token punctuation">,</span> lr<span class="token punctuation">)</span><span class="token punctuation">:</span>    eta <span class="token operator">=</span> <span class="token number">0.5</span>    <span class="token keyword">for</span> i<span class="token punctuation">,</span> weight <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>weights<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        weights<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> weight <span class="token operator">+</span> eta <span class="token operator">*</span> loss <span class="token operator">*</span> lr <span class="token operator">*</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">get_loss</span><span class="token punctuation">(</span>output<span class="token punctuation">,</span> label<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> label <span class="token operator">-</span> output<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    inputs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    label <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">,</span> <span class="token number">4.0</span><span class="token punctuation">]</span>    ilr <span class="token operator">=</span> get_lr<span class="token punctuation">(</span>inputs<span class="token punctuation">)</span>    weights <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> epoch <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        total_loss <span class="token operator">=</span> <span class="token number">0.0</span>        <span class="token keyword">for</span> i<span class="token punctuation">,</span> row <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>inputs<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            output <span class="token operator">=</span> get_output<span class="token punctuation">(</span>row<span class="token punctuation">,</span> weights<span class="token punctuation">)</span>            a_label <span class="token operator">=</span> label<span class="token punctuation">[</span>i<span class="token punctuation">]</span>            loss <span class="token operator">=</span> get_loss<span class="token punctuation">(</span>output<span class="token punctuation">,</span> a_label<span class="token punctuation">)</span>            optimizer<span class="token punctuation">(</span>row<span class="token punctuation">,</span> weights<span class="token punctuation">,</span> loss<span class="token punctuation">,</span> ilr<span class="token punctuation">)</span>            total_loss <span class="token operator">+=</span> loss <span class="token operator">*</span> loss        total_loss <span class="token operator">=</span> sqrt<span class="token punctuation">(</span>total_loss<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第{}轮的loss为：{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>epoch<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> total_loss<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> total_loss <span class="token operator">&lt;</span> <span class="token number">1e-10</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>weights<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人工智能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分层抽象</title>
      <link href="/2021/02/06/ji-suan-ji-ke-xue-ji-chu/fen-ceng-chou-xiang/"/>
      <url>/2021/02/06/ji-suan-ji-ke-xue-ji-chu/fen-ceng-chou-xiang/</url>
      
        <content type="html"><![CDATA[<h1 id="分层抽象"><a href="#分层抽象" class="headerlink" title="分层抽象"></a>分层抽象</h1><p>分层抽象是计算机科学和软件工程的重要思想，是<a href="https://blankspace.blog.csdn.net/article/details/113634653">控制复杂性的重要手段</a>。</p><h1 id="电子计算机的分层抽象"><a href="#电子计算机的分层抽象" class="headerlink" title="电子计算机的分层抽象"></a>电子计算机的分层抽象</h1><p>推荐阅读：<a href="https://blankspace.blog.csdn.net/article/details/113634653">电子计算机的分层抽象</a></p><p>下图是对电子计算机的分层抽象，这里将计算机分为九层：应用程序层、操作系统层、体系结构层、微结构层、逻辑层、数字电路层、模拟电路层、器件层、物理层。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%88%86%E5%B1%82%E6%8A%BD%E8%B1%A1/1.png"></p><p>下面自顶向下地介绍电子计算机的每一层：</p><ol><li>应用软件基于操作系统实现多种多样的应用功能。</li><li>操作系统是和硬件最为密切的程序，既是资源分配器，又控制各着种I/O设备和用户程序的需求。</li><li>体系结构描述的是程序员观点的计算机抽象。</li><li>微结构层将逻辑组件组合在一起以实现体系结构中定义的指令。</li><li>逻辑层关注的是由数字电路层的逻辑门构成的逻辑组件，如加法器等。</li><li>数字电路层关注的是逻辑门，电压被控制为离散的值表示为0和1。</li><li>模拟电路层关注的是器件组合在一起构成的放大器等组件，输入输出都是连续的电压值。</li><li>器件层关注的是晶体管、真空管等电子元器件，这些器件都有明确的外部连接点terminal，建立起了每个terminal上电压与电流之间的关系模型。</li><li>物理层关注的是电子运动，由麦克斯韦方程组、量子力学等支持。</li></ol><h1 id="网络通信的分层抽象"><a href="#网络通信的分层抽象" class="headerlink" title="网络通信的分层抽象"></a>网络通信的分层抽象</h1><p>推荐阅读：<a href="https://blankspace.blog.csdn.net/article/details/105528356">计算机网络核心知识归纳总结</a></p><p>OSI七层参考模型：<br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%88%86%E5%B1%82%E6%8A%BD%E8%B1%A1/2.png"></p><p>TCP/IP五层参考模型：<br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%88%86%E5%B1%82%E6%8A%BD%E8%B1%A1/3.png"></p><p>计算机网络中：</p><ul><li>实体表示任何可发送或接收信息的硬件或软件进程。 </li><li>协议是控制两个对等实体进行通信的规则的集合。 <ul><li>在协议的控制下，两个对等实体间的通信使得本层能够向上一层提供服务。</li><li>要实现本层协议，还需要使用下层所提供的服务。 </li><li>本层的服务用户只能看见服务而无法看见下面的协议。</li><li>下面的协议对上面的服务用户是透明的。 </li><li>协议是“水平的”，即协议是控制对等实体之间通信的规则。</li></ul></li><li>接口定义了下层向上层提供的原语操作和服务。</li><li>服务是“垂直的”，即服务是由下层向上层通过层间接口提供的。</li><li>同一系统相邻两层的实体进行交互的地方，称为服务访问点 SAP(Service Access Point)。</li></ul><p>下面自顶向下地介绍TCP/IP五层模型的每一层：</p><ul><li>应用层：应用层为用于通信的应用程序和用于消息传输的底层网络提供接口，是应用层协议得以存在和网络应用得以实现的地方。</li><li>传输层：传输层为两个不同主机上的进程提供逻辑上的通信，又称为端到端的通信。所谓“逻辑通信”的意思是：运输层之间的通信好像是沿水平方向传送数据，但事实上这两个运输层之间并没有一条水平方向的物理连接。运输层的一个很重要的功能就是复用和分用。应用层不同进程的报文通过不同的端口向下交到运输层，再往下就共用网络层提供的服务。</li><li>网络层：网络层将报文段从发送端主机传送到接收端主机。在发送端，将报文段封装成数据报；在接收端，将报文段传输到传输层。路由器检查每个到达的IP数据报的首部，进行路由选择和转发。</li><li>数据链路层：数据链路层提供帧同步、寻址、流量控制、差错控制、数据和控制信息的识别、透明传输、链路管理等服务。</li><li>物理层：物理层为数据端设备提供传送数据通路、传输数据。</li></ul><h1 id="操作系统的分层抽象"><a href="#操作系统的分层抽象" class="headerlink" title="操作系统的分层抽象"></a>操作系统的分层抽象</h1><p>推荐阅读：<a href="https://blankspace.blog.csdn.net/article/details/128744560">操作系统</a></p><p>基于适当的硬件支持，操作系统可分成许多块。分块后的操作系统能更好地控制计算机并使用计算机的应用程序，在改变系统的内部工作和创建模块操作系统时，开发人员也能有更多自由。因此，操作系统的设计者可以采用自顶向下的方法，可先确定总的功能和特征，再划分成模块。信息隐藏也很重要，因为它在保证程序接口不变和程序执行功能不变的前提下，允许程序员自由实现低层程序。</p><p>操作系统的模块化有许多方法，其中之一就是分层法。所谓分层法，即操作系统分成若干层(级)。最低层是硬件，最高层是<a href="https://blankspace.blog.csdn.net/article/details/113446238">用户接口</a>。而中间的各个操作系统层采用抽象对象类型ADT，包括数据结构和一组可为更高层所调用的程序集，该层可调用更低层的操作。</p><p>分层法构造操作系统的主要优点在于简化了构造和调试。所选的层次要求每层只能调用更低层的功能和服务，大大简化了系统的调试和验证。第一层可先调试而无需考虑系统其他部分，这是因为根据定义，它只使用了基本硬件(假设硬件是正确的)，以便实现功能。一旦第一层调试后，可认为它能正确运行，这样就可调试第二层，如此向上逐层调试。如果在调试某层时发现错误，那么错误可以定位到这一层。</p><p>分层操作系统的每层的实现都只是利用更低层所提供的操作，且只需知道这些操作做了什么，而并不需要知道这些操作是如何实现的。因此，每层要为更高层隐藏一定的数据结构、操作和硬件。</p><p>分层法的主要难点在于合理定义各层。由于每层只能利用更低层的功能，因此有必要仔细规划。</p><p>分层实现的主要问题之一是效率较低。例如，当一个用户程序执行I/O操作时，它执行系统调用并陷入IO层，IO层会调用内存管理层，内存管理层接着调用CPU调度层,最后传递到硬件。在每一层，参数可能会被修改，数据可能需要传递，这些操作都会降低执行效率、增加额外开销。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%88%86%E5%B1%82%E6%8A%BD%E8%B1%A1/4.png"></p><h1 id="软件架构的分层抽象"><a href="#软件架构的分层抽象" class="headerlink" title="软件架构的分层抽象"></a>软件架构的分层抽象</h1><h2 id="三层架构"><a href="#三层架构" class="headerlink" title="三层架构"></a>三层架构</h2><p>三层架构每一层的职能如下：</p><ul><li>表示层：表示层为用户提供了一种交互式操作界面。</li><li>业务逻辑层：业务逻辑层是表示层与数据访问层的桥梁，负责数据的处理和传递，执行复杂业务逻辑。</li><li>数据访问层：数据访问层实现了对数据的增删改查操作。</li></ul><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%88%86%E5%B1%82%E6%8A%BD%E8%B1%A1/5.png"></p><p>比起三层架构，更简单的两层架构是这样的：数据访问和业务逻辑混在一起；用户界面直接调用数据访问；整个系统功能放在同一个项目中实现。</p><p>这是很多不熟悉三层架构的初学者喜欢的模式，它的问题主要是：难以适应需求的变化、不易维护、安全性差。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%88%86%E5%B1%82%E6%8A%BD%E8%B1%A1/6.png"></p><p>而对于三层架构，当数据库或用户界面发生改变时，不需要完全重新开发，只需做简单调整即可。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%88%86%E5%B1%82%E6%8A%BD%E8%B1%A1/7.png"></p><h2 id="三层架构的层间关系"><a href="#三层架构的层间关系" class="headerlink" title="三层架构的层间关系"></a>三层架构的层间关系</h2><p>层间依赖关系：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%88%86%E5%B1%82%E6%8A%BD%E8%B1%A1/8.png"></p><p>层间数据流向：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%88%86%E5%B1%82%E6%8A%BD%E8%B1%A1/9.png"></p><h2 id="三层架构与实体类"><a href="#三层架构与实体类" class="headerlink" title="三层架构与实体类"></a>三层架构与实体类</h2><p>三层架构的层与层之间传递的是实体对象。实体对象是实体类的实例化，是完全受控制的对象。实体对象消除了关系数据和对象之间的差异，具有OOP的基本特征，可以自定义行为。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E5%88%86%E5%B1%82%E6%8A%BD%E8%B1%A1/10.png"></p><p>软件工程实践中，实体类有很多种，例如BO、DAO、DO、DTO、PO、POJO、VO，其中最常经典的是DAO、PO、VO。</p><p>DAO通常和PO结合使用，用于访问数据库，包含了各种数据库的操作方法，这些方法能实现功能；配合VO，提供数据库的CRUD操作。</p><p>PO是在O/R映射的时候出现的概念，如果没有O/R映射，就没有这个概念存在了。PO通常对应数据模型(数据库表)，本身还有部分业务逻辑的处理。可以看成是与数据库中的表相映射的Java对象。最简单的PO就是对应数据库中某个表中的一条记录，多个记录可以用PO的集合。PO中应该不包含任何对数据库的操作。</p><p>VO通常用于业务层之间的数据传递，和PO一样也是仅仅包含数据而已。VO抽象出的业务对象，可以和表对应，也可以不对应，可根据业务的需要自己选择。VO主要对应界面显示的数据对象。对于一个Web页面，或者Swing等的一个界面，用一个VO对象对应整个界面的值。</p><h2 id="三层架构和MVC模式"><a href="#三层架构和MVC模式" class="headerlink" title="三层架构和MVC模式"></a>三层架构和MVC模式</h2><ul><li>MVC是一种设计模式，我们可以用它来创建在域对象和UI表示层对象之间的区分。</li><li>同样是架构级别的，相同的地方在于二者都有一个表现层，但是他们不同的地方在于其他的两个层。</li><li>三层架构中没有定义Controller的概念，这是两者最不同的地方。而MVC也没有把业务的逻辑访问看成两个层，这是采用三层架构或MVC搭建程序最主要的区别。</li><li>三层架构中也提到了Model，但是三层架构中Model的概念与MVC中Model的概念是不一样的。三层架构中典型的Model层是以实体类构成的；而MVC里Model则是由业务逻辑与访问数据组成的。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机科学基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电子计算机的分层抽象</title>
      <link href="/2021/02/04/ji-suan-ji-ke-xue-ji-chu/dian-zi-ji-suan-ji-de-fen-ceng-chou-xiang/"/>
      <url>/2021/02/04/ji-suan-ji-ke-xue-ji-chu/dian-zi-ji-suan-ji-de-fen-ceng-chou-xiang/</url>
      
        <content type="html"><![CDATA[<h1 id="控制复杂性的方法"><a href="#控制复杂性的方法" class="headerlink" title="控制复杂性的方法"></a>控制复杂性的方法</h1><p>电子计算机有着比较复杂的结构，而<a href="https://blankspace.blog.csdn.net/article/details/101912284">控制复杂性</a>的关键做法之一正是抽象，即隐蔽不需要的细节。</p><p>补充~控制复杂性的方法：</p><ol><li><p>抽象（abstraction）<br>抽象是控制复杂性的关键技术，它的目的在于隐蔽不需要的细节。<br>一个系统可以从多个不同层面抽象，抽象到何种层次合适由问题本身决定，需要具体问题具体分析。<br>值得指出的是，当处于某个抽象层次的时候，最好是对当前抽象层次之上和之下都有一定的了解。计算机科学家不可能在不理解程序运行平台体系系结构的情况下充分优化代码；器件工程师也不可能在不了解晶体管具体用途的情况下在设计晶体管的时候作出明智的选择。</p></li><li><p>约束（discipline）<br>约束是对设计选择的一种内在限制，通过这种限制可以更有效地在更高地抽象层次上工作。<br> 部件可互换、可由不同地方生产，但每个合格的组件都被限定为一个误差允许范围内的标准集合，从而可以简单快速的组件系统，降低复杂度。</p></li><li><p>三Y原则 </p><ol><li>层次化（hierarchy）<br> 将系统划分为若干模块，然后更进一步划分每个模块直到这些模块可以很容易理解。<br> 这种模块被组件化，可以规则性地描述。</li><li>模块化（modularity）<br> 所有模块定义好的功能和接口，以便它们之间可以很容易地相互连接而不是会产生意想不到的副作用。<br> 每个模块都需要有明确的功能和接口，且不对其他模块产生影响。<br> 模块之间的耦合通过接口进行，而非通过某种具体实现。</li><li>规整化（regularity）<br>     在模块之间寻求一致，通用的模块可以重新使用多次，以减少不同模块的数量。<br>     此外，做到了规整化，互换部件也是可实现的好方法。</li></ol></li></ol><h1 id="电子计算机分层抽象"><a href="#电子计算机分层抽象" class="headerlink" title="电子计算机分层抽象"></a>电子计算机分层抽象</h1><p>下图是对电子计算机的分层抽象，这里将计算机分为九层：应用程序层、操作系统层、体系结构层、微结构层、逻辑层、数字电路层、模拟电路层、器件层、物理层。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%94%B5%E5%AD%90%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%88%86%E5%B1%82%E6%8A%BD%E8%B1%A1/1.png" alt="电子计算机的分层抽象"></p><p>下面<strong>自底向上</strong>地简单介绍一下各层：</p><ol><li>物理层关注的是电子运动，由麦克斯韦方程组、量子力学等支持。</li><li>器件层关注的是晶体管、真空管等电子元器件，这些器件都有明确的外部连接点terminal，建立起了每个terminal上电压与电流之间的关系模型。</li><li>模拟电路层关注的是器件组合在一起构成的放大器等组件，输入输出都是连续的电压值。</li><li>数字电路层关注的是逻辑门，电压被控制为离散的值表示为0和1。</li><li>逻辑层关注的是由数字电路层的逻辑门构成的逻辑组件，如加法器等。</li><li>微结构层将逻辑组件组合在一起以实现体系结构中定义的指令。</li><li>体系结构描述的是程序员观点的计算机抽象。</li><li>操作系统是和硬件最为密切的程序，既是资源分配器，又控制各着种I/O设备和用户程序的需求。</li><li>应用软件基于操作系统实现多种多样的应用功能。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机科学基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进制、进制转换和数据运算</title>
      <link href="/2021/02/04/ji-suan-ji-ke-xue-ji-chu/jin-zhi-jin-zhi-zhuan-huan-he-shu-ju-yun-suan/"/>
      <url>/2021/02/04/ji-suan-ji-ke-xue-ji-chu/jin-zhi-jin-zhi-zhuan-huan-he-shu-ju-yun-suan/</url>
      
        <content type="html"><![CDATA[<h1 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h1><h2 id="进制规则"><a href="#进制规则" class="headerlink" title="进制规则"></a>进制规则</h2><p>我们可以用这样的方式来表示一个十进制数：将每个阿拉伯数字乘以一个以该数字所处位置为指数，以$10$为底数的幂之和的形式。例如$123$可表示为$1\times{10}^{2}+2\times{10}^{1}+3\times{10}^{0}$ 这样的形式。</p><p>与之相似的，对二进制数来说，也可表示成每个二进制数码乘以一个以该数字所处位置为指数，以$2$ 为底数的幂之和的形式。  </p><p>一般说来，任何一个正整数$R$都可以被选来作为一个数制系统的基数。至于负整数$-R$，算法题中可能会人为定义这样的数制系统。</p><p>例如当$R=7$时，所需用到的数码是$0,1,2,3,4,5,6$。如果作为基数的数绝对值超过$10$，则为了表示这些数码，通常使用英文字母来表示那些大于$9$的数码。例如对$16$进制数来说，用$A$表示$10$，用$B$表示$11$，用$C$表示$12$，以此类推。</p><h2 id="二的幂次"><a href="#二的幂次" class="headerlink" title="二的幂次"></a>二的幂次</h2><p>下面列出$2$的常见幂次：</p><ul><li>${2}^{0}=1$</li><li>${2}^{1}=2$</li><li>${2}^{2}=4$</li><li>${2}^{3}=8$</li><li>${2}^{4}=16$</li><li>${2}^{5}=32$</li><li>${2}^{6}=64$</li><li>${2}^{7}=128$</li><li>${2}^{8}=256$</li><li>${2}^{9}=512$</li><li>${2}^{10}=1024$</li><li>${2}^{11}=2048$</li><li>${2}^{12}=4096$</li><li>${2}^{13}=8192$</li><li>${2}^{14}=16384$</li><li>${2}^{15}=32768$</li><li>${2}^{16}=65536$</li><li>$……$</li><li>${2}^{31}=2147483648$</li><li>${2}^{32}=4294967296$</li><li>$……$</li><li>${2}^{63}=9223372036854775808$</li><li>${2}^{64}=18446744073709551616$</li><li>$……$</li></ul><h2 id="有符号数、无符号数"><a href="#有符号数、无符号数" class="headerlink" title="有符号数、无符号数"></a>有符号数、无符号数</h2><p>有符号数是针对二进制来讲的，其最高位作为符号位，$0$代表$+$，$1$代表$-$，其余数位用作数值位，代表数值。</p><p>计算机中的有符号数用二进制表示，其符号也只用$0$或$1$表示。一般用最高有效位(MSB)来表示数的符号，正数用0表示，负数用1表示。</p><p>无符号数是相对于有符号数而言的，其整个机器字长的全部二进制位均表示数值位，相当于数的绝对值。</p><p>实际的数值总位数只能是$2$的整数幂次，一般是$8$、$16$、$32$、$64$，其对应的有符号数数值范围分别是$-({2}^{7}-1)\sim({2}^{7}-1)$、$-({2}^{15}-1)\sim({2}^{15}-1)$、$-({2}^{31}-1)\sim({2}^{31}-1)$、$-({2}^{63}-1)\sim({2}^{63}-1)$，无符号数数值范围分别是$-({2}^{8}-1)\sim({2}^{8}-1)$、$-({2}^{16}-1)\sim({2}^{16}-1)$、$-({2}^{32}-1)\sim({2}^{32}-1)$、$-({2}^{64}-1)\sim({2}^{64}-1)$。</p><h2 id="原码、反码、补码"><a href="#原码、反码、补码" class="headerlink" title="原码、反码、补码"></a>原码、反码、补码</h2><p>原码是一种计算机中对数字的二进制定点表示方法。原码表示法的数值最高一位是符号位，若数值为正数则该位为$0$，若数值为负数则该位为$1$，数值$0$有$+0$和$-0$两种表示；其余位表示数值的大小。</p><p>反码通常是用来由原码求补码或者由补码求原码的过渡码。原码为正数时，反码跟原码相同；原码为负数时，反码就是原码符号位保留后，其他位按位取反。<br>反码是数值存储的一种，多应用于系统环境设置，如Linux平台的目录和文件的默认权限的设置umask，就是使用反码原理。</p><p>正整数的补码是其二进制表示，与原码相同；负整数的补码是其原码除符号位外的所有位取反后加1的结果。补码涉及“怪异数”问题，详见下节介绍。</p><p>补码是计算机把减法运算转化为加法运算的关键编码。在计算机系统中，数值一律用补码来表示和存储，有如下两个原因：</p><ul><li>可以将符号位和数值域统一处理</li><li>加法和减法也可以统一处理（详见下文）。</li></ul><p>移码通常用于表示浮点数的阶码。移码的表示形式与补码相似，只是其符号位用$1$表示正数，用$0$表示负数，数值部分与补码相同。</p><h2 id="二进制“怪异数”"><a href="#二进制“怪异数”" class="headerlink" title="二进制“怪异数”"></a>二进制“怪异数”</h2><p>根据上文所述，无符号K位二进制取值范围：$[0, 2^K-1]$，有符号的二进制补码取值范围：$[-2^{K-1}, 2^{K-1}-1]$。</p><p>为什么不是$[-2^{K-1}+1, 2^{K-1}-1]$呢？为什么能取到$-2^{K-1}$呢？<br>其实这个$-2^{K-1}$被称为“怪异数”，也确实很诡异。</p><p>其实如果精通原理，也不难理解：<br>以$4$位二进制数为例，取值范围$[-8,7]$<br>$-8$怎么表示？<br>$-8_{10}=1000_{2}$</p><p>补码$1000-1=0111$得到补码，按位取反得到$1000$，还是这个数，所以用它表示$-8$。</p><p>怪异数的存在其实还化解了$±0$的问题。<br>因为按理说，$1000$表示$-0$，$0000$表示$+0$，但这就很离谱，所以让$1000$表示$-8$是合理的。</p><h2 id="比特"><a href="#比特" class="headerlink" title="比特"></a>比特</h2><p>计算机的组织在很大程度上取决于它如何表示数字、字符和控制信息。</p><p>数字计算机中最基本的信息单位称为<strong>比特</strong>(bit)，是二进制数字的缩写。具体而言，比特无非是计算机电路中“开”或“关”(或者“高”或“低”)的状态。1964年，IBM System/360大型计算机的设计者制定了使用8位组作为可寻址计算机存储基本单元的约定。他们称这个8位的集合为一个<strong>字节</strong>。计算机字由两个或多个相邻字节组成，这些字节有时被寻址并且几乎总是被共同操作。<strong>字</strong>大小表示特定体系结构最有效处理的数据大小。字可以是16位、32位、64位或在计算机组织上下文中有意义的任何其他大小，甚至不是8的倍数也可以。一个8位字节可以分为两个4位的一半，称为<strong>半字节</strong>。因为一个字节的每一位在位置编号系统中都有一个值，所以包含最小值二进制数字的半字节称为<strong>低位半字节</strong>，另一半称为<strong>高位半字节</strong>。</p><h1 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h1><h2 id="整数进制转换"><a href="#整数进制转换" class="headerlink" title="整数进制转换"></a>整数进制转换</h2><h3 id="十进制数转X进制数"><a href="#十进制数转X进制数" class="headerlink" title="十进制数转X进制数"></a>十进制数转X进制数</h3><p>以二进制数为例：<br>$$22_{10}=1\times2^4+1\times2^2+1\times2^1=10110_{2}$$</p><p>以三进制为例：<br>$$32_{10}=1\times3^3+1\times3^1+2\times3^0=1012_{3}$$</p><p>一个比较直观有效的方式是列出从$X^0$到$X^m$的所有十进制数据，从小于当前的最大值开始取，特别注意的是最低位对应的是$X^0$而不是$X^1$。</p><p>八进制和十六进制既可以单独算也可以先算二进制再转换。</p><h3 id="X进制数转十进制数"><a href="#X进制数转十进制数" class="headerlink" title="X进制数转十进制数"></a>X进制数转十进制数</h3><p>以二进制数为例：<br>$$10111011_{2}=1\times2^7+1\times2^5+1\times2^4+1\times2^3+1\times2^1+1\times2^0=187_{10}$$</p><p>以十六进制数为例：<br>$$54D_{16}=5\times16^2+4\times16^1+13\times16^0=1357_{10}$$</p><p>求解的关键在于数清楚数位，$X$进制第$m$位对应$X^{m-1}$，将各个数位加权累加起来，就是十进制。</p><p>例如<a href="https://www.luogu.com.cn/problem/P2084">洛谷 P2084 进制转换</a>：</p><blockquote><p>请你编程实现，将一个$M$进制的数$N$转换成十进制表示的式子。</p></blockquote><p>实现代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> radix <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> num <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        scanner<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">StringBuilder</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> temp <span class="token operator">=</span> num<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">48</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>temp <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                result<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"+"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>radix<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"^"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="X进制转Y进制"><a href="#X进制转Y进制" class="headerlink" title="X进制转Y进制"></a>X进制转Y进制</h3><p>一个比较笨的方法就是以十进制为桥梁，$X$进制→十进制→$Y$进制。</p><p>当然，复杂的进制转化一般只有算法题才会涉及。例如<a href="https://www.luogu.com.cn/problem/P1143">洛谷 P1143 进制转换</a>：</p><blockquote><p>请你编一程序实现两种不同进制之间的数据转换。<br>输入数据共三行，第一行是一个正整数，表示需要转换的数的进制$n(2≤n≤16)$，第二行是一个n进制数，若$n&gt;10$则用大写字母$A-F$表示数码$10-15$，并且该$n$进制数对应的十进制的值不超过$1000000000$，第三行也是一个正整数，表示转换之后的数的进制$m(2≤m≤16)$。</p></blockquote><p>实现代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> origin_radix <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> num <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> now_radix <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        scanner<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> origin_radix<span class="token punctuation">)</span><span class="token punctuation">,</span> now_radix<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="负进制"><a href="#负进制" class="headerlink" title="负进制"></a>负进制</h3><p>常用的一般只有二进制、十进制、十六进制。负进制一般都是人为定义的。例如<a href="https://www.luogu.com.cn/problem/P1017">洛谷 P1017 [NOIP2000 提高组] 进制转换</a>：</p><blockquote><p>我们可以用这样的方式来表示一个十进制数：将每个阿拉伯数字乘以一个以该数字所处位置为指数，以$10$为底数的幂之和的形式。例如$123$可表示为$1\times{10}^{2}+2\times{10}^{1}+3\times{10}^{0}$ 这样的形式。<br>与之相似的，对二进制数来说，也可表示成每个二进制数码乘以一个以该数字所处位置为指数，以$2$ 为底数的幂之和的形式。<br>一般说来，任何一个正整数$R$或一个负整数$-R$都可以被选来作为一个数制系统的基数。如果是以$R$或$-R$为基数，则需要用到的数码为$0,1,….R-1$。<br>例如当$R=7$时，所需用到的数码是$0,1,2,3,4,5,6$，这与其是$R$或$-R$无关。如果作为基数的数绝对值超过$10$，则为了表示这些数码，通常使用英文字母来表示那些大于$9$的数码。例如对$16$进制数来说，用$A$表示$10$，用$B$表示$11$，用$C$表示$12$，以此类推。<br>在负进制数中是用$-R$作为基数，例如$(-15)<em>{2}$相当于$(110001)</em>{-2}$，并且它可以被表示为 $2$ 的幂级数的和数：$110001=1\times (-2)^5+1\times (-2)^4+0\times (-2)^3+0\times (-2)^2+0\times (-2)^1 +1\times (-2)^0$</p></blockquote><p>实现代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">StringBuilder</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">,</span> <span class="token keyword">int</span> radix<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>num<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> remainder <span class="token operator">=</span> num <span class="token operator">%</span> radix<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>remainder <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            remainder <span class="token operator">-=</span> radix<span class="token punctuation">;</span>            num <span class="token operator">+=</span> radix<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>remainder <span class="token operator">&gt;=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            remainder <span class="token operator">+=</span> <span class="token char">'A'</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            remainder <span class="token operator">+=</span> <span class="token char">'0'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token function">toString</span><span class="token punctuation">(</span>num<span class="token operator">/</span>radix<span class="token punctuation">,</span> radix<span class="token punctuation">)</span><span class="token punctuation">;</span>        result<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>remainder<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> origin_num <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> radix <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        scanner<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        result<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>origin_num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">toString</span><span class="token punctuation">(</span>origin_num<span class="token punctuation">,</span> radix<span class="token punctuation">)</span><span class="token punctuation">;</span>        result<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"(base"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>radix<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">")"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="小数进制转换"><a href="#小数进制转换" class="headerlink" title="小数进制转换"></a>小数进制转换</h2><p>以二进制为例，先说二进制小数转十进制小数，再说十进制小数转二进制小数。</p><p>关于二进制转十进制，定点小数可以用负指数理解，如$2^{-2}=0.25$，加起来就行。</p><p>例如：<br>$$0.0101_{2}=1\times2^{-2}+1\times2^{-4}=0.3125_{10}$$</p><p>关于十进制转二进制，小数部分可以×2再取整。</p><p>例如：<br>$$0.8125×2=1.625\0.625×2=1.25\0.25×2=0.5\0.5×2=1$$</p><p>即<br>$$0.8125_{10}=0.1101_{2}$$</p><h1 id="数据运算"><a href="#数据运算" class="headerlink" title="数据运算"></a>数据运算</h1><h2 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h2><p><strong>逻辑运算</strong>是指那些应用于模式中的一个二进制位，或在两个模式中相应的两个二进制位的相同基本运算。</p><h3 id="位层次上的逻辑运算"><a href="#位层次上的逻辑运算" class="headerlink" title="位层次上的逻辑运算"></a>位层次上的逻辑运算</h3><ul><li>非运算</li><li>与运算</li><li>或运算</li><li>异或运算</li></ul><h3 id="模式层次上的逻辑运算"><a href="#模式层次上的逻辑运算" class="headerlink" title="模式层次上的逻辑运算"></a>模式层次上的逻辑运算</h3><p>上述四个运算可以被应用到$n$位模式。</p><ul><li>置位操作：对应位或$1$，其余位或$0$。</li><li>复位操作：对应位与$0$，其余位与$1$。</li><li>反转操作：对应位异或$1$，其余位异或$0$。</li></ul><h2 id="移位运算"><a href="#移位运算" class="headerlink" title="移位运算"></a>移位运算</h2><p>移动模式中的位，改变位的位置。</p><h3 id="逻辑移位运算"><a href="#逻辑移位运算" class="headerlink" title="逻辑移位运算"></a>逻辑移位运算</h3><p>应用于无符号整数。</p><ul><li>逻辑右移：最右位丢弃，最左位填$0$。</li><li>逻辑左移：最左位丢弃，最右位填$0$。</li><li>循环右移：最右位被移动，成为最左位。</li><li>循环左移：最左位被移动，成为最右位。</li></ul><h3 id="算术移位运算"><a href="#算术移位运算" class="headerlink" title="算术移位运算"></a>算术移位运算</h3><p>应用于以补码表示的带符号整数。</p><ul><li>算术右移：保留符号位，并且复制符号位，放入相邻的右边的位中。</li><li>算术左移：丢弃符号位，接受右边的位为符号位，与逻辑左移相同；如果新的符号位与原先相同，运算成功；否则，发生上溢或下溢。</li></ul><h3 id="逻辑移位与算术移位的区别"><a href="#逻辑移位与算术移位的区别" class="headerlink" title="逻辑移位与算术移位的区别"></a>逻辑移位与算术移位的区别</h3><p>二者的左移是相同的，不同体现在算术右移与逻辑右移。</p><ul><li>算术右移：保留并复制符号位。</li><li>逻辑右移：最左位填$0$。</li></ul><h2 id="算术运算"><a href="#算术运算" class="headerlink" title="算术运算"></a>算术运算</h2><p>适用于整数和浮点数的加、减、乘、除。</p><p>请注意：这里不是<code>算数运算</code>，而是算术运算。</p><p>对于二进制补码整数的加法进位，最左边一列的进位被舍去，发生溢出。想要避免溢出，获得准确解，就应该扩增位数或使用双符号位表示法。</p><p>不同指数的浮点数的加法调整，应该比较阶码，如果不同，则将较小的数的尾数移位，使阶码对齐。</p><p>算法题中可能涉及非常见进制的算术运算，例如<a href="https://www.luogu.com.cn/problem/P1604">洛谷 P1604 B进制星球</a>：</p><blockquote><p>话说有一天，小$Z$乘坐宇宙飞船，飞到一个美丽的星球。因为历史的原因，科技在这个美丽的星球上并不很发达，星球上人们普遍采用$B$（$2≤B≤36$）进制计数。星球上的人们用美味的食物招待了小$Z$，作为回报，小$Z$希望送一个能够完成$B$进制加法的计算器给他们。 现在小$Z$希望你可以帮助他，编写实现$B$进制加法的程序。</p></blockquote><p>实现代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> radix <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>sc<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sc<span class="token punctuation">.</span><span class="token function">nextBigInteger</span><span class="token punctuation">(</span>radix<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>sc<span class="token punctuation">.</span><span class="token function">nextBigInteger</span><span class="token punctuation">(</span>radix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>radix<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="加法算术运算溢出问题"><a href="#加法算术运算溢出问题" class="headerlink" title="加法算术运算溢出问题"></a>加法算术运算溢出问题</h3><p>Java语句<code>System.out.println(Integer.MAX_VALUE+1);</code>获得的输出是<code>-2147483648</code>，显然是遇到了溢出问题。</p><p>下面用二进制的基础知识解析这一过程。</p><p>首先明确<code>Integer.MAX_VALUE</code>的值是$2^{31}-1$，也就是$+2147483647$。</p><table><thead><tr><th>0</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th></tr></thead></table><p>该数值是正数，因此原码、反码、补码相同。</p><p>其反码是：</p><table><thead><tr><th>0</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th></tr></thead></table><p>其补码是：</p><table><thead><tr><th>0</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th></tr></thead></table><p>使其补码与$1$相加得到以下补码：</p><table><thead><tr><th>1</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th><th>0</th></tr></thead></table><p>显然，这是上文提到过的“怪异数”，其真实值为$-2^{31}=-2147483648$。</p><h3 id="二进制加减法不用原码的原因"><a href="#二进制加减法不用原码的原因" class="headerlink" title="二进制加减法不用原码的原因"></a>二进制加减法不用原码的原因</h3><p>原因一：不易确定加法还是减法。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E8%BF%9B%E5%88%B6%E3%80%81%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2%E5%92%8C%E6%95%B0%E6%8D%AE%E8%BF%90%E7%AE%97/1.png"></p><p>原因二：最终结果的符号不易确定。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/%E8%BF%9B%E5%88%B6%E3%80%81%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2%E5%92%8C%E6%95%B0%E6%8D%AE%E8%BF%90%E7%AE%97/2.png"></p><h3 id="加法器的构建"><a href="#加法器的构建" class="headerlink" title="加法器的构建"></a>加法器的构建</h3><ul><li><a href="https://blankspace.blog.csdn.net/article/details/102710189">Logisim构建四位行波进位加法/减法器</a></li><li><a href="https://blankspace.blog.csdn.net/article/details/102709660">Logisim构建四位行波进位加法器</a></li><li><a href="https://blankspace.blog.csdn.net/article/details/102709061">Logisim构建全加器</a></li></ul><h3 id="计算机不需要整数减法器的原因"><a href="#计算机不需要整数减法器的原因" class="headerlink" title="计算机不需要整数减法器的原因"></a>计算机不需要整数减法器的原因</h3><p>如上探讨，我们明确了二进制加减法不用原码的原因，也清楚了二进制原码运算对于加减法是比较不好直接确定的，解决方法是什么呢？</p><p>其实大家所熟知的补码正是为了<strong>消灭减法</strong>产生的。<br>理由是：正数的补码正是自身，而负数的补码是一个减法的差，所以求一个数的补码正是一次减法过程。</p><p>基于补码的机制，减法可以转化为加法，计算机只需拥有加法器，不许要减法器。</p><h3 id="逻辑运算和算术运算的区别"><a href="#逻辑运算和算术运算的区别" class="headerlink" title="逻辑运算和算术运算的区别"></a>逻辑运算和算术运算的区别</h3><ul><li>逻辑运算用于二进制位和模式，类型包括与、或、非、异或等。</li><li>算术运算用于整数和浮点数，类型包括加、减、乘、除等。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机科学基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习</title>
      <link href="/2020/09/26/ji-suan-ji-ke-xue-ji-chu/ji-qi-xue-xi/"/>
      <url>/2020/09/26/ji-suan-ji-ke-xue-ji-chu/ji-qi-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="机器学习常用术语"><a href="#机器学习常用术语" class="headerlink" title="机器学习常用术语"></a>机器学习常用术语</h1><ul><li><strong>观察值</strong>（<em>observation</em>）：我们观察到的单个单位——例如，一个人、一次销售或一条记录。</li><li><strong>学习算法</strong>（<em>learning algorithm</em>）：用来学习模型的最佳参数的算法——例如，线性回归、朴素贝叶斯或决策树。</li><li><strong>模型</strong>（<em>model</em>）：学习算法的输出。学习算法训练出来的模型可以用来做预测。</li><li><strong>参数</strong>（<em>parameter</em>）：一个模型在训练过程中学到的权重或系数。</li><li><strong>超参数</strong>（<em>hyperparameter</em>）：一个学习算法在训练前需要设置的一组参数。</li><li><strong>性能</strong>（<em>performance</em>）：用来评估模型的指标。</li><li><strong>损失</strong>（<em>loss</em>）：一个需要在训练中最小化或最大化的指标。</li><li><strong>训练</strong>（<em>train</em>）：使用类似梯度下降之类的数学方法将一个学习算法应用到数据上。</li><li><strong>拟合</strong>（<em>fit</em>）：使用分析方法将一个机器学习算法应用到数据上。</li><li><strong>数据</strong>（<em>data</em>）：一组观察值。</li></ul><p>更多术语：<a href="https://developers.google.cn/machine-learning/glossary?hl=zh-cn">轻戳这里</a></p><h1 id="机器学习处理不均衡分类"><a href="#机器学习处理不均衡分类" class="headerlink" title="机器学习处理不均衡分类"></a>机器学习处理不均衡分类</h1><p>在真实的场景中，不均衡的分类到处可见，比如大多数访客都不会单击“购买”按钮，大多数用户都不会付费成为“VIP”，有些癌症或遗传病也是十分罕见的。因此，处理不均衡分类就称为机器学习的一个常见任务。</p><p>对此，最好的解决方案是收集更多的观观察值——尤其是占少数的分类的观察值。可惜的是，这可能很难做到，所以我们需要求助于其他手段。</p><p>次优的解决方案是选择更适用于评估不均衡数据的标准。准确率常常被作为评估模型性能的标准，但用准确率来评估不均衡分类是不合适的。例如，如果样本中只有0.5%的人得了某种罕见的癌症，那么即使我们的模型预测没有人会得这种癌症，准确率也只能达到99.5%。很明显，这也不是我们想要的。一些更有效的评估标准，如混淆矩阵、精确度、召回率、F1值以及ROC曲线都是值得学习的。</p><p>第三个解决方案是在一些分类器模型中使用分类权重参数，这样就能针对不均衡的分类来调整算法。scikit-learn的很多分类器都有class_weight参数，便于使用。</p><p>第四个方案和第五个方案是相关的：下采样和上采样。在下采样中，需要从占多数的分类中创建一个子集，其观察之数量与占少数的分类的观察值数量相等。在上采样中，采用有放回的方式对占少数的分类重复采样，一次创建与占多数的分类有相同数量观察值的数据集。到底是下采样还是上采样，需要根据实际场景做决定。通常情况下，应该同时尝试两种方法，看看哪种效果更好。</p><h1 id="机器学习中的缺失值及其填充处理"><a href="#机器学习中的缺失值及其填充处理" class="headerlink" title="机器学习中的缺失值及其填充处理"></a>机器学习中的缺失值及其填充处理</h1><p>大多数机器学习算法不允许目标值或特征数组中存在缺失值。因此，不能简单的忽略数据中的缺失值，而是要在数据预处理阶段解决这个问题。</p><p>最简单的解决方法是删除所有含其缺失值的观察值，用Numpy或Pandas很容易实现。</p><p>即便如此，删除带缺失值的观察值也是一件令人心痛的决定，因为这样做会让算法丢失那些观察值中那些非缺失值的信息，所以删除观察值只能作为最终别无他法时不得已的选择。</p><p>还有一点很重要，删除观察值可能会在数据中引入偏差，这主要由缺失值的成因决定。</p><p>缺失值一共有三种类型：</p><ul><li>完全随机缺失（MCAR）<br>数据缺失的可能性与任何其他东西无关。<br>例如，某个接受问卷调查的人会在回答问题前先掷一个骰子，如果掷出了6，那她就跳过那个问题不做回答。</li><li>随机缺失（MAR）<br>数据缺失的可能性不是完全随机的，与已经存在的其他特征有关。<br>例如，在一次问卷调查中会问及性别和薪资水平，那么接受调查的女性更可能会跳过薪资的问题，但她们选择是否作答要看我们是否已经得知其性别信息。</li><li>完全非随机缺失（MNAR）<br>数据缺失的可能性完全是非随机的，并且与未在特征中反映出的信息有关。<br>例如，一个问卷调查中会问及薪资水平，那么接受问卷调查的女性更可能会跳过薪资的问题，但是我们的数据中没有关于性别的特征。</li></ul><p>如果观察值是MCAR或者MAR，那么有时候删除它们是可以接受的。<br>如果它们是MNAR，那么数据缺失本身其实就是一个信息。删除MNAR观察值会导致数据产生偏差，因为这些观察值是由未观察到的系统效应产生的。</p><p>接下来说说缺失值的填充处理策略，主要有两种，各有利弊。</p><p>首先，可以使用机器学习来预测缺失值。为了达到目的，可以将带有缺失值的特征当作一个目标向量，然后使用剩余的特征来预测缺失值。虽然可以使用各种机器学习算法来做预测，但是流行的选择是KNN，作为一种机器学习算法，KNN使用k个最临近的观察值（根据某种距离度量算法计算得到）来预测缺失值。KNN的不足是，为了知道哪些观察值距离缺失值最近，需要计算每一个观察值与缺失值之间的距离。对于小数据集，这样处理没有问题，但是如果数据集中有成千上万的观察值，计算量将成为一个很严重的问题。</p><p>一个比较容易扩展到大数据集的方案是使用平均值来代替缺失值。尽管这样做的效果没有使用KNN来得好，但是“平均值填充策略”很容易扩展到包含成千上万观察值的大数据集。</p><p>最后说一下，如果要采用填充策略，最好是创建一个二元特征来表明该观察值是否包含填充值。</p><h1 id="机器学习中的异常值的识别和处理"><a href="#机器学习中的异常值的识别和处理" class="headerlink" title="机器学习中的异常值的识别和处理"></a>机器学习中的异常值的识别和处理</h1><p>用于机器学习的数据难免有异常值的存在，这就需要我们识别并处理异常值。</p><p>可惜，并没有一个通用的识别异常值的解决方案，每种方法都有自己的优势和不足，尝试综合使用多种技术（如基于EllipticEnvelope和基于IQR的识别）并从整体上来看结果。</p><p>对于被判定为异常值的数据，我们不妨也关注一下。比如我们的数据集是一个关于房子的数据集，其中一个特征是房间数。此时，如果一个房子因为拥有100+个房间被判定为异常值，那我们可以问问自己：这个数据真的是异常数据，还是它本质是一个旅馆呢？</p><p>再说说处理异常值，它和识别异常值一样，没有什么绝对的准则。我们可以从两个角度（方面）来考虑对异常值的处理：<br>第一，要弄清楚是什么让它们成为异常值的。如果你认为它们是错误的观察值，比如他们来自一个坏掉的传感器或者是被记错了的值，那么就要丢弃他们或者使用NaN来替换异常值，因为这些数据无法被我们信任。但是，如果我们认为这些异常值时极端值（比如一个超级豪宅有100间卧室），那么把它们标记为异常值或者对它们的值进行转换是比较合适的。<br>第二，应该基于机器学习的目标来处理异常值。例如，如果想要基于房屋的特征来预测其价格，那么可以合理的假设有100间卧室的大宅子的价格是由不同于普通家庭住宅的特征驱动的。此外，如果使用一个在线住房贷款的Web应用的部分数据来训练一个模型，那么就要假设潜在用户中不存在想要买一栋有几百间卧室的豪宅的亿万富翁。</p><p>所以，处理异常值，首先要想想为什么这个（些）数据是异常值，然后对于数据要有一个最终的目标。最重要的是，要记住“决定不处理异常值”本身就是一个有潜在影响的决定。（想想Java的异常处理吧，发现异常全都不处理的话要异常处理体系干嘛呢？）</p><p>另外，如果数据中有异常值，那么采用标准化方法做缩放就不太合适了，因为平均值和方差受异常值的影响很大。这种情况下，需要针对异常值使用一个鲁棒性更高的缩放方法，比如RobustScaler。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人工智能 </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件过程</title>
      <link href="/2020/09/16/ruan-jian-gong-cheng/ruan-jian-guo-cheng/"/>
      <url>/2020/09/16/ruan-jian-gong-cheng/ruan-jian-guo-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="软件工程"><a href="#软件工程" class="headerlink" title="软件工程"></a>软件工程</h1><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><p>你知道什么是软件吗？</p><p><strong>软件（IEEE）</strong>：计算机程序、规程，以及与运行计算机系统可能需要的相关文档和数据。</p><ul><li><strong>计算机程序</strong>：计算机设备可接受的一系列指令和说明，它用 来让计算机执行一个运算或操作。</li><li><strong>计算机数据</strong>：事实、概念或指令的一种结构化表示，能够被计算机设备所接受、理解或处理。数据可以是外部的（以计算机可读形式存在）或内置在计算机设备中。</li><li><strong>计算机程序文档</strong>：包括计算机程序列表和可读的打印输出物 ，包括需求、设计、和其他有关的计算机程序细节，以及使用和维护程序的说明。</li></ul><h2 id="软件的特点"><a href="#软件的特点" class="headerlink" title="软件的特点"></a>软件的特点</h2><ul><li>软件是<strong>设计开发</strong>的，而不是传统意义上生产制造的。</li><li>软件不会磨损，而会<strong>退化</strong>。</li><li>软件是根据实际的客户<strong>需求</strong>定制的。</li></ul><p><img src="/../../images/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B/1.png"></p><p><img src="/../../images/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B/2.jpg"></p><h2 id="软件分类"><a href="#软件分类" class="headerlink" title="软件分类"></a>软件分类</h2><ul><li><strong>系统软件</strong>：一套服务于其他程序的程序。</li><li><strong>应用软件</strong>：一些可以满足特定业务需要的独立应用程序。</li><li><strong>工程/科学软件</strong>：聚焦在科学和工程领域的应用软件。</li><li><strong>嵌入式软件</strong>：存在于某个产品或者系统中，可实现和控制面向最终使用者 和系统本身的特性和功能。</li><li><strong>产品线软件</strong>：为多个不同用户的使用提供特定功能，关注有限的特定市场 或者大众消费品市场。</li><li><strong>Web应用软件</strong>：基于Web应用的应用软件。</li><li><strong>人工智能软件</strong>：利用非数值算法解决计算和直接分析无法解决的复杂问题。</li></ul><h2 id="软件工程-1"><a href="#软件工程-1" class="headerlink" title="软件工程"></a>软件工程</h2><h3 id="软件过程"><a href="#软件过程" class="headerlink" title="软件过程"></a>软件过程</h3><p><strong>软件过程 (IEEE）</strong>：将系统化、规范的、可量化的方法应用于软件的开发、运行和维护，即将工程化方法应用于软件。</p><p><img src="/../../images/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B/3.png"></p><h3 id="软件工程是一种层次化技术"><a href="#软件工程是一种层次化技术" class="headerlink" title="软件工程是一种层次化技术"></a>软件工程是一种层次化技术</h3><ul><li><strong>质量关注点</strong>：软件工程的<strong>根基</strong>，任何工程方法必须以组织对质量的承诺为基础。</li><li><strong>过程</strong>：软件工程的<strong>基础</strong>，定义了一个框架，将各个技术层次结合在一起，并实施合理地、及时地开发计算机软件，建立了一个环境以便于技术方法的采用、工作产品的产生、里程碑的建立、质量的保证等。</li><li><strong>方法</strong>：为建造软件提供<strong>技术上的解决方法</strong>。</li><li><strong>工具</strong>：为过程和方法提供自动化和半自动化的支持，即软件开发的<strong>支撑系统</strong>。</li></ul><p><img src="/../../images/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B/4.png"></p><h1 id="过程综述"><a href="#过程综述" class="headerlink" title="过程综述"></a>过程综述</h1><h2 id="过程和软件过程"><a href="#过程和软件过程" class="headerlink" title="过程和软件过程"></a>过程和软件过程</h2><h3 id="过程和软件过程-1"><a href="#过程和软件过程-1" class="headerlink" title="过程和软件过程"></a>过程和软件过程</h3><p><strong>过程</strong>：过程是一组为达成某一确定目标而执行的一系列活动、包 括工具、方法、资源和人。<br><strong>软件过程</strong>：软件开发中所遵循的过程称为软件过程。</p><h3 id="过程与质量"><a href="#过程与质量" class="headerlink" title="过程与质量"></a>过程与质量</h3><ul><li>过程是质量三角的一个顶点，通常也被看作是其他两个方面的“粘合剂 ” 。</li><li>产品的高质量依赖于过程的高质量，过程、人、技术是产品的成本、进度、质量的决定性因素。</li></ul><p><strong>85%的问题源于系统而非人！</strong></p><p><img src="/../../images/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B/5.png"></p><h2 id="过程框架"><a href="#过程框架" class="headerlink" title="过程框架"></a>过程框架</h2><h3 id="过程框架-1"><a href="#过程框架-1" class="headerlink" title="过程框架"></a>过程框架</h3><p>过程框架定义了若干小的框架活动，为完整的软件开发过程建立了基础。过程框架还包含一些适用于各个软件过程的普适性活动。<br>框架中每一个活动都是由一组软件工程动作组成的，每一个软件工程动作都由若干个任务集构成。</p><p>普适性活动贯穿整个软件过程，主要关注于项目管理、跟踪和控制，包括：</p><ul><li>软件项目跟踪和协调</li><li>风险管理</li><li>技术评审</li><li>度量</li><li>软件配置管理</li><li>可复用管理</li><li>工作产品的准备和生产</li></ul><p>对软件过程的适应性调整，是软件项目成功的关键。</p><p><img src="/../../images/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B/6.png"></p><h3 id="通用过程框架"><a href="#通用过程框架" class="headerlink" title="通用过程框架"></a>通用过程框架</h3><p>五个基本框架活动：</p><ul><li>沟通：包含了与客户（共利益者）之间大量的交流和协作，还包括需求获 取以及其他相关活动。</li><li>策划：为后续的软件工程工作制定计划，描述了需要执行的技术任务，可 能的风险，资源需求，工作产品和工作进度计划。</li><li>建模：包括创建模型和设计两方面，创建模型有助于客户和开发人员更好 地理解软件需求；设计可以实现需求。</li><li>构建：包括编码和测试。</li><li>部署：软件交付到用户，用户对其进行评测并给出反馈意见。</li></ul><h3 id="任务集"><a href="#任务集" class="headerlink" title="任务集"></a>任务集</h3><p>任务集由<strong>工作任务</strong>、<strong>工作产品</strong>、<strong>质量保证点</strong>、<strong>项目里程碑</strong>组成。</p><ul><li>小型项目[获取需求]： <ol><li>制定一个项目的共利益者列表</li><li>邀请所有共利益者参加一个非正式会议</li><li>咨询所有共利益者对于软件特征和功能的需求</li><li>讨论需求，并确定最终的需求列表</li><li>划定需求优先级</li><li>把不确定的地方标出来</li></ol></li><li>大型项目[获取需求]：<ol><li>制定一个项目的共利益者列表</li><li>和共利益者每个成员分别单独讨论，获取所有的要求</li><li>建立初步的软件特征和功能的需求</li><li>安排一系列促进需求获取的会议</li><li>举行一系列会议</li><li>在每次会议上建立非正式的用户场景</li><li>根据共利益者的反馈，进一步细化用户场景</li><li>建立一个修正的需求列表</li><li>使用质量功能部署技术将需求划分优先级</li><li>讨论系统的验证方法</li></ol></li></ul><h2 id="过程模式"><a href="#过程模式" class="headerlink" title="过程模式"></a>过程模式</h2><h3 id="过程模式-1"><a href="#过程模式-1" class="headerlink" title="过程模式"></a>过程模式</h3><ul><li><strong>模式名称</strong>：该模式在软件过程中的功能</li><li><strong>目的</strong>：模式的目的</li><li><strong>类型</strong>：<ul><li><strong>任务模式</strong>：定义过程中软件工程动作或工作任务，以保证成功执行软件工程实践</li><li><strong>步骤模式</strong>：定义过程的框架活动，包含很多任务</li><li><strong>阶段模式</strong>：定义在过程中发生的框架活动序列</li></ul></li><li><strong>启动条件</strong>：模式应用的前提条件</li><li><strong>问题</strong>：模式将要解决的问题</li><li><strong>解决办法</strong>：模式的实现</li><li><strong>结束条件</strong>：模式成功执行之后的结果</li><li><strong>相关模式</strong>：该模式相关的其他模式</li><li><strong>已知应用实例</strong>：该模式应用的具体实例</li></ul><h3 id="过程模式举例"><a href="#过程模式举例" class="headerlink" title="过程模式举例"></a>过程模式举例</h3><p>当利益共同体对工作成果有大致的想法，但对具体的软件需求不确认时，下述简化的过程模 式描述了可采用的方法。</p><ul><li><strong>模式名称</strong>：原型开发</li><li><strong>目的</strong>：构造一个便于利益共同体反复评估的模型（原型），以便识别和确定软件需求。</li><li><strong>类型</strong>：阶段模式</li><li><strong>启动条件</strong>：在模式启动之前必须满足以下四个条件<br>（1）确定共利益者；<br>（2）已经建立起共利益者和软件开发队伍之间的沟通方式；<br>（3）共利益者确定了需要解决的主要问题；<br>（4）对项目范围、基本业务需求和项目约束条件有了初步了解。</li><li><strong>问题</strong>：需求模糊或者不存在，但都清楚地认识到项目存在的问题，且该问题必须通过软件解决。共利益者不确认他们想要什么，即他们无法详细描述软件需求。</li><li><strong>解决办法</strong>：描述了原型开发过程。</li></ul><p><strong>结束条件</strong>：共利益者已经开发了一个软件原型，识别了基本的需求。随后，可能有两种结果<br>（1）原型系统可以通过一系列的增量开发成为软件产品<br>（2）原型系统被抛弃，采用其他过程模式建立了软件产品。</p><ul><li><strong>相关模式</strong>：客户沟通、迭代设计、迭代开发、客户评估、需求抽取。</li><li><strong>已知应用实例</strong>：当需求不确定时，推荐原型开发方法。</li></ul><h2 id="过程评估"><a href="#过程评估" class="headerlink" title="过程评估"></a>过程评估</h2><h3 id="过程评估方法"><a href="#过程评估方法" class="headerlink" title="过程评估方法"></a>过程评估方法</h3><ul><li>用于过程改进的标准CMMI评估方法：提供了五步的过程评估模型，包括启动、诊断、建立、执行和学习 。</li><li>软件ISO 9001：2000：这是一个通用标准，任何开发组织如果希望提高所提供的产品、系统或服务的整体质量，都可采用这个标准。因此，该标准可直接应用于软件组织和公司。</li><li>SPICE(ISO/IEC 15504)：该标准定义了软件过程评估计的一系列要求。该标准的目的是帮助软件开发组织建立客观的评价体系，以评估定义的软件过程的有效性。</li></ul><p><img src="/../../images/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B/7.png"></p><h3 id="ISO-9001-2000"><a href="#ISO-9001-2000" class="headerlink" title="ISO 9001:2000"></a>ISO 9001:2000</h3><p>采用“<strong>计划-实施-检查-行动</strong>”循环，将其应用于软件项目的质量管理环节。</p><h3 id="PDCA模型（阶段性、持续性）"><a href="#PDCA模型（阶段性、持续性）" class="headerlink" title="PDCA模型（阶段性、持续性）"></a>PDCA模型（阶段性、持续性）</h3><p><img src="/../../images/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B/8.png"></p><h3 id="CMMI"><a href="#CMMI" class="headerlink" title="CMMI"></a>CMMI</h3><p>是一个全面的过程模型，描述了成熟软件过程应该具备的特定目标、实践和能力，并根据能力水平评定为以下几级：</p><p><img src="/../../images/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B/9.png"><br><img src="/../../images/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B/10.png"></p><table><thead><tr><th>Category</th><th>Process Areas</th></tr></thead><tbody><tr><td>过程管理类</td><td>组织过程聚焦、组织过程定义、组织培训、 组织过程性能、组织革新和部署</td></tr><tr><td>项目管理类</td><td>项目策划、项目监督和控制、供方协定管理、 集成项目管理、风险管理、定量项目管理</td></tr><tr><td>工程化类</td><td>需求管理、需求开发、技术解决、产品集成、 验证、确认</td></tr><tr><td>支持类</td><td>配置管理、过程和产品质量保证、测量与分析、 原因分析和决定、决策分析和决定</td></tr></tbody></table><h2 id="CMMI与ISO9001的不同点"><a href="#CMMI与ISO9001的不同点" class="headerlink" title="CMMI与ISO9001的不同点"></a>CMMI与ISO9001的不同点</h2><p>ISO9001和CMMI的共同点是二者都强调了软件产品的质量。所不同的是，ISO9001强调的是衡量的准则，例如应该做什么、什么算好、什么算不好，却没有告诉软件开发人员如何达到好的目标，如何避免差错。<br>CMMI则提供了一整套较为完善的软件研发项目管理的方法。</p><h3 id="CMMI优劣评估"><a href="#CMMI优劣评估" class="headerlink" title="CMMI优劣评估"></a>CMMI优劣评估</h3><p>主旨普遍接受，但当构建大型系统时（几百人参加需要几年 完成），部分详细需求应慎重考虑。</p><h1 id="过程模型"><a href="#过程模型" class="headerlink" title="过程模型"></a>过程模型</h1><h2 id="瀑布模型"><a href="#瀑布模型" class="headerlink" title="瀑布模型"></a>瀑布模型</h2><p>瀑布模型又称为<strong>经典生命周期</strong>。<br>它提供了一个系统的、顺序的线性软件开发方法。从用户需求规格说明开始，通过策划、建模、构建和部署的过程，最终提供一个完整的软件并提供持续的技术支持。</p><p><img src="/../../images/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B/11.png"></p><p><strong>应用实践</strong>： </p><ul><li>对一个已有系统进行明确定义的适应性调整或增强</li><li>需求准确定义和相对稳定的新的开发项目；</li></ul><p><strong>优势</strong>： 项目管理线性，相对简单<br><strong>不足</strong>：</p><ul><li>实际项目很少遵守瀑布模型，随着项目的进度，变更可能带来混乱</li><li>客户难以清楚地描述所有的需求，而瀑布模型却要求明确需求，因此，很难适应许多项目的不确定性</li><li>项目接近尾声才能拿到可执行程序，客户需要耐心，如果有重大缺陷没有发现，损失惨重。</li></ul><h2 id="增量过程模型"><a href="#增量过程模型" class="headerlink" title="增量过程模型"></a>增量过程模型</h2><p>增量模型是以增量的形式生产软件产品的过程模型。</p><p>应用实践： 在许多情况下，初始的软件需求有明确的定义，但是整个开发过程却不宜单纯运用线性模型。同时，可能迫切需要为用户迅速提供一套功能有限的软件产品，然后在后续版本中再细化和拓展功能。</p><p>分类：</p><ul><li>增量模型</li><li>RAD模型</li></ul><h3 id="增量模型"><a href="#增量模型" class="headerlink" title="增量模型"></a>增量模型</h3><p>增量模型发布一系列称为增量的版本，随着每个版本交付，逐步为 用户提供更多的功能。以迭代的方式运用瀑布模型。</p><p><img src="/../../images/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B/12.png"></p><p>应用实践：</p><ul><li>初始阶段需求很明确，同时，迫切需要为用户提供一套功能有限的软件产品，然后在后续版本中再细化和拓展功能。</li><li>客户要求在一个不可能完成的时间提交产品。</li><li>在项目既定的商业要求期限之前不可能找到足够的开发人员。</li></ul><p>优点：</p><ul><li>规避人员和技术风险。</li><li>每个增量版本为用户评价提供了一个平台，有利于满足客户需求。</li></ul><h3 id="RAD模型"><a href="#RAD模型" class="headerlink" title="RAD模型"></a>RAD模型</h3><p>快速应用程序开发模型（Rapid Application Development）是一 种侧重于短暂的开发周期的增量软件过程模型。</p><p><img src="/../../images/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B/13.png"></p><p>应用实践： 每个主要功能都能在3个月内完成，适合采用RAD模型。</p><p>优点： 可以使开发团队在一段非常短的时间内创造出 “全功能系统”。</p><p>不足：</p><ul><li>对于大型可伸缩项目，需要大量的人力资源来构建多个相对独立的 RAD团队。</li><li>如果开发者和客户没有为短时间内急速完成整个系统作好准备，RAD 项目将会失败。</li><li>如果一个系统不能合理模块化，RAD组件建立会有问题。</li></ul><h2 id="演化过程模型"><a href="#演化过程模型" class="headerlink" title="演化过程模型"></a>演化过程模型</h2><p>演化模型是迭代的过程模型。</p><p>应用实践： 在开发过程中，业务和产品需求经常发生变化，同时严格的交付时间使得开发团队不可能圆满完成软件产品，但是必须交付功能有限的版本以应对竞争或商业压力；很好的理解了核心产品和系统需求，但是产品或者系统扩展的细节问题却没有定义。</p><p>分类： </p><ul><li>原型开发</li><li>螺旋开发</li></ul><h3 id="原型开发"><a href="#原型开发" class="headerlink" title="原型开发"></a>原型开发</h3><p>原型开发提供了定义软件需求的一种机制。</p><p>应用场景：当需求很模糊的时候，原型开发帮助软件工程师和客户更好的理解究竟需求是什么。</p><p>不足：</p><ul><li>客户看到了产品，容易希望在这个原型上完善。</li><li>含有很多不合适的技术和方法。</li></ul><p><img src="/../../images/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B/14.png"></p><h3 id="螺旋开发"><a href="#螺旋开发" class="headerlink" title="螺旋开发"></a>螺旋开发</h3><p>螺旋模型结合了原型的迭代性质和瀑布模型的系统性和可控性。具有快速开发越来越完善软件版本的潜力 。第一圈开发出产品的规格说明、开发原型系统，并在每次迭代时，逐步完善，开发出不同的版本。</p><p>应用场景：</p><ul><li>能应用到开发的整个生命周期，从 概念开发到维护</li><li>开发大型系统和软件的方法</li></ul><p>不足： 很难说服客户演化的方法是可控的</p><p><img src="/../../images/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B/15.png"></p><h2 id="专用过程模型"><a href="#专用过程模型" class="headerlink" title="专用过程模型"></a>专用过程模型</h2><p>专用过程模型应用面较窄，只适用于某些特定的软件工程方法：</p><ul><li><strong>基于组件的开发（复用）</strong>：强调组件复用和组装。由厂家作为产品供应，提供软件组件，在构建软件时使用。这些组件通过良好定义的接口提供特定的功能，能够集成到软件中。</li><li><strong>形式化方法模型</strong>：提倡采用数学的方法进行软件开发和验证。主要活动是生成计算机软件形式化的数学规格说明。形式化方法使软件工程师可以应用严格的数学符号说明、开发和验证基于计算机的系统。</li><li><strong>面向方面的软件开发</strong>：解决跨整个软件体系架构的横切关注点。方面包括：用户接口、协同工作、发布、持续性、存储器管理、事物处理、安全、完整性等。</li></ul><h2 id="统一过程模型"><a href="#统一过程模型" class="headerlink" title="统一过程模型"></a>统一过程模型</h2><p>统一过程模型（Unified Process Model）是一种“以用例驱动，以体系结构为核心，迭代和增量”的软件过程框架，由UML(Unified Modeling Language)方法和工具支持。应用在面象对象项目中。<br>这是一种增量模型，定义了五个阶段：</p><ol><li>起始阶段：包括用户沟通和计划，强调定义和细化用例，并将其作为 主要模型。</li><li>细化阶段：包括用户沟通和建模活动，重点是创建分析和设计模型， 强调类的定义和体系结构的表示。</li><li>构建阶段：细化设计模型，并将设计模型转化为软件组件实现。</li><li>转化阶段：将软件从开发人员传递给最终用户，并由用户完成测试和 验收测试。</li><li>生产阶段：持续地监控软件的运行、并提供技术支持。</li></ol><h2 id="极限编程模型"><a href="#极限编程模型" class="headerlink" title="极限编程模型"></a>极限编程模型</h2><p>极限编程(XP)是在一种颇有争议的软件开发方法。其第一步是软件开发小组确定客户希望产品支持的各种特性。对于每个特性，开发小组向客户通报实现这个特性所需要的时间和花费。</p><p>客户使用成本-效益分析法选择每个后续的组件所包含的特性，根据开发小组提供的时间、成本估算和该特性给客户带来的潜在收益来进行选择。提议的组件分成更小的部分，称为任务。</p><p>一个程序员首先制定出任务的测试用例，采用TDD，然后两个程序员在一台计算机前工作（结对编程），实现任务，确保全部测试用例正确工作。两个程序员每15~20分钟交替操作键盘，不进行键盘操作的程序员仔细检查同伴的代码。完成以上操作后，将这个任务集成到产品的当前版本中。</p><p>理想情况下，实现和集成一个任务只需要几个小时。通常结对的程序员并行地实现任务，以便集成可以连续地进行。如果可能，每天更换小组成员的编码同伴。从其他组员处的学习会提高每人的技能水平。各任务所使用的的TDD测试用例保留下来并应用到所有进一步的集成测试中。</p><p>结对编程的特点：</p><ul><li>要避免编写测试用例的程序员继续完成编码实现</li><li>当开发者离开一个项目，其积累的所有知识也离开了</li><li>经验不丰富的开发者可以从经验丰富的一方学习经验</li><li>强调无我小组</li></ul><p>结对编程的弊端：</p><ul><li>要求大块的不被打断的时间</li><li>不适用于害羞或专横的个人</li><li>不适用于两个没经验的程序员</li></ul><p>XP的特性：</p><ul><li>XP小组的计算机设在一个大房间的中心，大房间中有许多彼此相连的小隔间</li><li>一个客户代表一直与XP小组一起工作</li><li>没有一个人能连续两周超时工作</li><li>没有规格说明，而是XP小组的所有成员一同完成规格说明、分析、设计、编码、测试</li><li>在建造出各组件前没有概要设计，建造产品的过程中设计在不断调整(refactoring)</li></ul><h1 id="敏捷视角下的过程"><a href="#敏捷视角下的过程" class="headerlink" title="敏捷视角下的过程"></a>敏捷视角下的过程</h1><p><img src="/../../images/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B/16.jpg"></p><h2 id="敏捷"><a href="#敏捷" class="headerlink" title="敏捷"></a>敏捷</h2><p>2001年，Kent Beck和其他16位知名软件开发者、工程作家、咨询师共同签署了“敏捷软件开发宣言”：<br>我们正在通过亲身实践以及帮助他人实践的方式来揭示更好的软件开发之路，通过这项工作，我们认为： </p><ul><li>个体和交互胜过过程和工具</li><li>可工作软件胜过宽泛的文档</li><li>客户合作胜过合同谈判</li><li>响应变化胜过遵循计划</li></ul><p>敏捷方法是为了克服传统软件工程中<strong>认识和实践的弱点</strong>开发而成的。</p><h2 id="敏捷过程"><a href="#敏捷过程" class="headerlink" title="敏捷过程"></a>敏捷过程</h2><p>敏捷过程是增量的适应。必须在很短的时间间隔内交付软件 增量来适应变化的步伐。</p><p>敏捷可应用于任何软件过程，敏捷过程有如下特点：</p><ul><li>允许项目团队调整并合理安排任务，理解敏捷开发方法的 易变性并指定计划。</li><li>精简并维持最基本的工作产品。</li><li>强调增量交付策略，快速向客户提供适应产品类型和运行 环境的可运行软件。</li></ul><p>敏捷过程关注个人的才智和技巧，根据特定人员和团对来塑造过程。<br>基本能力、共同目标、决策能力、模糊问题解决能力、相互信任和尊重、自我组织。</p><h2 id="敏捷过程模型"><a href="#敏捷过程模型" class="headerlink" title="敏捷过程模型"></a>敏捷过程模型</h2><h3 id="极限编程"><a href="#极限编程" class="headerlink" title="极限编程"></a>极限编程</h3><p>极限编程（eXtreme Programming XP）是应用最广泛的敏捷过程,按照策划、设计、编码、测试4个框架活动组织，建议一系列新颖和有力的技术，保证创建能体现客户指定优先级特征和功能的频繁软件发布。</p><p>策划：开始于建立一系列描述待开发软件必要特征与功能。<br><kbd><strong>客户写在索引卡上-&gt;团队成员确认开发时间-&gt;长的话进一步细分-&gt;达成承诺实现</strong></kbd></p><p>设计：严格遵循KIS(keep it simple)原则。</p><p>编码：先设计单元测试内容，结对编程（一个负责实现设计，一个负责单元测试并检查是否符合编码规范）。</p><p>测试：单元测试纳入到通用测试集，每天进行系统的集成和确认测试。一旦发现问题，立刻修改。</p><h3 id="自适应软件开发"><a href="#自适应软件开发" class="headerlink" title="自适应软件开发"></a>自适应软件开发</h3><p>自适应软件开发（ASD）强调人的合作和团队的组织，按思考、协作和学习三个框架活动组织。</p><p>思考：启动项目并完成自适应循环策划。通过项目启动信息和基本需求来确定项目所需的一系列软件增量发布循环。(沟通、策划)</p><p>协作：团队个人的聪明才智凝聚成团队的力量。（沟通、建模）</p><p>学习：当ASD团队成员开始开发作为自适应循环一部分的组件时，其重点是朝着完成循环的方向完成尽可能多的东西。（构建）</p><h3 id="动态系统开发方法"><a href="#动态系统开发方法" class="headerlink" title="动态系统开发方法"></a>动态系统开发方法</h3><p>动态系统开发方法（DSDM）定义了三种不同的迭代循环：功能模型迭代、设计和构建迭代、实现迭代，前边还增加了可行研究和业务研究两个传统的生命周期活动。</p><p>可行性研究：建立业务需求，并评估采用DSDM是否可行。</p><p>业务研究：建立所需要功能需求，确定基本的系统架构。</p><p>功能模型迭代/设计和构建迭代：为客户开发一系列功能的增量原型，通过反馈获取额外需求。</p><p>实现迭代：将最终软件增量置于可操作环境。</p>]]></content>
      
      
      <categories>
          
          <category> 软件工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware安装CentOS7系统</title>
      <link href="/2020/03/11/ji-suan-ji-ke-xue-ji-chu/vmware-an-zhuang-centos7-xi-tong/"/>
      <url>/2020/03/11/ji-suan-ji-ke-xue-ji-chu/vmware-an-zhuang-centos7-xi-tong/</url>
      
        <content type="html"><![CDATA[<h1 id="安装VMware"><a href="#安装VMware" class="headerlink" title="安装VMware"></a>安装VMware</h1><p>前往VMware官网下载安装<a href="https://www.vmware.com/products/workstation-player.html">VMware Workstation Player</a>或<a href="https://www.vmware.com/products/workstation-pro.html">VMware Workstation</a>。</p><p>VMware Workstation Player免费可用，VMware Workstation如何安装此处不介绍。</p><p>考虑到潜在的风险，博主尤其不建议公司随意使用特殊方法，其实也有VMware的替代品。</p><p>VMware的.wmx文件等内容可以设置安装到非C盘(系统盘)，节约系统盘空间。</p><h1 id="下载CentOS-iso镜像文件"><a href="#下载CentOS-iso镜像文件" class="headerlink" title="下载CentOS.iso镜像文件"></a>下载CentOS.iso镜像文件</h1><p>操作系统的iso镜像文件比较大，最好是用国内的镜像站点。这里推荐<a href="http://mirrors.aliyun.com/centos/7/isos/x86_64/">阿里云镜像</a>，可以更快下载。</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/1.png"></p><p>也可以选择<a href="http://isoredirect.centos.org/centos/7/isos/x86_64/">官方网站</a>，查看更多镜像：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/2.png"></p><p>下载后放进文件夹保存好，此文件今后也可复用。</p><h1 id="BIOS配置Intel-VT-x"><a href="#BIOS配置Intel-VT-x" class="headerlink" title="BIOS配置Intel VT-x"></a>BIOS配置Intel VT-x</h1><p>多数个人计算机是没有配开启虚拟化配置，因此无法启用虚拟机：<br><font color="red">虚拟机此主机支持 Intel VT-x，但 Intel VT-x 处于禁用状态…..</font></p><p>虚拟化技术，缩写是VT。Intel VT就是指Intel的虚拟化技术。这种技术简单来说就是让可以让一个CPU工作起来就像多个CPU并行运行，从而使得在一台电脑内可以同时运行多个操作系统。</p><p>英特尔(Intel)和AMD的大部分CPU均支持此技术，名称分别为VT-x、AMD-V。VT-x开启之后对VMware虚拟机的性能有非常大的提高。</p><p>BIOS，Basic Input Output System，基本输入输出系统。BIOS是一组固化到计算机内主板上一个ROM芯片上的程序，它保存着计算机最重要的基本输入输出的程序、开机后自检程序和系统自启动程序，它可从CMOS中读写系统设置的具体信息。 其主要功能是为计算机提供最底层的、最直接的硬件设置和控制。</p><p>进入BIOS的方法：</p><ul><li>组装机以主板分，华硕用F8键、Intel用F12键，其他品牌用ESC键或F11键或F12键。</li><li>笔记本以品牌分，联想ThinkPad系列用F1键，其他品牌用F2键。</li><li>台式机按品牌分， 戴尔按ESC键，其他用F12键。</li><li>如果仍然不能进入BIOS，找找电脑(主板)说明书或者参考BIOS设置怎么进入图解教程。</li></ul><p>另一种方法：<br>开始菜单选择电源，按住Shift点击重启，蓝色页面中选择”疑难解答”，新页面选择”高级选项”，新页面选择”启动设置”，新页面选择”UEFI固件设置”。</p><p>还有一种方法：<br>开始菜单选择设置，选择更新和安全，选择恢复，选择”高级启动”中的”立即重启”。</p><p>重启后的设置问题推荐参考：<a href="https://www.kafan.cn/A/1nkpwwjz3k.html">WIN10如何进入BIOS设置开启VT</a>，剩余操作摘录如下：</p><ol><li>Phoenix BIOS机型<ol><li>进入BIOS，选择Configuration选项，选择Intel Virtual Technology并回车。注意：若无VT选项或不可更改，则表示你的电脑不支持VT技术。</li><li>将光标移动至Enabled处，并回车确定。</li><li>此时该选项将变为Enabled，最后按F10热键保存并退出即可开启VT功能。</li></ol></li></ol><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/3.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/4.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/5.png"></p><ol start="2"><li>Insyde BIOS机型<ol><li>进入BIOS，选择Configuration选项，选择Intel Virtual Technology并回车。</li><li>将光标移动至Enabled处，并回车确定。</li><li>此时该选项将变为Enabled，最后按F10热键保存并退出即可开启VT功能。</li></ol></li></ol><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/6.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/7.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/8.png"></p><h1 id="VMware安装配置CentOS"><a href="#VMware安装配置CentOS" class="headerlink" title="VMware安装配置CentOS"></a>VMware安装配置CentOS</h1><p>安装配置步骤：</p><ol><li>打开VMware选择文件，选择新建虚拟机。</li><li>选择稍后安装操作系统。</li><li>选择要安装的操作系统，选择Linux，选择CentOS 7 64位。</li><li>给操作系统分配磁盘大小，选择默认20G(最好给起码50GB)，选择将虚拟磁盘存储为单个文件。</li><li>选择Centos7镜像路径(前面提到的保存好的文件夹)。</li><li>选择安装的自然语言。</li><li>设置日期和时间。</li><li>选择需要安装的软件。</li><li>选择Server with GUI，点击Done。</li><li>选择安装位置，进行磁盘划分。</li><li>选择I wil configure partitioning，点击Done。</li><li>点击加号，选择/boot，给/boot分区分配空间，点击Add。</li><li>类似于11步骤，给其他分区分配好空间，点击Done。</li><li>查看弹出的摘要信息，点击Accept Changes。</li><li>设置主机名与网卡信息。</li><li>打开网卡，然后查看是否能获取到IP地址，更改主机名，点击Done。</li><li>点击Begin Installation。</li><li>设置root密码(很重要，一定要记住)。</li><li>点击USER CREATION以创建管理员用户。</li><li>等待系统安装完毕，重启系统。</li></ol><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/9.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/10.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/11.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/12.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/13.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/14.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/15.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/16.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/17.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/18.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/19.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/20.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/21.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/22.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/23.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/24.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/25.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/26.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/27.png"><br><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/VMware%E5%AE%89%E8%A3%85CentOS7%E7%B3%BB%E7%BB%9F/28.png"></p><h1 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h1><h2 id="初次登录"><a href="#初次登录" class="headerlink" title="初次登录"></a>初次登录</h2><p>如果没登录过Linux系统，输入密码的时候要知道不会出现<code>*****</code>，正常输入，回车确认即可。</p><h2 id="VMX文件损坏"><a href="#VMX文件损坏" class="headerlink" title="VMX文件损坏"></a>VMX文件损坏</h2><p>VMX文件损坏，如果无法修复，最简单有效的方法就是移除并重装。</p><h2 id="重装VMware"><a href="#重装VMware" class="headerlink" title="重装VMware"></a>重装VMware</h2><p>卸载VMware不影响已安装的.vmx文件，等重新安装以后还可以重新导入.vmx文件。</p><h2 id="安装VMwareTools"><a href="#安装VMwareTools" class="headerlink" title="安装VMwareTools"></a>安装VMwareTools</h2><p>官方教程：<a href="https://docs.vmware.com/cn/VMware-Workstation-Player-for-Windows/15.0/com.vmware.player.win.using.doc/GUID-D8892B15-73A5-4FCE-AB7D-56C2C90BD951.html">安装 VMware Tools</a></p><h1 id="学习Linux"><a href="#学习Linux" class="headerlink" title="学习Linux"></a>学习Linux</h1><p><a href="https://www.runoob.com/linux/linux-command-manual.html">菜鸟教程 - Linux教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> VMware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LaTeX符号语法总结</title>
      <link href="/2020/02/26/ji-suan-ji-ke-xue-ji-chu/latex-fu-hao-yu-fa-zong-jie/"/>
      <url>/2020/02/26/ji-suan-ji-ke-xue-ji-chu/latex-fu-hao-yu-fa-zong-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><table><thead><tr><th align="center">$\infty$ \infty</th><th align="center">$\neq$ \neq</th><th align="center">$\times$ \times</th><th align="center">$\div$ \div</th><th align="center">$\sim$ \sim</th></tr></thead><tbody><tr><td align="center">$\pm$ <strong>\pm</strong></td><td align="center">$\mp$ <strong>\mp</strong></td><td align="center">$\leq$ <strong>\leq</strong></td><td align="center">$\geq$ <strong>\geq</strong></td><td align="center">$\approx$ <strong>\approx</strong></td></tr><tr><td align="center">$%$ <strong>%</strong></td><td align="center">$\ast$ <strong>\ast</strong></td><td align="center">$\cdot$ <strong>\cdot</strong></td><td align="center">$\equiv$ <strong>\equiv</strong></td><td align="center">$\cong$ <strong>\cong</strong></td></tr><tr><td align="center">$\in$ <strong>\in</strong></td><td align="center">$\ni$ <strong>\ni</strong></td><td align="center">$\exists$ <strong>\exists</strong></td><td align="center">$\nexists$ <strong>\nexists</strong></td><td align="center">$\propto$ <strong>\propto</strong></td></tr><tr><td align="center">$\cup$ <strong>\cup</strong></td><td align="center">$\cap$ <strong>\cap</strong></td><td align="center">$\perp$ <strong>\perp</strong></td><td align="center">$\parallel$ <strong>\parallel</strong></td><td align="center">$\circ$ <strong>\circ</strong></td></tr><tr><td align="center">$\subseteq$ <strong>\subseteq</strong></td><td align="center">$⫋$ <strong>⫋</strong></td><td align="center">$∀$ <strong>∀</strong></td><td align="center">$\ncong$ <strong>\ncong</strong></td><td align="center">$\nsim$ <strong>\nsim</strong></td></tr><tr><td align="center">$=$ <strong>=</strong></td><td align="center">$+$ <strong>+</strong></td><td align="center">$\ll$ <strong>\ll</strong></td><td align="center">$\gg$ <strong>\gg</strong></td><td align="center">$\subset$ <strong>\subset</strong></td></tr><tr><td align="center">$\doteq$ <strong>\doteq</strong></td><td align="center">$&lt;$ <strong>&lt;</strong></td><td align="center">$&gt;$ <strong>&gt;</strong></td><td align="center">$\prec$ <strong>\prec</strong></td><td align="center">$\succ$ <strong>\succ</strong></td></tr><tr><td align="center">$\preceq$ <strong>\preceq</strong></td><td align="center">$\succeq$ <strong>\succeq</strong></td><td align="center">$\supset$ <strong>\supset</strong></td><td align="center">$\simeq$ <strong>\simeq</strong></td><td align="center">$\supseteq$ <strong>\supseteq</strong></td></tr><tr><td align="center">$\nsubseteq$ <strong>\nsubseteq</strong></td><td align="center">$\sqsubset$ <strong>\sqsubset</strong></td><td align="center">$\sqsupset$ <strong>\sqsupset</strong></td><td align="center">$\Join$ <strong>\Join</strong></td><td align="center">$\notin$ <strong>\notin</strong></td></tr><tr><td align="center">$\int$ <strong>\int</strong></td><td align="center">$\iint$ <strong>\iint</strong></td><td align="center">$\iiint$ <strong>\iiint</strong></td><td align="center">$\oiiint$ <strong>\oiiint</strong></td><td align="center">$\sum$ <strong>\sum</strong></td></tr><tr><td align="center">$\prod$ <strong>\prod</strong></td><td align="center">$\coprod$ <strong>\coprod</strong></td><td align="center">$\bigwedge$ <strong>\bigwedge</strong></td><td align="center">$\bigvee$ <strong>\bigvee</strong></td><td align="center">$\bigcap$ <strong>\bigcap</strong></td></tr><tr><td align="center">$\bigcup$ <strong>\bigcup</strong></td><td align="center">$\bigodot$ <strong>\bigodot</strong></td><td align="center">$\bigoplus$ <strong>\bigoplus</strong></td><td align="center">$\bigotimes$ <strong>\bigotimes</strong></td><td align="center">$\biguplus$ <strong>\biguplus</strong></td></tr><tr><td align="center">$\backslash$ <strong>\backslash</strong></td><td align="center">$/$ <strong>/</strong></td><td align="center">$\divideontimes$ <strong>\divideontimes</strong></td><td align="center">$\star$ <strong>\star</strong></td><td align="center">$\wr$ <strong>\wr</strong></td></tr><tr><td align="center">$\vartriangle$ <strong>\vartriangle</strong></td><td align="center">$\ddag$ <strong>\ddag</strong></td><td align="center">$\diamond$ <strong>\diamond</strong></td><td align="center">$\dag$ <strong>\dag</strong></td><td align="center">$\wedge$ <strong>\wedge</strong></td></tr><tr><td align="center">$\vee$ <strong>\vee</strong></td><td align="center">$\odot$ <strong>\odot</strong></td><td align="center">$\otimes$ <strong>\otimes</strong></td><td align="center">$\oplus$ <strong>\oplus</strong></td><td align="center">$\ominus$ <strong>\ominus</strong></td></tr><tr><td align="center">$\Cup$ <strong>\Cup</strong></td><td align="center">$\Cap$ <strong>\Cap</strong></td><td align="center">$\dotplus$ <strong>\dotplus</strong></td><td align="center">$\intercal$ <strong>\intercal</strong></td><td align="center">$\because$ <strong>\because</strong></td></tr><tr><td align="center">$\therefore$ <strong>\therefore</strong></td><td align="center">$\backsim$ <strong>\backsim</strong></td><td align="center">$\uplus$ <strong>\uplus</strong></td><td align="center">$\propto$ <strong>\propto</strong></td><td align="center">$\oiint$ <strong>\oiint</strong></td></tr><tr><td align="center">$\oint$ <strong>\oint</strong></td><td align="center">$\bigsqcup$ <strong>\bigsqcup</strong></td><td align="center">$\vdash$ <strong>\vdash</strong></td><td align="center">$\dashv$ <strong>\dashv</strong></td><td align="center">$\bowtie$ <strong>\bowtie</strong></td></tr><tr><td align="center">$\sqsubseteq$ <strong>\sqsubseteq</strong></td><td align="center">$\sqsupseteq$ <strong>\sqsupseteq</strong></td><td align="center">$\models$ <strong>\models</strong></td><td align="center">$\mid$ <strong>\mid</strong></td><td align="center">$\parallel$ <strong>\parallel</strong></td></tr><tr><td align="center">$\smile$ <strong>\smile</strong></td><td align="center">$\frown$ <strong>\frown</strong></td><td align="center">$\asymp$ <strong>\asymp</strong></td><td align="center">$:$ <strong>:</strong></td><td align="center">$\pm$ <strong>\pm</strong></td></tr><tr><td align="center">$\backprime$ \backprime</td><td align="center">$\prime$ \prime</td><td align="center">$⌈⌉$ <strong>⌈⌉</strong></td><td align="center">$⌊⌋$ <strong>⌊⌋</strong></td><td align="center"></td></tr></tbody></table><h1 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h1><table><thead><tr><th align="center">$\alpha$ \alpha</th><th align="center">$\beta$ \beta</th><th align="center">$\gamma$ \gamma</th><th align="center">$\delta$ \delta</th><th align="center">$\phi$ \phi</th></tr></thead><tbody><tr><td align="center">$\epsilon$ <strong>\epsilon</strong></td><td align="center">$\zeta$ <strong>\zeta</strong></td><td align="center">$\eta$ <strong>\eta</strong></td><td align="center">$\theta$ <strong>\theta</strong></td><td align="center">$\iota$ <strong>\iota</strong></td></tr><tr><td align="center">$\kappa$ <strong>\kappa</strong></td><td align="center">$\lambda$ <strong>\lambda</strong></td><td align="center">$\mu$ <strong>\mu</strong></td><td align="center">$\nu$ <strong>\nu</strong></td><td align="center">$\xi$ <strong>\xi</strong></td></tr><tr><td align="center">$\rho$ <strong>\rho</strong></td><td align="center">$\sigma$ <strong>\sigma</strong></td><td align="center">$\tau$ <strong>\tau</strong></td><td align="center">$\upsilon$ <strong>\upsilon</strong></td><td align="center">$\varphi$ <strong>\varphi</strong></td></tr><tr><td align="center">$\chi$ <strong>\chi</strong></td><td align="center">$\omega$ <strong>\omega</strong></td><td align="center">$\pi$ <strong>\pi</strong></td><td align="center">$\psi$ <strong>\psi</strong></td><td align="center">$\varepsilon$ <strong>\varepsilon</strong></td></tr><tr><td align="center">$\vartheta$ <strong>\vartheta</strong></td><td align="center">$o$ <strong>o</strong></td><td align="center">$\varpi$ <strong>\varpi</strong></td><td align="center">$\varrho$ <strong>\varrho</strong></td><td align="center">$\varsigma$ <strong>\varsigma</strong></td></tr><tr><td align="center">$\varphi$ <strong>\varphi</strong></td><td align="center">$\Xi$ <strong>\Xi</strong></td><td align="center">$\Gamma$ <strong>\Gamma</strong></td><td align="center">$\Delta$ <strong>\Delta</strong></td><td align="center">$\Lambda$ <strong>\Lambda</strong></td></tr><tr><td align="center">$\Omega$ <strong>\Omega</strong></td><td align="center">$\Phi$ <strong>\Phi</strong></td><td align="center">$\Psi$ <strong>\Psi</strong></td><td align="center">$\Pi$ <strong>\Pi</strong></td><td align="center">$\Sigma$ <strong>\Sigma</strong></td></tr><tr><td align="center">$\Theta$ <strong>\Theta</strong></td><td align="center">$\Upsilon$ <strong>\Upsilon</strong></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h1 id="字母类符号"><a href="#字母类符号" class="headerlink" title="字母类符号"></a>字母类符号</h1><table><thead><tr><th align="center">$\aleph$ \aleph</th><th align="center">$\beth$ \beth</th><th align="center">$\daleth$ \daleth</th><th align="center">$\gimel$ \gimel</th><th align="center">$\partial$ \partial</th></tr></thead><tbody><tr><td align="center">$\Finv$ <strong>\Finv</strong></td><td align="center">$\Re$ <strong>\Re</strong></td><td align="center">$\ell$ <strong>\ell</strong></td><td align="center">$\eth$ <strong>\eth</strong></td><td align="center">$\Im$ <strong>\Im</strong></td></tr><tr><td align="center">$\hslash$ <strong>\hslash</strong></td><td align="center">$\complement$ <strong>\complement</strong></td><td align="center">$\wp$ <strong>\wp</strong></td><td align="center">$\forall$ <strong>\forall</strong></td><td align="center"></td></tr></tbody></table><h1 id="括号"><a href="#括号" class="headerlink" title="括号"></a>括号</h1><table><thead><tr><th align="center">$($ (</th><th align="center">$)$ )</th><th align="center">$[$ [</th><th align="center">$]$ ]</th><th align="center">${$ \{</th></tr></thead><tbody><tr><td align="center">$}$ <strong>\}</strong></td><td align="center">$\vert$ <strong>\vert</strong></td><td align="center">$\Vert$ <strong>\Vert</strong></td><td align="center">$/$ <strong>/</strong></td><td align="center"></td></tr></tbody></table><h1 id="箭头"><a href="#箭头" class="headerlink" title="箭头"></a>箭头</h1><table><thead><tr><th align="center">$\leftarrow$ \leftarrow</th><th align="center">$\to$ \to</th><th align="center">$\rightarrow$ \rightarrow</th><th align="center">$\uparrow$ \uparrow</th><th align="center">$\downarrow$ \downarrow</th></tr></thead><tbody><tr><td align="center">$\longleftarrow$ <strong>\longleftarrow</strong></td><td align="center">$\longrightarrow$ <strong>\longrightarrow</strong></td><td align="center">$\Leftarrow$ <strong>\Leftarrow</strong></td><td align="center">$\Rightarrow$ <strong>\Rightarrow</strong></td><td align="center">$\mapsto$ <strong>\mapsto</strong></td></tr><tr><td align="center">$\leftrightarrow$ <strong>\leftrightarrow</strong></td><td align="center">$\nleftarrow$ <strong>\nleftarrow</strong></td><td align="center">$\nrightarrow$ <strong>\nrightarrow</strong></td><td align="center">$\rightharpoonup$ <strong>\rightharpoonup</strong></td><td align="center">$\leftharpoonup$ <strong>\leftharpoonup</strong></td></tr><tr><td align="center">$\nleftrightarrow$ <strong>\nleftrightarrow</strong></td><td align="center">$\Leftrightarrow$ <strong>\Leftrightarrow</strong></td><td align="center">$\nLeftrightarrow$ <strong>\nLeftrightarrow</strong></td><td align="center">$\nLeftarrow$ <strong>\nLeftarrow</strong></td><td align="center">$\nRightarrow$ <strong>\nRightarrow</strong></td></tr></tbody></table><h1 id="几何学"><a href="#几何学" class="headerlink" title="几何学"></a>几何学</h1><table><thead><tr><th align="center">$\angle$ \angle</th><th align="center">$\sphericalangle$ \sphericalangle</th><th align="center">$\nmid$ \nmid</th><th align="center">$\nparallel$ \nparallel</th><th align="center">$\blacksquare$ \blacksquare</th></tr></thead><tbody><tr><td align="center">$\star$ <strong>\star</strong></td><td align="center">$\bullet$ <strong>\bullet</strong></td><td align="center">$\bigstar$ <strong>\bigstar</strong></td><td align="center">$\square$ <strong>\square</strong></td><td align="center">$\circ$ <strong>\circ</strong></td></tr></tbody></table><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><table><thead><tr><th align="center">$\Pr$ \Pr</th><th align="center">$\sin$ \sin</th><th align="center">$\cos$ \cos</th><th align="center">$\exp$ \exp</th><th align="center">$\det$ \det</th></tr></thead><tbody><tr><td align="center">$\lim$ <strong>\lim</strong></td><td align="center">$\ln$ <strong>\ln</strong></td><td align="center">$\log$ <strong>\log</strong></td><td align="center">$\max$ <strong>\max</strong></td><td align="center">$\min$ <strong>\min</strong></td></tr><tr><td align="center">$\tan$ <strong>\tan</strong></td><td align="center">$\arg$ <strong>\arg</strong></td><td align="center">$\lg$ <strong>\lg</strong></td><td align="center">$\arcsin$ <strong>\arcsin</strong></td><td align="center">$\cot$ <strong>\cot</strong></td></tr><tr><td align="center">$\sh$ <strong>\sh</strong></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h1 id="强调符号"><a href="#强调符号" class="headerlink" title="强调符号"></a>强调符号</h1><table><thead><tr><th align="center">$\dot{a}$ \dot{a}</th><th align="center">$\ddot{a}$ \ddot{a}</th><th align="center">$\hat{a}$ \hat{a}</th><th align="center">$\tilde{a}$ \tilde{a}</th><th align="center">$\bar{a}$ \bar{a}</th></tr></thead><tbody><tr><td align="center">$\vec{a}$ <strong>\vec{a}</strong></td><td align="center">$\overline{xyz}$ <strong>\overline{xyz}</strong></td><td align="center">$\widehat{xyz}$ <strong>\widehat{xyz}</strong></td><td align="center">$\widetilde{xyz}$ <strong>\widetilde{xyz}</strong></td><td align="center">$\check{a}$ <strong>\check{a}</strong></td></tr><tr><td align="center">$\acute{a}$ <strong>\acute{a}</strong></td><td align="center">$\grave{a}$ <strong>\grave{a}</strong></td><td align="center">$\breve{a}$ <strong>\breve{a}</strong></td><td align="center"></td><td align="center"></td></tr></tbody></table><h1 id="空白符号"><a href="#空白符号" class="headerlink" title="空白符号"></a>空白符号</h1><table><thead><tr><th align="center">$a\qquad{b}$ <strong>a\qquad{b}</strong></th><th align="center">$a\quad{b}$ <strong>a\quad{b}</strong></th><th align="center">$a \ b$ <strong>a \ b</strong></th><th align="center">$a ; b$ <strong>a\ ; b</strong></th><th align="center">$a , b$ <strong>a \, b</strong></th></tr></thead><tbody><tr><td align="center">$a b$ <strong>a b</strong></td><td align="center">$a ! b$ <strong>a \! b</strong></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h1 id="省略符号"><a href="#省略符号" class="headerlink" title="省略符号"></a>省略符号</h1><table><thead><tr><th align="center">$\cdots$ \cdots</th><th align="center">$\ldots$ \ldots</th><th align="center">$\vdots$ \vdots</th><th align="center">$\ddots$ \ddots</th></tr></thead></table><h1 id="数值编号"><a href="#数值编号" class="headerlink" title="数值编号"></a>数值编号</h1><table><thead><tr><th align="center">Ⅰ</th><th align="center">Ⅱ</th><th align="center">Ⅲ</th><th align="center">Ⅳ</th><th align="center">Ⅴ</th><th align="center">Ⅵ</th><th align="center">Ⅶ</th><th align="center">Ⅷ</th><th align="center">Ⅸ</th><th align="center">Ⅹ</th><th align="center">Ⅺ</th><th align="center">Ⅻ</th></tr></thead><tbody><tr><td align="center">①</td><td align="center">②</td><td align="center">③</td><td align="center">④</td><td align="center">⑤</td><td align="center">⑥</td><td align="center">⑦</td><td align="center">⑧</td><td align="center">⑨</td><td align="center">⑩</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">⑴</td><td align="center">⑵</td><td align="center">⑶</td><td align="center">⑷</td><td align="center">⑸</td><td align="center">⑹</td><td align="center">⑺</td><td align="center">⑻</td><td align="center">⑼</td><td align="center">⑽</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">㈠</td><td align="center">㈡</td><td align="center">㈢</td><td align="center">㈣</td><td align="center">㈤</td><td align="center">㈥</td><td align="center">㈦</td><td align="center">㈧</td><td align="center">㈨</td><td align="center">㈩</td><td align="center"></td><td align="center"></td></tr></tbody></table><h1 id="分式"><a href="#分式" class="headerlink" title="分式"></a>分式</h1><p>基本格式：<br><code>\frac{分子}{分母}</code> → $\frac{分子}{分母}$</p><p>样例：<br>$\frac{dy}{dx}$ ← <code>\frac{dy}{dx}</code></p><p>$\frac{\partial{y}}{\partial{x}}$ ← <code>\frac{\partial{y}}{\partial{x}}</code></p><h1 id="上下标"><a href="#上下标" class="headerlink" title="上下标"></a>上下标</h1><p>基本格式：<br><code>anytext_{downtext}^{uptext}</code> → $anytext_{downtext}^{uptext}$</p><p>也可以颠倒过来：<code>anytext^{uptext}\_{downtext}</code></p><p>还可以只加一种：<code>anytext_{downtext}</code> 或 <code>anytext^{uptext}</code></p><p>样例：<br><br>$x^{2}$ ← x^{2}<br><br>$H_{2}O$ ← H_{2}O</p><h1 id="根式"><a href="#根式" class="headerlink" title="根式"></a>根式</h1><p>基本格式：<br><code>\sqrt[开根幂次数]{被开根数}</code> → $\sqrt[开根幂次数]{被开根数}$</p><p>样例：<br><br>$\sqrt{2}$ ← \sqrt{2}<br><br>$\sqrt[3]{2}$ ← \sqrt[3]{2}<br><br>$\sqrt[n]{3}$ ← \sqrt[n]{3}</p><h1 id="积分"><a href="#积分" class="headerlink" title="积分"></a>积分</h1><p>基本格式：<br><code>\int_{积分下限}^{积分上限}</code> → $\int_{积分下限}^{积分上限}$</p><p>也可以颠倒过来：<code>\int^{积分上限}_{积分下限}</code></p><p>样例：<br><code>\int^{3}_{8}x^3dx</code> → $\int^{3}_{8}x^3dx$</p><h1 id="求积"><a href="#求积" class="headerlink" title="求积"></a>求积</h1><p>基本格式：<br><code>\prod_{downtext}^{uptext}{text}</code> → $\prod_{downtext}^{uptext}{text}$</p><p>样例：<br><code>\prod_{k=1}^{n}f(k)</code> → $\prod_{k=1}^{n}f(k)$</p><p>要想把上下标放到求和/求积符号上方和下方，则格式为：<br><code>\prod\limits_{k=1}^{n}f(k)</code> → $\prod\limits_{k=1}^{n}f(k)$</p><h1 id="求和"><a href="#求和" class="headerlink" title="求和"></a>求和</h1><p><code>\sum\limits_{downtext}^{uptext}{text}</code> → $\sum\limits_{downtext}^{uptext}{text}$</p><p><code>\sum\limits_{i=1}^{n}{f(i)}</code> → $\sum\limits_{i=1}^{n}{f(i)}$</p><h1 id="极限"><a href="#极限" class="headerlink" title="极限"></a>极限</h1><p><code>\lim\limits_{x\to{0}}{\frac{\sin{x}}{x}}=1</code> → $\lim\limits_{x\to{0}}{\frac{\sin{x}}{x}}=1$</p><h1 id="数列"><a href="#数列" class="headerlink" title="数列"></a>数列</h1><p><code>A=\{a_{1},a_{2},\ldots,a_{n}\}</code> → $A={a_{1},a_{2},\ldots,a_{n}}$</p><h1 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h1><p><code>\begin{matrix} 0 &amp; 1 \\ 1 &amp; 0 \end{matrix}</code> → $\begin{matrix} 0 &amp; 1 \ 1 &amp; 0 \end{matrix}$</p><p><code>\begin{pmatrix} 0 &amp; -i \\ i &amp; 0 \end{pmatrix}</code> → $\begin{pmatrix} 0 &amp; -i \ i &amp; 0 \end{pmatrix}$</p><p><code>\begin{bmatrix} 0 &amp; -1 \\ 1 &amp; 0 \end{bmatrix}</code> → $\begin{bmatrix} 0 &amp; -1 \ 1 &amp; 0 \end{bmatrix}$</p><p><code>\begin{Bmatrix} 1 &amp; 0 \\ 0 &amp; -1 \end{Bmatrix}</code> → $\begin{Bmatrix} 1 &amp; 0 \ 0 &amp; -1 \end{Bmatrix}$</p><p><code>\begin{bmatrix} 1 &amp; 1 &amp; \ldots &amp; 1 \\ 2 &amp; 2^{2} &amp; \ldots &amp; 2^{n} \\ 3 &amp; 3^{2} &amp; \ldots &amp; 3^{n} \\ \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\ n &amp; n^{2} &amp; \ldots &amp; n^{n} \end{bmatrix}</code> → $\begin{bmatrix} 1 &amp; 1 &amp; \ldots &amp; 1 \ 2 &amp; 2^{2} &amp; \ldots &amp; 2^{n} \ 3 &amp; 3^{2} &amp; \ldots &amp; 3^{n} \ \vdots &amp; \vdots &amp; \ddots &amp; \vdots \ n &amp; n^{2} &amp; \ldots &amp; n^{n} \end{bmatrix}$</p><h1 id="行列式"><a href="#行列式" class="headerlink" title="行列式"></a>行列式</h1><p><code>\begin{vmatrix} a &amp; b \\ c &amp; d \end{vmatrix}</code> → $\begin{vmatrix} a &amp; b \ c &amp; d \end{vmatrix}$</p><p><code>\begin{Vmatrix} i &amp; 0 \\ 0 &amp; -i \end{Vmatrix}</code> → $\begin{Vmatrix} i &amp; 0 \ 0 &amp; -i \end{Vmatrix}$</p><h1 id="排列组合"><a href="#排列组合" class="headerlink" title="排列组合"></a>排列组合</h1><p><code>\binom{a}{b}</code>或<code>\tbinom{a}{b}</code> → $\binom{a}{b}$</p><p><code>\dbinom{a}{b}</code> → $\dbinom{a}{b}$</p><p><code>C_{3}^{1}</code> → $C_{3}^{1}$</p><p><code>A_{3}^{1}</code> → $A_{3}^{1}$</p><h1 id="分段函数"><a href="#分段函数" class="headerlink" title="分段函数"></a>分段函数</h1><p><code>\Psi_{A}(x)=\begin{cases}1, &amp; x\in{A} \\ 0, &amp; x\notin{A} \end{cases}</code> → $\Psi_{A}(x)=\begin{cases}1, &amp; x\in{A} \ 0, &amp; x\notin{A} \end{cases}$</p><h1 id="化学方程式"><a href="#化学方程式" class="headerlink" title="化学方程式"></a>化学方程式</h1><p><code>C+O_{2}\stackrel{点燃}{\longrightarrow}{CO_{2}}</code> → $C+O_{2}\stackrel{点燃}{\longrightarrow}{CO_{2}}$</p><h1 id="文本着色"><a href="#文本着色" class="headerlink" title="文本着色"></a>文本着色</h1><p><code>\textcolor{red}{a+b=c}</code> → $\textcolor{red}{a+b=c}$</p><h1 id="文本加粗"><a href="#文本加粗" class="headerlink" title="文本加粗"></a>文本加粗</h1><p>不加粗：<code>A</code> → $A$</p><p>加粗：<code>\textbf{A}</code> → $\textbf{A}$</p>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unicode与UTF-8</title>
      <link href="/2020/02/17/ji-suan-ji-ke-xue-ji-chu/unicode-yu-utf-8/"/>
      <url>/2020/02/17/ji-suan-ji-ke-xue-ji-chu/unicode-yu-utf-8/</url>
      
        <content type="html"><![CDATA[<h1 id="Unicode"><a href="#Unicode" class="headerlink" title="Unicode"></a>Unicode</h1><p>Unicode 联盟开发了 Unicode 标准，并与领先的标准开发组织（如 ISO、W3C 和 ECMA）开展了合作。。他们的目标是用标准的 Unicode 转换格式（UTF）替换现有的字符集。</p><p>由于 ISO-8859 中的字符集大小有限，在多语言环境中不兼容，因此 Unicode 联盟制定了 Unicode 标准。Unicode 标准涵盖了（几乎）世界上所有的字符、标点和符号。</p><p>Unicode 支持独立于平台和语言的文本处理、存储和传输。</p><p>Unicode 标准已经成功实现，并且以 HTML、XML、Java、JavaScript、电子邮件、ASP、PHP 等实现。在许多操作系统和所有现代浏览器中也支持 Unicode 标准。</p><h1 id="Unicode字符集"><a href="#Unicode字符集" class="headerlink" title="Unicode字符集"></a>Unicode字符集</h1><p>Unicode 可以通过不同的字符集来实现。最常用的编码是 UTF-8 和 UTF-16：</p><table><thead><tr><th>字符集</th><th>描述</th></tr></thead><tbody><tr><td>UTF-8</td><td>UTF8 中的字符长度可以是 1 到 4 个字节。 UTF-8 可以代表 Unicode 标准中的任何字符。 UTF-8 向后兼容ASCII。</td></tr><tr><td>UTF-16</td><td>16 位 Unicode 转换格式是 Unicode 的可变长度字符编码，能够编码整个 Unicode 编码。 UTF-16 用于主要的操作系统和环境，如 Microsoft Windows、Java 和 .NET。</td></tr></tbody></table><p>提示：Unicode 的前 128 个字符（与 ASCII 一一对应）使用与 ASCII 相同的二进制值的单个八位字节进行编码，使得有效的 ASCII 文本使用有效的 UTF-8 编码 Unicode。</p><p>如上所述，在存储和网络传输中，通常使用更为节省空间的变长编码方式 UTF-8，UTF-8 代表 8 位一组表示 Unicode 字符的格式，使用 1 - 4 个字节来表示字符。</p><p>其实还有UTF-32，我们让一个字符使用四个字节存储，也就是 32 位，这样就能涵盖现有 Unicode 包含的所有字符。但UTF-32浪费空间，比如使用 UTF-32 和 ASCII 分别对一个只有西文字母的文档编码，前者需要花费的空间是后者的四倍（ASCII 每个字符只需要一个字节存储，而UTF-32是四个字节）。</p><h1 id="Unicode和UTF-8的区别"><a href="#Unicode和UTF-8的区别" class="headerlink" title="Unicode和UTF-8的区别"></a>Unicode和UTF-8的区别</h1><p>Unicode 是一个字符集。 UTF-8 属于编码。<br>Unicode 是具有唯一十进制数字（代码点）的字符列表。 A = 65，B = 66，C = 67，….<br>这个十进制数字表示字符串“hello”：104 101 108 108 111<br>编码指的是如何将这些数字转换成存储在计算机中的二进制数字：<br>UTF-8 编码将像这样存储“hello”（二进制）：01101000 01100101 01101100 01101100 01101111<br>编码将数字转换为二进制。字符集将字符转换为数字。</p><h1 id="UTF-8的编码规则"><a href="#UTF-8的编码规则" class="headerlink" title="UTF-8的编码规则"></a>UTF-8的编码规则</h1><p>UTF-8 的编码规则如下（U+ 后面的数字代表 Unicode 字符代码）：</p><p>U+&amp;nbsp;&amp;nbsp;0000 ~ U+&amp;nbsp;&amp;nbsp;007F: <code>0XXXXXXX</code><br>U+&amp;nbsp;&amp;nbsp;0080 ~ U+&amp;nbsp;&amp;nbsp;07FF: <code>110XXXXX 10XXXXXX</code><br>U+&amp;nbsp;&amp;nbsp;0800 ~ U+&amp;nbsp;&amp;nbsp;FFFF: <code>1110XXXX 10XXXXXX 10XXXXXX</code><br>U+10000 ~ U+1FFFF: <code>11110XXX 10XXXXXX 10XXXXXX 10XXXXXX</code></p><p>可以看到，UTF-8 通过开头的标志位位数实现了变长。对于单字节字符，只占用一个字节，实现了向下兼容 ASCII，并且能和 UTF-32 一样，包含 Unicode 中的所有字符，又能有效减少存储传输过程中占用的空间。</p><h1 id="HTML中的Unicode编码"><a href="#HTML中的Unicode编码" class="headerlink" title="HTML中的Unicode编码"></a>HTML中的Unicode编码</h1><p>HTML4只支持UTF-8，而HTML5支持UTF-8和UTF-16。</p><table><thead><tr><th>字符码</th><th>十进制</th><th>十六进制</th></tr></thead><tbody><tr><td>C0 控制和基本拉丁语</td><td>0-127</td><td>0000-007F</td></tr><tr><td>C1 控制和 Latin-1</td><td>补充</td><td>128-255 0080-00FF</td></tr><tr><td>拉丁文扩展-A</td><td>256-383</td><td>0100-017F</td></tr><tr><td>拉丁文扩展-B</td><td>384-591</td><td>0180-024F</td></tr><tr><td>间距修饰符</td><td>688-767</td><td>02B0-02FF</td></tr><tr><td>变音符号</td><td>768-879</td><td>0300-036F</td></tr><tr><td>希腊和科普特</td><td>880-1023</td><td>0370-03FF</td></tr><tr><td>西里尔文基本</td><td>1024-1279</td><td>0400-04FF</td></tr><tr><td>西里尔文补充</td><td>1280-1327</td><td>0500-052F</td></tr><tr><td>一般标点符号</td><td>8192-8303</td><td>2000-206F</td></tr><tr><td>货币符号</td><td>8352-8399</td><td>20A0-20CF</td></tr><tr><td>类字母符号</td><td>8448-8527</td><td>2100-214F</td></tr><tr><td>箭头</td><td>8592-8703</td><td>2190-21FF</td></tr><tr><td>数学运算符</td><td>8704-8959</td><td>2200-22FF</td></tr><tr><td>框绘制</td><td>9472-9599</td><td>2500-257F</td></tr><tr><td>块元素</td><td>9600-9631</td><td>2580-259F</td></tr><tr><td>几何形状</td><td>9632-9727</td><td>25A0-25FF</td></tr><tr><td>杂项符号</td><td>9728-9983</td><td>2600-26FF</td></tr><tr><td>装饰符号</td><td>9984-10175</td><td>2700-27BF</td></tr></tbody></table><h1 id="Unicode编码与乱码"><a href="#Unicode编码与乱码" class="headerlink" title="Unicode编码与乱码"></a>Unicode编码与乱码</h1><h2 id="Servlet乱码"><a href="#Servlet乱码" class="headerlink" title="Servlet乱码"></a>Servlet乱码</h2><p>在进行请求参数传递时，经常会遇到请求数据为中文时的乱码问题，当Form表单的文本域中输入中文时会产生乱码问题，出现乱码的原因与客户端的请求编码方式（GET请求或POST请求）以及服务器的处理编码方式有关。</p><h3 id="POST请求乱码"><a href="#POST请求乱码" class="headerlink" title="POST请求乱码"></a>POST请求乱码</h3><p>浏览器会按当前显示页面所采用的字符集对请求的中文数据进行编码，而后再以报文体的形式传送给服务器，Servlet在调用getParameter()方法获取参数时，会以HttpServletRequest对象的getCharacterEncoding()方法返回的字符集对其进行解码，而该方法的返回值在未经过setCharacterEncoding(charset)方法设置编码的情况下为null，这时getParameter()方法将以服务器默认的“ISO-8859-1”字符集对参数进行解码，而“ISO-8859-1”字符集并不包含中文，于是造成中文参数的乱码问题。</p><p>解决办法：<br>在调用getParameter()方法前先调用setCharacterEncoding(charset)方法设定与页面请求编码相同的解码字符集。</p><h3 id="GET请求乱码"><a href="#GET请求乱码" class="headerlink" title="GET请求乱码"></a>GET请求乱码</h3><p>GET请求参数以“?”或“&amp;”为连接字符附加在URL地址后，根据网络标准RFC1738规定，只有字母和数字以及一些特殊符号和某些保留字才可以不经过编码直接用于URL，因此在请求参数为中文时必须先由浏览器进行编码后才能发送给服务器，服务器端对GET请求参数依照服务器本身默认的字符集进行解码。</p><p>在服务器端，由于GET请求参数是作为请求行发送给服务器的，因此Servlet在通过getParameter()获取请求参数时，并不能使用setCharacterEncoding(charset)方法指定的字符集进行解码，而是依照服务器本身默认的字符集进行解码。</p><p>Tomcat服务器各版本中默认的URIEncoding字符集并不完全相同，例如，Tomcat6和Tomcat7都默认为“ISO-8859-1”，这类版本中，对于GET请求的中文参数必须经处理后才会避免乱码问题，因此在实际开发中尽量避免使用GET请求来传递中文参数。</p><h2 id="Matplotlib乱码"><a href="#Matplotlib乱码" class="headerlink" title="Matplotlib乱码"></a>Matplotlib乱码</h2><p>原版代码如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> matplotlib <span class="token keyword">as</span> mplmu <span class="token operator">=</span> <span class="token number">60.0</span>sigma <span class="token operator">=</span> <span class="token number">2.0</span>x <span class="token operator">=</span> mu <span class="token operator">+</span> sigma<span class="token operator">*</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>bins <span class="token operator">=</span> <span class="token number">50</span>fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>n<span class="token punctuation">,</span> bins<span class="token punctuation">,</span> patches <span class="token operator">=</span> ax<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>x<span class="token punctuation">,</span> bins<span class="token punctuation">,</span> density<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> histtype<span class="token operator">=</span><span class="token string">"bar"</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">"#99FF33"</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">"#00FF99"</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.75</span><span class="token punctuation">)</span>y <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>power<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token operator">*</span>sigma<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span>np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token operator">*</span>np<span class="token punctuation">.</span>power<span class="token punctuation">(</span><span class="token punctuation">(</span>bins<span class="token operator">-</span>mu<span class="token punctuation">)</span><span class="token operator">/</span>sigma<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>bins<span class="token punctuation">,</span> y<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"#7744FF"</span><span class="token punctuation">,</span> ls<span class="token operator">=</span><span class="token string">"--"</span><span class="token punctuation">,</span> lw<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>ls<span class="token operator">=</span><span class="token string">":"</span><span class="token punctuation">,</span> lw<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"gray"</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token string">r"$y=\frac{1}{\sqrt{2\pi}\sigma}e^{-\frac{(x-\mu)^2}{2\sigma^2}}$"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">"color"</span><span class="token punctuation">:</span><span class="token string">"#FF5511"</span><span class="token punctuation">,</span> <span class="token string">"fontsize"</span><span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span><span class="token string">"体重"</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">"概率密度"</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">r"体重的直方图：$\mu=60.0$, $\sigma=2.0$"</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来就会出现异常情况，绘图如下：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/Unicode%E4%B8%8EUTF-8/1.png"></p><p>修复方法：加上utf-8题头的注释。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding:utf-8 -*-</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>随后，加入如下两行代码：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">mpl<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">"font.sans-serif"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"KaiTi"</span><span class="token punctuation">]</span>mpl<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">"axes.unicode_minus"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">False</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>修复结果：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/Unicode%E4%B8%8EUTF-8/2.png"></p><h2 id="CLion乱码"><a href="#CLion乱码" class="headerlink" title="CLion乱码"></a>CLion乱码</h2><p>乱码情况：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/Unicode%E4%B8%8EUTF-8/3.png"></p><h3 id="修改编辑器编码类型"><a href="#修改编辑器编码类型" class="headerlink" title="修改编辑器编码类型"></a>修改编辑器编码类型</h3><p>打开 File → Settings…：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/Unicode%E4%B8%8EUTF-8/4.png"></p><p>选择 Editor，再选中 File Encodings：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/Unicode%E4%B8%8EUTF-8/5.png"></p><p>调为UTF-8，完成设置，然后点OK：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/Unicode%E4%B8%8EUTF-8/6.png"></p><p>底部还有UTF-8：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/Unicode%E4%B8%8EUTF-8/7.png"></p><p>改成GBK：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/Unicode%E4%B8%8EUTF-8/8.png"></p><p>还有个弹窗，点Convert即可完成设置。</p><p>重新运行：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/Unicode%E4%B8%8EUTF-8/9.png"></p><p>该方法适用于其他JetBrains公司的IDE。</p><h3 id="修改Registry配置"><a href="#修改Registry配置" class="headerlink" title="修改Registry配置"></a>修改Registry配置</h3><p>文件是UTF-8格式，对于CLion命令行输出中文乱码的问题，解决方法是输入<code>Ctrl+Shift+Alt+/</code>：</p><p><img src="/../../images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%9F%BA%E7%A1%80/Unicode%E4%B8%8EUTF-8/10.png"></p><p>修改后即可在命令行看到正确不乱码的输出！</p>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编码格式 </tag>
            
            <tag> Unicode </tag>
            
            <tag> UTF-8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ASCII码表</title>
      <link href="/2019/10/20/ji-suan-ji-ke-xue-ji-chu/ascii-ma-biao/"/>
      <url>/2019/10/20/ji-suan-ji-ke-xue-ji-chu/ascii-ma-biao/</url>
      
        <content type="html"><![CDATA[<p>没有必要背诵ASCII码，但掌握ASCII的各种知识也是重要的，本文为你介绍这些知识。</p><h1 id="ASCII码表"><a href="#ASCII码表" class="headerlink" title="ASCII码表"></a>ASCII码表</h1><table><thead><tr><th align="center">Bin(二进制)</th><th align="center">Oct(八进制)</th><th align="center">Dec(十进制)</th><th align="center">Hex(十六进制)</th><th align="center">缩写/字符</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">00000000</td><td align="center">000</td><td align="center">0</td><td align="center">0x00</td><td align="center">NUL(null)</td><td align="center">空字符</td></tr><tr><td align="center">00000001</td><td align="center">001</td><td align="center">1</td><td align="center">0x01</td><td align="center">SOH(start of headling)</td><td align="center">标题开始</td></tr><tr><td align="center">00000010</td><td align="center">002</td><td align="center">2</td><td align="center">0x02</td><td align="center">STX (start of text)</td><td align="center">正文开始</td></tr><tr><td align="center">00000011</td><td align="center">003</td><td align="center">3</td><td align="center">0x03</td><td align="center">ETX (end of text)</td><td align="center">正文结束</td></tr><tr><td align="center">00000100</td><td align="center">004</td><td align="center">4</td><td align="center">0x04</td><td align="center">EOT (end of transmission)</td><td align="center">传输结束</td></tr><tr><td align="center">00000101</td><td align="center">005</td><td align="center">5</td><td align="center">0x05</td><td align="center">ENQ (enquiry)</td><td align="center">请求</td></tr><tr><td align="center">00000110</td><td align="center">006</td><td align="center">6</td><td align="center">0x06</td><td align="center">ACK (acknowledge)</td><td align="center">收到通知</td></tr><tr><td align="center">00000111</td><td align="center">007</td><td align="center">7</td><td align="center">0x07</td><td align="center">BEL (bell)</td><td align="center">响铃</td></tr><tr><td align="center">00001000</td><td align="center">010</td><td align="center">8</td><td align="center">0x08</td><td align="center">BS (backspace)</td><td align="center">退格</td></tr><tr><td align="center">00001001</td><td align="center">011</td><td align="center">9</td><td align="center">0x09</td><td align="center">HT (horizontal tab)</td><td align="center">水平制表符</td></tr><tr><td align="center">00001010</td><td align="center">012</td><td align="center">10</td><td align="center">0x0A</td><td align="center">LF (NL line feed, new line)</td><td align="center">换行键</td></tr><tr><td align="center">00001011</td><td align="center">013</td><td align="center">11</td><td align="center">0x0B</td><td align="center">VT (vertical tab)</td><td align="center">垂直制表符</td></tr><tr><td align="center">00001100</td><td align="center">014</td><td align="center">12</td><td align="center">0x0C</td><td align="center">FF (NP form feed, new page)</td><td align="center">换页键</td></tr><tr><td align="center">00001101</td><td align="center">015</td><td align="center">13</td><td align="center">0x0D</td><td align="center">CR (carriage return)</td><td align="center">回车键</td></tr><tr><td align="center">00001110</td><td align="center">016</td><td align="center">14</td><td align="center">0x0E</td><td align="center">SO (shift out)</td><td align="center">不用切换</td></tr><tr><td align="center">00001111</td><td align="center">017</td><td align="center">15</td><td align="center">0x0F</td><td align="center">SI (shift in)</td><td align="center">启用切换</td></tr><tr><td align="center">00010000</td><td align="center">020</td><td align="center">16</td><td align="center">0x10</td><td align="center">DLE (data link escape)</td><td align="center">数据链路转义</td></tr><tr><td align="center">00010001</td><td align="center">021</td><td align="center">17</td><td align="center">0x11</td><td align="center">DC1 (device control 1)</td><td align="center">设备控制1</td></tr><tr><td align="center">00010010</td><td align="center">022</td><td align="center">18</td><td align="center">0x12</td><td align="center">DC2 (device control 2)</td><td align="center">设备控制2</td></tr><tr><td align="center">00010011</td><td align="center">023</td><td align="center">19</td><td align="center">0x13</td><td align="center">DC3 (device control 3)</td><td align="center">设备控制3</td></tr><tr><td align="center">00010100</td><td align="center">024</td><td align="center">20</td><td align="center">0x14</td><td align="center">DC4 (device control 4)</td><td align="center">设备控制4</td></tr><tr><td align="center">00010101</td><td align="center">025</td><td align="center">21</td><td align="center">0x15</td><td align="center">NAK (negative acknowledge)</td><td align="center">拒绝接收</td></tr><tr><td align="center">00010110</td><td align="center">026</td><td align="center">22</td><td align="center">0x16</td><td align="center">SYN (synchronous idle)</td><td align="center">同步空闲</td></tr><tr><td align="center">00010111</td><td align="center">027</td><td align="center">23</td><td align="center">0x17</td><td align="center">ETB (end of trans. block)</td><td align="center">传输块结束</td></tr><tr><td align="center">00011000</td><td align="center">030</td><td align="center">24</td><td align="center">0x18</td><td align="center">CAN (cancel)</td><td align="center">取消</td></tr><tr><td align="center">00011001</td><td align="center">031</td><td align="center">25</td><td align="center">0x19</td><td align="center">EM (end of medium)</td><td align="center">介质中断</td></tr><tr><td align="center">00011010</td><td align="center">032</td><td align="center">26</td><td align="center">0x1A</td><td align="center">SUB (substitute)</td><td align="center">替补</td></tr><tr><td align="center">00011011</td><td align="center">033</td><td align="center">27</td><td align="center">0x1B</td><td align="center">ESC (escape)</td><td align="center">溢出</td></tr><tr><td align="center">00011100</td><td align="center">034</td><td align="center">28</td><td align="center">0x1C</td><td align="center">FS (file separator)</td><td align="center">文件分割符</td></tr><tr><td align="center">00011101</td><td align="center">035</td><td align="center">29</td><td align="center">0x1D</td><td align="center">GS (group separator)</td><td align="center">分组符</td></tr><tr><td align="center">00011110</td><td align="center">036</td><td align="center">30</td><td align="center">0x1E</td><td align="center">RS (record separator)</td><td align="center">记录分离符</td></tr><tr><td align="center">00011111</td><td align="center">037</td><td align="center">31</td><td align="center">0x1F</td><td align="center">US (unit separator)</td><td align="center">单元分隔符</td></tr><tr><td align="center">00100000</td><td align="center">040</td><td align="center">32</td><td align="center">0x20</td><td align="center">(space)</td><td align="center">空格</td></tr><tr><td align="center">00100001</td><td align="center">041</td><td align="center">33</td><td align="center">0x21</td><td align="center">!</td><td align="center"></td></tr><tr><td align="center">00100010</td><td align="center">042</td><td align="center">34</td><td align="center">0x22</td><td align="center">“</td><td align="center"></td></tr><tr><td align="center">00100011</td><td align="center">043</td><td align="center">35</td><td align="center">0x23</td><td align="center">#</td><td align="center"></td></tr><tr><td align="center">00100100</td><td align="center">044</td><td align="center">36</td><td align="center">0x24</td><td align="center">$</td><td align="center"></td></tr><tr><td align="center">00100101</td><td align="center">045</td><td align="center">37</td><td align="center">0x25</td><td align="center">%</td><td align="center"></td></tr><tr><td align="center">00100110</td><td align="center">046</td><td align="center">38</td><td align="center">0x26</td><td align="center">&amp;</td><td align="center"></td></tr><tr><td align="center">00100111</td><td align="center">047</td><td align="center">39</td><td align="center">0x27</td><td align="center">‘</td><td align="center"></td></tr><tr><td align="center">00101000</td><td align="center">050</td><td align="center">40</td><td align="center">0x28</td><td align="center">(</td><td align="center"></td></tr><tr><td align="center">00101001</td><td align="center">051</td><td align="center">41</td><td align="center">0x29</td><td align="center">)</td><td align="center"></td></tr><tr><td align="center">00101010</td><td align="center">052</td><td align="center">42</td><td align="center">0x2A</td><td align="center">*</td><td align="center"></td></tr><tr><td align="center">00101011</td><td align="center">053</td><td align="center">43</td><td align="center">0x2B</td><td align="center">+</td><td align="center"></td></tr><tr><td align="center">00101100</td><td align="center">054</td><td align="center">44</td><td align="center">0x2C</td><td align="center">,</td><td align="center"></td></tr><tr><td align="center">00101101</td><td align="center">055</td><td align="center">45</td><td align="center">0x2D</td><td align="center">-</td><td align="center"></td></tr><tr><td align="center">00101110</td><td align="center">056</td><td align="center">46</td><td align="center">0x2E</td><td align="center">.</td><td align="center"></td></tr><tr><td align="center">00101111</td><td align="center">057</td><td align="center">47</td><td align="center">0x2F</td><td align="center">/</td><td align="center"></td></tr><tr><td align="center">00110000</td><td align="center">060</td><td align="center">48</td><td align="center">0x30</td><td align="center">0</td><td align="center"></td></tr><tr><td align="center">00110001</td><td align="center">061</td><td align="center">49</td><td align="center">0x31</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">00110010</td><td align="center">062</td><td align="center">50</td><td align="center">0x32</td><td align="center">2</td><td align="center"></td></tr><tr><td align="center">00110011</td><td align="center">063</td><td align="center">51</td><td align="center">0x33</td><td align="center">3</td><td align="center"></td></tr><tr><td align="center">00110100</td><td align="center">064</td><td align="center">52</td><td align="center">0x34</td><td align="center">4</td><td align="center"></td></tr><tr><td align="center">00110101</td><td align="center">065</td><td align="center">53</td><td align="center">0x35</td><td align="center">5</td><td align="center"></td></tr><tr><td align="center">00110110</td><td align="center">066</td><td align="center">54</td><td align="center">0x36</td><td align="center">6</td><td align="center"></td></tr><tr><td align="center">00110111</td><td align="center">067</td><td align="center">55</td><td align="center">0x37</td><td align="center">7</td><td align="center"></td></tr><tr><td align="center">00111000</td><td align="center">070</td><td align="center">56</td><td align="center">0x38</td><td align="center">8</td><td align="center"></td></tr><tr><td align="center">00111001</td><td align="center">071</td><td align="center">57</td><td align="center">0x39</td><td align="center">9</td><td align="center"></td></tr><tr><td align="center">00111010</td><td align="center">072</td><td align="center">58</td><td align="center">0x3A</td><td align="center">:</td><td align="center"></td></tr><tr><td align="center">00111011</td><td align="center">073</td><td align="center">59</td><td align="center">0x3B</td><td align="center">;</td><td align="center"></td></tr><tr><td align="center">00111100</td><td align="center">074</td><td align="center">60</td><td align="center">0x3C</td><td align="center">&lt;</td><td align="center"></td></tr><tr><td align="center">00111101</td><td align="center">075</td><td align="center">61</td><td align="center">0x3D</td><td align="center">=</td><td align="center"></td></tr><tr><td align="center">00111110</td><td align="center">076</td><td align="center">62</td><td align="center">0x3E</td><td align="center">&gt;</td><td align="center"></td></tr><tr><td align="center">00111111</td><td align="center">077</td><td align="center">63</td><td align="center">0x3F</td><td align="center">?</td><td align="center"></td></tr><tr><td align="center">01000000</td><td align="center">100</td><td align="center">64</td><td align="center">0x40</td><td align="center">@</td><td align="center"></td></tr><tr><td align="center">01000001</td><td align="center">101</td><td align="center">65</td><td align="center">0x41</td><td align="center">A</td><td align="center"></td></tr><tr><td align="center">01000010</td><td align="center">102</td><td align="center">66</td><td align="center">0x42</td><td align="center">B</td><td align="center"></td></tr><tr><td align="center">01000011</td><td align="center">103</td><td align="center">67</td><td align="center">0x43</td><td align="center">C</td><td align="center"></td></tr><tr><td align="center">01000100</td><td align="center">104</td><td align="center">68</td><td align="center">0x44</td><td align="center">D</td><td align="center"></td></tr><tr><td align="center">01000101</td><td align="center">105</td><td align="center">69</td><td align="center">0x45</td><td align="center">E</td><td align="center"></td></tr><tr><td align="center">01000110</td><td align="center">106</td><td align="center">70</td><td align="center">0x46</td><td align="center">F</td><td align="center"></td></tr><tr><td align="center">01000111</td><td align="center">107</td><td align="center">71</td><td align="center">0x47</td><td align="center">G</td><td align="center"></td></tr><tr><td align="center">01001000</td><td align="center">110</td><td align="center">72</td><td align="center">0x48</td><td align="center">H</td><td align="center"></td></tr><tr><td align="center">01001001</td><td align="center">111</td><td align="center">73</td><td align="center">0x49</td><td align="center">I</td><td align="center"></td></tr><tr><td align="center">01001010</td><td align="center">112</td><td align="center">74</td><td align="center">0x4A</td><td align="center">J</td><td align="center"></td></tr><tr><td align="center">01001011</td><td align="center">113</td><td align="center">75</td><td align="center">0x4B</td><td align="center">K</td><td align="center"></td></tr><tr><td align="center">01001100</td><td align="center">114</td><td align="center">76</td><td align="center">0x4C</td><td align="center">L</td><td align="center"></td></tr><tr><td align="center">01001101</td><td align="center">115</td><td align="center">77</td><td align="center">0x4D</td><td align="center">M</td><td align="center"></td></tr><tr><td align="center">01001110</td><td align="center">116</td><td align="center">78</td><td align="center">0x4E</td><td align="center">N</td><td align="center"></td></tr><tr><td align="center">01001111</td><td align="center">117</td><td align="center">79</td><td align="center">0x4F</td><td align="center">O</td><td align="center"></td></tr><tr><td align="center">01010000</td><td align="center">120</td><td align="center">80</td><td align="center">0x50</td><td align="center">P</td><td align="center"></td></tr><tr><td align="center">01010001</td><td align="center">121</td><td align="center">81</td><td align="center">0x51</td><td align="center">Q</td><td align="center"></td></tr><tr><td align="center">01010010</td><td align="center">122</td><td align="center">82</td><td align="center">0x52</td><td align="center">R</td><td align="center"></td></tr><tr><td align="center">01010011</td><td align="center">123</td><td align="center">83</td><td align="center">0x53</td><td align="center">S</td><td align="center"></td></tr><tr><td align="center">01010100</td><td align="center">124</td><td align="center">84</td><td align="center">0x54</td><td align="center">T</td><td align="center"></td></tr><tr><td align="center">01010101</td><td align="center">125</td><td align="center">85</td><td align="center">0x55</td><td align="center">U</td><td align="center"></td></tr><tr><td align="center">01010110</td><td align="center">126</td><td align="center">86</td><td align="center">0x56</td><td align="center">V</td><td align="center"></td></tr><tr><td align="center">01010111</td><td align="center">127</td><td align="center">87</td><td align="center">0x57</td><td align="center">W</td><td align="center"></td></tr><tr><td align="center">01011000</td><td align="center">130</td><td align="center">88</td><td align="center">0x58</td><td align="center">X</td><td align="center"></td></tr><tr><td align="center">01011001</td><td align="center">131</td><td align="center">89</td><td align="center">0x59</td><td align="center">Y</td><td align="center"></td></tr><tr><td align="center">01011010</td><td align="center">132</td><td align="center">90</td><td align="center">0x5A</td><td align="center">Z</td><td align="center"></td></tr><tr><td align="center">01011011</td><td align="center">133</td><td align="center">91</td><td align="center">0x5B</td><td align="center">[</td><td align="center"></td></tr><tr><td align="center">01011100</td><td align="center">134</td><td align="center">92</td><td align="center">0x5C</td><td align="center">\</td><td align="center"></td></tr><tr><td align="center">01011101</td><td align="center">135</td><td align="center">93</td><td align="center">0x5D</td><td align="center">]</td><td align="center"></td></tr><tr><td align="center">01011110</td><td align="center">136</td><td align="center">94</td><td align="center">0x5E</td><td align="center">^</td><td align="center"></td></tr><tr><td align="center">01011111</td><td align="center">137</td><td align="center">95</td><td align="center">0x5F</td><td align="center">_</td><td align="center"></td></tr><tr><td align="center">01100000</td><td align="center">140</td><td align="center">96</td><td align="center">0x60</td><td align="center">`</td><td align="center"></td></tr><tr><td align="center">01100001</td><td align="center">141</td><td align="center">97</td><td align="center">0x61</td><td align="center">a</td><td align="center"></td></tr><tr><td align="center">01100010</td><td align="center">142</td><td align="center">98</td><td align="center">0x62</td><td align="center">b</td><td align="center"></td></tr><tr><td align="center">01100011</td><td align="center">143</td><td align="center">99</td><td align="center">0x63</td><td align="center">c</td><td align="center"></td></tr><tr><td align="center">01100100</td><td align="center">144</td><td align="center">100</td><td align="center">0x64</td><td align="center">d</td><td align="center"></td></tr><tr><td align="center">01100101</td><td align="center">145</td><td align="center">101</td><td align="center">0x65</td><td align="center">e</td><td align="center"></td></tr><tr><td align="center">01100110</td><td align="center">146</td><td align="center">102</td><td align="center">0x66</td><td align="center">f</td><td align="center"></td></tr><tr><td align="center">01100111</td><td align="center">147</td><td align="center">103</td><td align="center">0x67</td><td align="center">g</td><td align="center"></td></tr><tr><td align="center">01101000</td><td align="center">150</td><td align="center">104</td><td align="center">0x68</td><td align="center">h</td><td align="center"></td></tr><tr><td align="center">1101001</td><td align="center">151</td><td align="center">105</td><td align="center">0x69</td><td align="center">i</td><td align="center"></td></tr><tr><td align="center">01101010</td><td align="center">152</td><td align="center">106</td><td align="center">0x6A</td><td align="center">j</td><td align="center"></td></tr><tr><td align="center">01101011</td><td align="center">153</td><td align="center">107</td><td align="center">0x6B</td><td align="center">k</td><td align="center"></td></tr><tr><td align="center">01101100</td><td align="center">154</td><td align="center">108</td><td align="center">0x6C</td><td align="center">l</td><td align="center"></td></tr><tr><td align="center">01101101</td><td align="center">155</td><td align="center">109</td><td align="center">0x6D</td><td align="center">m</td><td align="center"></td></tr><tr><td align="center">01101110</td><td align="center">156</td><td align="center">110</td><td align="center">0x6E</td><td align="center">n</td><td align="center"></td></tr><tr><td align="center">01101111</td><td align="center">157</td><td align="center">111</td><td align="center">0x6F</td><td align="center">o</td><td align="center"></td></tr><tr><td align="center">01110000</td><td align="center">160</td><td align="center">112</td><td align="center">0x70</td><td align="center">p</td><td align="center"></td></tr><tr><td align="center">01110001</td><td align="center">161</td><td align="center">113</td><td align="center">0x71</td><td align="center">q</td><td align="center"></td></tr><tr><td align="center">01110010</td><td align="center">162</td><td align="center">114</td><td align="center">0x72</td><td align="center">r</td><td align="center"></td></tr><tr><td align="center">01110011</td><td align="center">163</td><td align="center">115</td><td align="center">0x73</td><td align="center">s</td><td align="center"></td></tr><tr><td align="center">01110100</td><td align="center">164</td><td align="center">116</td><td align="center">0x74</td><td align="center">t</td><td align="center"></td></tr><tr><td align="center">01110101</td><td align="center">165</td><td align="center">117</td><td align="center">0x75</td><td align="center">u</td><td align="center"></td></tr><tr><td align="center">01110110</td><td align="center">166</td><td align="center">118</td><td align="center">0x76</td><td align="center">v</td><td align="center"></td></tr><tr><td align="center">01110111</td><td align="center">167</td><td align="center">119</td><td align="center">0x77</td><td align="center">w</td><td align="center"></td></tr><tr><td align="center">01111000</td><td align="center">170</td><td align="center">120</td><td align="center">0x78</td><td align="center">x</td><td align="center"></td></tr><tr><td align="center">01111001</td><td align="center">171</td><td align="center">121</td><td align="center">0x79</td><td align="center">y</td><td align="center"></td></tr><tr><td align="center">01111010</td><td align="center">172</td><td align="center">122</td><td align="center">0x7A</td><td align="center">z</td><td align="center"></td></tr><tr><td align="center">01111011</td><td align="center">173</td><td align="center">123</td><td align="center">0x7B</td><td align="center">{</td><td align="center"></td></tr><tr><td align="center">01111100</td><td align="center">174</td><td align="center">124</td><td align="center">0x7C</td><td align="center">|</td><td align="center"></td></tr><tr><td align="center">01111101</td><td align="center">175</td><td align="center">125</td><td align="center">0x7D</td><td align="center">}</td><td align="center"></td></tr><tr><td align="center">01111110</td><td align="center">176</td><td align="center">126</td><td align="center">0x7E</td><td align="center">~</td><td align="center"></td></tr><tr><td align="center">01111111</td><td align="center">177</td><td align="center">127</td><td align="center">0x7F</td><td align="center">DEL (delete)</td><td align="center">删除</td></tr></tbody></table><h1 id="常见ASCII码的大小规则"><a href="#常见ASCII码的大小规则" class="headerlink" title="常见ASCII码的大小规则"></a>常见ASCII码的大小规则</h1><p><strong>基本规则：[0 ~ 9] &lt; [A ~ Z] &lt; [a ~ z]</strong></p><ul><li>数字比字母要小。如 “7”&lt;“F”</li><li>数字0比数字9要小，并按0到9顺序递增。如’0’ &lt; ‘9’ </li><li>字母A比字母Z要小，并按A到Z顺序递增。如’A’ &lt; ‘Z’ </li><li>同个字母的大写字母比小写字母要小32。如’A’ &lt; ‘a’</li></ul><h1 id="应该记住的几个ASCII码值"><a href="#应该记住的几个ASCII码值" class="headerlink" title="应该记住的几个ASCII码值"></a>应该记住的几个ASCII码值</h1><ul><li><strong>‘A’：65</strong></li><li><strong>‘a’：97</strong></li><li><strong>‘0’：48</strong></li></ul><h1 id="应该记住的几个ASCII码范围"><a href="#应该记住的几个ASCII码范围" class="headerlink" title="应该记住的几个ASCII码范围"></a>应该记住的几个ASCII码范围</h1><ul><li>0～31及127(共33个)是控制字符或通信专用字符（均为不可显示字符）</li><li>32～126(共95个)是字符(32是空格）（均为可显示字符）<ul><li>48～57为0到9十个阿拉伯数字</li><li>65～90为26个大写英文字母</li><li>97～122号为26个小写英文字母</li><li>其余为一些标点符号、运算符号等</li></ul></li></ul><h1 id="编程记不住ASCII码值怎么办"><a href="#编程记不住ASCII码值怎么办" class="headerlink" title="编程记不住ASCII码值怎么办"></a>编程记不住ASCII码值怎么办</h1><p>通过一个简单案例来说明这个问题，案例是<a href="https://blog.csdn.net/weixin_43896318/article/details/104059930">洛谷P1914题</a>：</p><blockquote><p>蒟蒻虽然忘记密码，但他还记得密码是由一个字符串组成。密码是由原文字符串（由不超过 50 个小写字母组成）中每个字母向后移动 nn 位形成的。z 的下一个字母是 a，如此循环。他现在找到了移动前的原文字符串及 nn，请你求出密码。</p></blockquote><p>Java实现代码是这样的：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> password_array <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> password_array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            password_array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span>password_array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token char">'a'</span> <span class="token operator">+</span> num<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">26</span> <span class="token operator">+</span> <span class="token char">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>password_array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        scanner<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你明白了吗？</p><h1 id="键盘按键对应的keyCode"><a href="#键盘按键对应的keyCode" class="headerlink" title="键盘按键对应的keyCode"></a>键盘按键对应的keyCode</h1><p>键盘按键也有其对应的ASCII码，而在前端编程中，这些keyCode也是需要了解的知识。</p><h2 id="数字键"><a href="#数字键" class="headerlink" title="数字键"></a>数字键</h2><table><thead><tr><th align="center">KeyCode</th><th align="center">按键</th></tr></thead><tbody><tr><td align="center">48</td><td align="center">0</td></tr><tr><td align="center">49</td><td align="center">1</td></tr><tr><td align="center">50</td><td align="center">2</td></tr><tr><td align="center">51</td><td align="center">3</td></tr><tr><td align="center">52</td><td align="center">4</td></tr><tr><td align="center">53</td><td align="center">5</td></tr><tr><td align="center">54</td><td align="center">6</td></tr><tr><td align="center">55</td><td align="center">7</td></tr><tr><td align="center">56</td><td align="center">8</td></tr><tr><td align="center">57</td><td align="center">9</td></tr></tbody></table><h2 id="字母键"><a href="#字母键" class="headerlink" title="字母键"></a>字母键</h2><table><thead><tr><th align="center">KeyCode</th><th align="center">按键</th></tr></thead><tbody><tr><td align="center">65</td><td align="center">A</td></tr><tr><td align="center">66</td><td align="center">B</td></tr><tr><td align="center">67</td><td align="center">C</td></tr><tr><td align="center">68</td><td align="center">D</td></tr><tr><td align="center">69</td><td align="center">E</td></tr><tr><td align="center">70</td><td align="center">F</td></tr><tr><td align="center">71</td><td align="center">G</td></tr><tr><td align="center">72</td><td align="center">H</td></tr><tr><td align="center">73</td><td align="center">I</td></tr><tr><td align="center">74</td><td align="center">J</td></tr><tr><td align="center">75</td><td align="center">K</td></tr><tr><td align="center">76</td><td align="center">L</td></tr><tr><td align="center">77</td><td align="center">M</td></tr><tr><td align="center">78</td><td align="center">N</td></tr><tr><td align="center">79</td><td align="center">O</td></tr><tr><td align="center">80</td><td align="center">P</td></tr><tr><td align="center">81</td><td align="center">Q</td></tr><tr><td align="center">82</td><td align="center">R</td></tr><tr><td align="center">83</td><td align="center">S</td></tr><tr><td align="center">84</td><td align="center">T</td></tr><tr><td align="center">85</td><td align="center">U</td></tr><tr><td align="center">86</td><td align="center">V</td></tr><tr><td align="center">87</td><td align="center">W</td></tr><tr><td align="center">88</td><td align="center">X</td></tr><tr><td align="center">89</td><td align="center">Y</td></tr><tr><td align="center">90</td><td align="center">Z</td></tr></tbody></table><h2 id="小键盘按键"><a href="#小键盘按键" class="headerlink" title="小键盘按键"></a>小键盘按键</h2><table><thead><tr><th align="center">KeyCode</th><th align="center">按键</th></tr></thead><tbody><tr><td align="center">96</td><td align="center">0</td></tr><tr><td align="center">97</td><td align="center">1</td></tr><tr><td align="center">98</td><td align="center">2</td></tr><tr><td align="center">99</td><td align="center">3</td></tr><tr><td align="center">100</td><td align="center">4</td></tr><tr><td align="center">101</td><td align="center">5</td></tr><tr><td align="center">102</td><td align="center">6</td></tr><tr><td align="center">103</td><td align="center">7</td></tr><tr><td align="center">104</td><td align="center">8</td></tr><tr><td align="center">105</td><td align="center">9</td></tr><tr><td align="center">106</td><td align="center">*</td></tr><tr><td align="center">107</td><td align="center">+</td></tr><tr><td align="center">108</td><td align="center">Enter</td></tr><tr><td align="center">109</td><td align="center">-</td></tr><tr><td align="center">110</td><td align="center">.</td></tr><tr><td align="center">111</td><td align="center">/</td></tr></tbody></table><h2 id="功能键"><a href="#功能键" class="headerlink" title="功能键"></a>功能键</h2><table><thead><tr><th align="center">KeyCode</th><th align="center">按键</th></tr></thead><tbody><tr><td align="center">112</td><td align="center">F1</td></tr><tr><td align="center">113</td><td align="center">F2</td></tr><tr><td align="center">114</td><td align="center">F3</td></tr><tr><td align="center">115</td><td align="center">F4</td></tr><tr><td align="center">116</td><td align="center">F5</td></tr><tr><td align="center">117</td><td align="center">F6</td></tr><tr><td align="center">118</td><td align="center">F7</td></tr><tr><td align="center">119</td><td align="center">F8</td></tr><tr><td align="center">120</td><td align="center">F9</td></tr><tr><td align="center">121</td><td align="center">F10</td></tr><tr><td align="center">122</td><td align="center">F11</td></tr><tr><td align="center">123</td><td align="center">F12</td></tr></tbody></table><h2 id="控制键"><a href="#控制键" class="headerlink" title="控制键"></a>控制键</h2><table><thead><tr><th align="center">KeyCode</th><th align="center">按键</th></tr></thead><tbody><tr><td align="center">8</td><td align="center">BackSpace</td></tr><tr><td align="center">9</td><td align="center">Tab</td></tr><tr><td align="center">12</td><td align="center">Clear</td></tr><tr><td align="center">13</td><td align="center">Enter</td></tr><tr><td align="center">16</td><td align="center">Shift</td></tr><tr><td align="center">17</td><td align="center">Control</td></tr><tr><td align="center">18</td><td align="center">Alt</td></tr><tr><td align="center">20</td><td align="center">Cape Lock</td></tr><tr><td align="center">27</td><td align="center">Esc</td></tr><tr><td align="center">32</td><td align="center">Spacebar</td></tr><tr><td align="center">33</td><td align="center">Page Up</td></tr><tr><td align="center">34</td><td align="center">Page Down</td></tr><tr><td align="center">35</td><td align="center">End</td></tr><tr><td align="center">36</td><td align="center">Home</td></tr><tr><td align="center">37</td><td align="center">Left Arrow</td></tr><tr><td align="center">38</td><td align="center">Up Arrow</td></tr><tr><td align="center">39</td><td align="center">Right Arrow</td></tr><tr><td align="center">40</td><td align="center">Dw Arrow</td></tr><tr><td align="center">45</td><td align="center">Insert</td></tr><tr><td align="center">46</td><td align="center">Num Lock</td></tr><tr><td align="center">144</td><td align="center">Num Lock</td></tr><tr><td align="center">186</td><td align="center">;:</td></tr><tr><td align="center">187</td><td align="center">=+</td></tr><tr><td align="center">188</td><td align="center">,&lt;</td></tr><tr><td align="center">189</td><td align="center">-_</td></tr><tr><td align="center">190</td><td align="center">.&gt;</td></tr><tr><td align="center">191</td><td align="center">/?</td></tr><tr><td align="center">192</td><td align="center">`~</td></tr><tr><td align="center">219</td><td align="center">[{</td></tr><tr><td align="center">220</td><td align="center">|</td></tr><tr><td align="center">221</td><td align="center">]}</td></tr><tr><td align="center">222</td><td align="center">‘“</td></tr></tbody></table><p>多媒体键：</p><table><thead><tr><th align="center">KeyCode</th><th align="center">按键</th></tr></thead><tbody><tr><td align="center">170</td><td align="center">搜索</td></tr><tr><td align="center">171</td><td align="center">收藏</td></tr><tr><td align="center">172</td><td align="center">浏览器</td></tr><tr><td align="center">173</td><td align="center">静音</td></tr><tr><td align="center">174</td><td align="center">音量减</td></tr><tr><td align="center">115</td><td align="center">音量加</td></tr><tr><td align="center">179</td><td align="center">停止</td></tr><tr><td align="center">180</td><td align="center">邮件</td></tr></tbody></table><h1 id="java-util-regex-ASCII"><a href="#java-util-regex-ASCII" class="headerlink" title="java.util.regex.ASCII"></a>java.util.regex.ASCII</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex</span><span class="token punctuation">;</span><span class="token comment">/** * Utility class that implements the standard C ctype functionality. * * @author Hong Zhang */</span><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">ASCII</span> <span class="token punctuation">{</span><span class="token comment">//...</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这是一个不能被继承的、仅有包访问权限的类。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> UPPER   <span class="token operator">=</span> <span class="token number">0x00000100</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> LOWER   <span class="token operator">=</span> <span class="token number">0x00000200</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DIGIT   <span class="token operator">=</span> <span class="token number">0x00000400</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> SPACE   <span class="token operator">=</span> <span class="token number">0x00000800</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> PUNCT   <span class="token operator">=</span> <span class="token number">0x00001000</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> CNTRL   <span class="token operator">=</span> <span class="token number">0x00002000</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> BLANK   <span class="token operator">=</span> <span class="token number">0x00004000</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> HEX     <span class="token operator">=</span> <span class="token number">0x00008000</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> UNDER   <span class="token operator">=</span> <span class="token number">0x00010000</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> ASCII   <span class="token operator">=</span> <span class="token number">0x0000FF00</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> ALPHA   <span class="token operator">=</span> <span class="token punctuation">(</span>UPPER<span class="token operator">|</span>LOWER<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> ALNUM   <span class="token operator">=</span> <span class="token punctuation">(</span>UPPER<span class="token operator">|</span>LOWER<span class="token operator">|</span>DIGIT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> GRAPH   <span class="token operator">=</span> <span class="token punctuation">(</span>PUNCT<span class="token operator">|</span>UPPER<span class="token operator">|</span>LOWER<span class="token operator">|</span>DIGIT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> WORD    <span class="token operator">=</span> <span class="token punctuation">(</span>UPPER<span class="token operator">|</span>LOWER<span class="token operator">|</span>UNDER<span class="token operator">|</span>DIGIT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> XDIGIT  <span class="token operator">=</span> <span class="token punctuation">(</span>HEX<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ctype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 00 (NUL) */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 01 (SOH) */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 02 (STX) */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 03 (ETX) */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 04 (EOT) */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 05 (ENQ) */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 06 (ACK) */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 07 (BEL) */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 08 (BS)  */</span>    SPACE<span class="token operator">+</span>CNTRL<span class="token operator">+</span>BLANK<span class="token punctuation">,</span>      <span class="token comment">/* 09 (HT)  */</span>    SPACE<span class="token operator">+</span>CNTRL<span class="token punctuation">,</span>            <span class="token comment">/* 0A (LF)  */</span>    SPACE<span class="token operator">+</span>CNTRL<span class="token punctuation">,</span>            <span class="token comment">/* 0B (VT)  */</span>    SPACE<span class="token operator">+</span>CNTRL<span class="token punctuation">,</span>            <span class="token comment">/* 0C (FF)  */</span>    SPACE<span class="token operator">+</span>CNTRL<span class="token punctuation">,</span>            <span class="token comment">/* 0D (CR)  */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 0E (SI)  */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 0F (SO)  */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 10 (DLE) */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 11 (DC1) */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 12 (DC2) */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 13 (DC3) */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 14 (DC4) */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 15 (NAK) */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 16 (SYN) */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 17 (ETB) */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 18 (CAN) */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 19 (EM)  */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 1A (SUB) */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 1B (ESC) */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 1C (FS)  */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 1D (GS)  */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 1E (RS)  */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 1F (US)  */</span>    SPACE<span class="token operator">+</span>BLANK<span class="token punctuation">,</span>            <span class="token comment">/* 20 SPACE */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 21 !     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 22 "     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 23 #     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 24 $     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 25 %     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 26 &amp;     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 27 '     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 28 (     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 29 )     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 2A *     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 2B +     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 2C ,     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 2D -     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 2E .     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 2F /     */</span>    DIGIT<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">0</span><span class="token punctuation">,</span>            <span class="token comment">/* 30 0     */</span>    DIGIT<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token comment">/* 31 1     */</span>    DIGIT<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">,</span>            <span class="token comment">/* 32 2     */</span>    DIGIT<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">,</span>            <span class="token comment">/* 33 3     */</span>    DIGIT<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">,</span>            <span class="token comment">/* 34 4     */</span>    DIGIT<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">,</span>            <span class="token comment">/* 35 5     */</span>    DIGIT<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">6</span><span class="token punctuation">,</span>            <span class="token comment">/* 36 6     */</span>    DIGIT<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">7</span><span class="token punctuation">,</span>            <span class="token comment">/* 37 7     */</span>    DIGIT<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">,</span>            <span class="token comment">/* 38 8     */</span>    DIGIT<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">9</span><span class="token punctuation">,</span>            <span class="token comment">/* 39 9     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 3A :     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 3B ;     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 3C &lt;     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 3D =     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 3E &gt;     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 3F ?     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 40 @     */</span>    UPPER<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">,</span>           <span class="token comment">/* 41 A     */</span>    UPPER<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">11</span><span class="token punctuation">,</span>           <span class="token comment">/* 42 B     */</span>    UPPER<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">12</span><span class="token punctuation">,</span>           <span class="token comment">/* 43 C     */</span>    UPPER<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">13</span><span class="token punctuation">,</span>           <span class="token comment">/* 44 D     */</span>    UPPER<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">14</span><span class="token punctuation">,</span>           <span class="token comment">/* 45 E     */</span>    UPPER<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">15</span><span class="token punctuation">,</span>           <span class="token comment">/* 46 F     */</span>    UPPER<span class="token operator">+</span><span class="token number">16</span><span class="token punctuation">,</span>               <span class="token comment">/* 47 G     */</span>    UPPER<span class="token operator">+</span><span class="token number">17</span><span class="token punctuation">,</span>               <span class="token comment">/* 48 H     */</span>    UPPER<span class="token operator">+</span><span class="token number">18</span><span class="token punctuation">,</span>               <span class="token comment">/* 49 I     */</span>    UPPER<span class="token operator">+</span><span class="token number">19</span><span class="token punctuation">,</span>               <span class="token comment">/* 4A J     */</span>    UPPER<span class="token operator">+</span><span class="token number">20</span><span class="token punctuation">,</span>               <span class="token comment">/* 4B K     */</span>    UPPER<span class="token operator">+</span><span class="token number">21</span><span class="token punctuation">,</span>               <span class="token comment">/* 4C L     */</span>    UPPER<span class="token operator">+</span><span class="token number">22</span><span class="token punctuation">,</span>               <span class="token comment">/* 4D M     */</span>    UPPER<span class="token operator">+</span><span class="token number">23</span><span class="token punctuation">,</span>               <span class="token comment">/* 4E N     */</span>    UPPER<span class="token operator">+</span><span class="token number">24</span><span class="token punctuation">,</span>               <span class="token comment">/* 4F O     */</span>    UPPER<span class="token operator">+</span><span class="token number">25</span><span class="token punctuation">,</span>               <span class="token comment">/* 50 P     */</span>    UPPER<span class="token operator">+</span><span class="token number">26</span><span class="token punctuation">,</span>               <span class="token comment">/* 51 Q     */</span>    UPPER<span class="token operator">+</span><span class="token number">27</span><span class="token punctuation">,</span>               <span class="token comment">/* 52 R     */</span>    UPPER<span class="token operator">+</span><span class="token number">28</span><span class="token punctuation">,</span>               <span class="token comment">/* 53 S     */</span>    UPPER<span class="token operator">+</span><span class="token number">29</span><span class="token punctuation">,</span>               <span class="token comment">/* 54 T     */</span>    UPPER<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span>               <span class="token comment">/* 55 U     */</span>    UPPER<span class="token operator">+</span><span class="token number">31</span><span class="token punctuation">,</span>               <span class="token comment">/* 56 V     */</span>    UPPER<span class="token operator">+</span><span class="token number">32</span><span class="token punctuation">,</span>               <span class="token comment">/* 57 W     */</span>    UPPER<span class="token operator">+</span><span class="token number">33</span><span class="token punctuation">,</span>               <span class="token comment">/* 58 X     */</span>    UPPER<span class="token operator">+</span><span class="token number">34</span><span class="token punctuation">,</span>               <span class="token comment">/* 59 Y     */</span>    UPPER<span class="token operator">+</span><span class="token number">35</span><span class="token punctuation">,</span>               <span class="token comment">/* 5A Z     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 5B [     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 5C \     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 5D ]     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 5E ^     */</span>    PUNCT<span class="token operator">|</span>UNDER<span class="token punctuation">,</span>            <span class="token comment">/* 5F _     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 60 `     */</span>    LOWER<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">,</span>           <span class="token comment">/* 61 a     */</span>    LOWER<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">11</span><span class="token punctuation">,</span>           <span class="token comment">/* 62 b     */</span>    LOWER<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">12</span><span class="token punctuation">,</span>           <span class="token comment">/* 63 c     */</span>    LOWER<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">13</span><span class="token punctuation">,</span>           <span class="token comment">/* 64 d     */</span>    LOWER<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">14</span><span class="token punctuation">,</span>           <span class="token comment">/* 65 e     */</span>    LOWER<span class="token operator">+</span>HEX<span class="token operator">+</span><span class="token number">15</span><span class="token punctuation">,</span>           <span class="token comment">/* 66 f     */</span>    LOWER<span class="token operator">+</span><span class="token number">16</span><span class="token punctuation">,</span>               <span class="token comment">/* 67 g     */</span>    LOWER<span class="token operator">+</span><span class="token number">17</span><span class="token punctuation">,</span>               <span class="token comment">/* 68 h     */</span>    LOWER<span class="token operator">+</span><span class="token number">18</span><span class="token punctuation">,</span>               <span class="token comment">/* 69 i     */</span>    LOWER<span class="token operator">+</span><span class="token number">19</span><span class="token punctuation">,</span>               <span class="token comment">/* 6A j     */</span>    LOWER<span class="token operator">+</span><span class="token number">20</span><span class="token punctuation">,</span>               <span class="token comment">/* 6B k     */</span>    LOWER<span class="token operator">+</span><span class="token number">21</span><span class="token punctuation">,</span>               <span class="token comment">/* 6C l     */</span>    LOWER<span class="token operator">+</span><span class="token number">22</span><span class="token punctuation">,</span>               <span class="token comment">/* 6D m     */</span>    LOWER<span class="token operator">+</span><span class="token number">23</span><span class="token punctuation">,</span>               <span class="token comment">/* 6E n     */</span>    LOWER<span class="token operator">+</span><span class="token number">24</span><span class="token punctuation">,</span>               <span class="token comment">/* 6F o     */</span>    LOWER<span class="token operator">+</span><span class="token number">25</span><span class="token punctuation">,</span>               <span class="token comment">/* 70 p     */</span>    LOWER<span class="token operator">+</span><span class="token number">26</span><span class="token punctuation">,</span>               <span class="token comment">/* 71 q     */</span>    LOWER<span class="token operator">+</span><span class="token number">27</span><span class="token punctuation">,</span>               <span class="token comment">/* 72 r     */</span>    LOWER<span class="token operator">+</span><span class="token number">28</span><span class="token punctuation">,</span>               <span class="token comment">/* 73 s     */</span>    LOWER<span class="token operator">+</span><span class="token number">29</span><span class="token punctuation">,</span>               <span class="token comment">/* 74 t     */</span>    LOWER<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span>               <span class="token comment">/* 75 u     */</span>    LOWER<span class="token operator">+</span><span class="token number">31</span><span class="token punctuation">,</span>               <span class="token comment">/* 76 v     */</span>    LOWER<span class="token operator">+</span><span class="token number">32</span><span class="token punctuation">,</span>               <span class="token comment">/* 77 w     */</span>    LOWER<span class="token operator">+</span><span class="token number">33</span><span class="token punctuation">,</span>               <span class="token comment">/* 78 x     */</span>    LOWER<span class="token operator">+</span><span class="token number">34</span><span class="token punctuation">,</span>               <span class="token comment">/* 79 y     */</span>    LOWER<span class="token operator">+</span><span class="token number">35</span><span class="token punctuation">,</span>               <span class="token comment">/* 7A z     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 7B {     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 7C |     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 7D }     */</span>    PUNCT<span class="token punctuation">,</span>                  <span class="token comment">/* 7E ~     */</span>    CNTRL<span class="token punctuation">,</span>                  <span class="token comment">/* 7F (DEL) */</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>index</th><th>value</th></tr></thead><tbody><tr><td>0 (00)</td><td>0x00002000</td></tr><tr><td>1 (01)</td><td>0x00002000</td></tr><tr><td>2 (02)</td><td>0x00002000</td></tr><tr><td>3 (03)</td><td>0x00002000</td></tr><tr><td>4 (04)</td><td>0x00002000</td></tr><tr><td>5 (05)</td><td>0x00002000</td></tr><tr><td>6 (06)</td><td>0x00002000</td></tr><tr><td>7 (07)</td><td>0x00002000</td></tr><tr><td>8 (08)</td><td>0x00002000</td></tr><tr><td>9 (09)</td><td>0x00006800</td></tr><tr><td>10 (0A)</td><td>0x00002800</td></tr><tr><td>11 (0B)</td><td>0x00002800</td></tr><tr><td>12 (0C)</td><td>0x00002800</td></tr><tr><td>13 (0D)</td><td>0x00002800</td></tr><tr><td>14 (0E)</td><td>0x00002000</td></tr><tr><td>15 (0F)</td><td>0x00002000</td></tr><tr><td>16 (10)</td><td>0x00002000</td></tr><tr><td>17 (11)</td><td>0x00002000</td></tr><tr><td>18 (12)</td><td>0x00002000</td></tr><tr><td>19 (13)</td><td>0x00002000</td></tr><tr><td>20 (14)</td><td>0x00002000</td></tr><tr><td>21 (15)</td><td>0x00002000</td></tr><tr><td>22 (16)</td><td>0x00002000</td></tr><tr><td>23 (17)</td><td>0x00002000</td></tr><tr><td>24 (18)</td><td>0x00002000</td></tr><tr><td>25 (19)</td><td>0x00002000</td></tr><tr><td>26 (1A)</td><td>0x00002000</td></tr><tr><td>27 (1B)</td><td>0x00002000</td></tr><tr><td>28 (1C)</td><td>0x00002000</td></tr><tr><td>29 (1D)</td><td>0x00002000</td></tr><tr><td>30 (1E)</td><td>0x00002000</td></tr><tr><td>31 (1F)</td><td>0x00002000</td></tr><tr><td>32 (20)</td><td>0x00004800</td></tr><tr><td>33 (21)</td><td>0x00001000</td></tr><tr><td>34 (22)</td><td>0x00001000</td></tr><tr><td>35 (23)</td><td>0x00001000</td></tr><tr><td>36 (24)</td><td>0x00001000</td></tr><tr><td>37 (25)</td><td>0x00001000</td></tr><tr><td>38 (26)</td><td>0x00001000</td></tr><tr><td>39 (27)</td><td>0x00001000</td></tr><tr><td>40 (28)</td><td>0x00001000</td></tr><tr><td>41 (29)</td><td>0x00001000</td></tr><tr><td>42 (2A)</td><td>0x00001000</td></tr><tr><td>43 (2B)</td><td>0x00001000</td></tr><tr><td>44 (2C)</td><td>0x00001000</td></tr><tr><td>45 (2D)</td><td>0x00001000</td></tr><tr><td>46 (2E)</td><td>0x00001000</td></tr><tr><td>47 (2F)</td><td>0x00001000</td></tr><tr><td>48 (30)</td><td>0x00008400</td></tr><tr><td>49 (31)</td><td>0x00008401</td></tr><tr><td>50 (32)</td><td>0x00008402</td></tr><tr><td>51 (33)</td><td>0x00008403</td></tr><tr><td>52 (34)</td><td>0x00008404</td></tr><tr><td>53 (35)</td><td>0x00008405</td></tr><tr><td>54 (36)</td><td>0x00008406</td></tr><tr><td>55 (37)</td><td>0x00008407</td></tr><tr><td>56 (38)</td><td>0x00008408</td></tr><tr><td>57 (39)</td><td>0x00008409</td></tr><tr><td>58 (3A)</td><td>0x00001000</td></tr><tr><td>59 (3B)</td><td>0x00001000</td></tr><tr><td>60 (3C)</td><td>0x00001000</td></tr><tr><td>61 (3D)</td><td>0x00001000</td></tr><tr><td>62 (3E)</td><td>0x00001000</td></tr><tr><td>63 (3F)</td><td>0x00001000</td></tr><tr><td>64 (40)</td><td>0x00001000</td></tr><tr><td>65 (41)</td><td>0x0000810A</td></tr><tr><td>66 (42)</td><td>0x0000810B</td></tr><tr><td>67 (43)</td><td>0x0000810C</td></tr><tr><td>68 (44)</td><td>0x0000810D</td></tr><tr><td>69 (45)</td><td>0x0000810E</td></tr><tr><td>70 (46)</td><td>0x0000810F</td></tr><tr><td>71 (47)</td><td>0x00000110</td></tr><tr><td>72 (48)</td><td>0x00000111</td></tr><tr><td>73 (49)</td><td>0x00000112</td></tr><tr><td>74 (4A)</td><td>0x00000113</td></tr><tr><td>75 (4B)</td><td>0x00000114</td></tr><tr><td>76 (4C)</td><td>0x00000115</td></tr><tr><td>77 (4D)</td><td>0x00000116</td></tr><tr><td>78 (4E)</td><td>0x00000117</td></tr><tr><td>79 (4F)</td><td>0x00000118</td></tr><tr><td>80 (50)</td><td>0x00000119</td></tr><tr><td>81 (51)</td><td>0x0000011A</td></tr><tr><td>82 (52)</td><td>0x0000011B</td></tr><tr><td>83 (53)</td><td>0x0000011C</td></tr><tr><td>84 (54)</td><td>0x0000011D</td></tr><tr><td>85 (55)</td><td>0x0000011E</td></tr><tr><td>86 (56)</td><td>0x0000011F</td></tr><tr><td>87 (57)</td><td>0x00000120</td></tr><tr><td>88 (58)</td><td>0x00000121</td></tr><tr><td>89 (59)</td><td>0x00000122</td></tr><tr><td>90 (5A)</td><td>0x00000123</td></tr><tr><td>91 (5B)</td><td>0x00001000</td></tr><tr><td>92 (5C)</td><td>0x00001000</td></tr><tr><td>93 (5D)</td><td>0x00001000</td></tr><tr><td>94 (5E)</td><td>0x00001000</td></tr><tr><td>95 (5F)</td><td>0x00001100</td></tr><tr><td>96 (60)</td><td>0x00001000</td></tr><tr><td>97 (61)</td><td>0x0000820A</td></tr><tr><td>98 (62)</td><td>0x0000820B</td></tr><tr><td>99 (63)</td><td>0x0000820C</td></tr><tr><td>100 (64)</td><td>0x0000820D</td></tr><tr><td>101 (65)</td><td>0x0000820E</td></tr><tr><td>102 (66)</td><td>0x0000820F</td></tr><tr><td>103 (67)</td><td>0x00000210</td></tr><tr><td>104 (68)</td><td>0x00000211</td></tr><tr><td>105 (69)</td><td>0x00000212</td></tr><tr><td>106 (6A)</td><td>0x00000213</td></tr><tr><td>107 (6B)</td><td>0x00000214</td></tr><tr><td>108 (6C)</td><td>0x00000215</td></tr><tr><td>109 (6D)</td><td>0x00000216</td></tr><tr><td>110 (6E)</td><td>0x00000217</td></tr><tr><td>111 (6F)</td><td>0x00000218</td></tr><tr><td>112 (70)</td><td>0x00000219</td></tr><tr><td>113 (71)</td><td>0x0000021A</td></tr><tr><td>114 (72)</td><td>0x0000021B</td></tr><tr><td>115 (73)</td><td>0x0000021C</td></tr><tr><td>116 (74)</td><td>0x0000021D</td></tr><tr><td>117 (75)</td><td>0x0000021E</td></tr><tr><td>118 (76)</td><td>0x0000021F</td></tr><tr><td>119 (77)</td><td>0x00000220</td></tr><tr><td>120 (78)</td><td>0x00000221</td></tr><tr><td>121 (79)</td><td>0x00000222</td></tr><tr><td>122 (7A)</td><td>0x00000223</td></tr><tr><td>123 (7B)</td><td>0x00001000</td></tr><tr><td>124 (7C)</td><td>0x00001000</td></tr><tr><td>125 (7D)</td><td>0x00001000</td></tr><tr><td>126 (7E)</td><td>0x00001000</td></tr><tr><td>127 (7F)</td><td>0x00002000</td></tr></tbody></table><h1 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h1><ol><li>最高位的说明：ASCII码128个，用<strong>7位</strong>二进制数可表示，第8位（最高位）是<strong>奇偶校验位</strong>，用于纠错。</li><li>Windows系统上能运行的Python程序，传到Linux系统上就无法运行，<code>python main.py</code>报错：<font color="red">SyntaxError: Non-ASCII character ‘\xe8’ in file main.py on line 7, but no encoding declared; see <a href="http://python.org/dev/peps/pep-0263/">http://python.org/dev/peps/pep-0263/</a> for details</font>。解决方法是：在文件头添加一行：<code># -*- coding: utf-8 -*-</code>，即可正常运行。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 计算机科学基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ASCII </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
